<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Os on Hello World</title>
    <link>https://harryho.github.io/os/index.xml</link>
    <description>Recent content in Os on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Thu, 04 May 2017 14:59:31 +1100</lastBuildDate>
    <atom:link href="https://harryho.github.io/os/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Ubuntu 16 server note</title>
      <link>https://harryho.github.io/os/ubuntu-server-16/</link>
      <pubDate>Thu, 04 May 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-16/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup Ubuntu 16 LTS Server. If you are looking for the information for Ubuntu 14, please go to the page &lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14/&#34;&gt;Ubuntu 14 server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with Ubuntu, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with basic bash/shell command&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-server&#34;&gt;Things to do after installing Ubuntu server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ufw-setup&#34;&gt;UFW setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ufw enable
sudo ufw allow 80/tcp
sudo ufw allow ssh
sudo ufw allow 443/tcp
sudo ufw allow 8000/tcp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!!! For production environment, SSH should be secured by the CA&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install openssh-server 

# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.factory-defaults
sudo chmod a-w /etc/ssh/sshd_config.factory-defaults

# use any editor to update sshd_config 
sudo nano /etc/ssh/sshd_config 

# uncomment  PasswordAuthentication yes to allow remote password login
# Password authentication is only for test environment

# setup ssh auto-start onboot
sudo update-rc.d ssh defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-the-software-properties-common-package&#34;&gt;!!! Install the software-properties-common Package&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install software-properties-common python-software-properties
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;time-zone-setup&#34;&gt;Time Zone setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg-reconfigure tzdata
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tmux&#34;&gt;Install tmux&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install tmux

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Most useful tmux commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Ctrl+b &amp;ldquo; — split pane horizontally.&lt;/p&gt;

&lt;p&gt;Ctrl+b % — split pane vertically.&lt;/p&gt;

&lt;p&gt;Ctrl+b arrow key — switch pane.&lt;/p&gt;

&lt;p&gt;Hold Ctrl+b, don’t release it and hold one of the arrow keys — resize pane.&lt;/p&gt;

&lt;p&gt;Ctrl+b c — &amp;copy;reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b , — rename reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b n — move to the (n)ext window.&lt;/p&gt;

&lt;p&gt;Ctrl+b p — move to the (p)revious window.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-git&#34;&gt;Install git&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ce-ubuntu-16-lts&#34;&gt;install docker CE (Ubuntu 16 LTS)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
# Update the apt package index
sudo apt-get update

# Install packages to allow apt to use a repository over HTTPS
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

# Add Docker’s official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -



# Verify the last 8 characters of the fingerprint.
sudo apt-key fingerprint xxxxxxxx


#   set up the stable repository
sudo add-apt-repository \
   &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&amp;quot;

# apt update 
sudo apt-get update

# install docker CE
sudo apt-get install docker-ce

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;Install JDK 8&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Downlaod the JDK from Oracle website.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup environment&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install oracle-java8-set-default

sudo su
cat &amp;gt;&amp;gt; /etc/environment &amp;lt;&amp;lt;EOL
JAVA_HOME=/usr/lib/jvm/java-8-oracle
JRE_HOME=/usr/lib/jvm/java-8-oracle/jre
EOL
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test JDK with a simple HelloWorld program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Calendar;

class HelloWorld {
    public static void main(String[] args) {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1;
        int day = cal.get(Calendar.DATE);
        int hour = cal.get(Calendar.HOUR_OF_DAY);
        int minute = cal.get(Calendar.MINUTE);
        String username = System.getProperty(&amp;quot;user.name&amp;quot;);
        System.out.println(username+ &amp;quot;: Hello World! &amp;quot;);
        System.out.println(year + &amp;quot;/&amp;quot; + month + &amp;quot;/&amp;quot; + day + &amp;quot; &amp;quot; + hour + &amp;quot;:&amp;quot; + minute);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile and run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;javac HelloWorld.java
java HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;Install nodejs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Nodejs 8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install latest npm, yarn and ts&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install -g npm
sudo npm install -g typescript
sudo mpm install -g yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php&#34;&gt;Install PHP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add new repo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y python-software-properties
sudo add-apt-repository -y ppa:ondrej/php
sudo apt-get update -y

apt-cache pkgnames | grep php7.2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 1: Install LAMP stack&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y apache2
sudo apt-get install -y php7.2 libapache2-mod-php7.2 php7.2-cli php7.2-common \
    php7.2-mbstring php7.2-gd php7.2-intl php7.2-xml php7.2-mysql php7.1-mcrypt php7.2-zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 2: Install LEMP stack&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y nginx
sudo apt-get install -y php7.2 php7.2-fpm php7.2-cli php7.2-common php7.2-mbstring \
    php7.2-gd php7.2-intl php7.2-xml php7.2-mysql php7.1-mcrypt php7.2-zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Disable Apache and Nginx if you install both&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl disable apache2.service
sudo systemctl disable nginx.service 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-python2-python3&#34;&gt;Install Python2, Python3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu has python2 installed by default&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get python-pip 
sudo apt-get install python3-pip
sudo apt-get install python3-dev python-dev

### Install virtualenv 
sudo pip install virtualenv
sudo pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Go&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://storage.googleapis.com/golang/go1.4.linux-amd64.tar.gz


# check hash
shasum -a 256 go*linux-amd64.tar.gz

# install tar ball
sudo tar -C /usr/local -xvzf go1.9.2.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOROOT by overwriting the file &lt;code&gt;/etc/environment&lt;/code&gt; with following content&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PATH=&amp;quot;/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&amp;quot;
JAVA_HOME=&amp;quot;/usr/lib/jvm/java-8-oracle&amp;quot;
JRE_HOME=&amp;quot;/usr/lib/jvm/java-8-oracle/jre&amp;quot;
GOROOT=&amp;quot;/usr/local/go&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOPATH by adding following lines to the end of &lt;code&gt;.profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOPATH=&amp;quot;$HOME/ws/go&amp;quot;
export GOBIN=&amp;quot;$GOPATH/bin&amp;quot;
export PATH=&amp;quot;$GOPATH/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple &lt;code&gt;hello.go&lt;/code&gt; file to test&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main                                                        
                                                                    
import (                                                            
    &amp;quot;fmt&amp;quot;                                                           
    &amp;quot;log&amp;quot;                                                           
    &amp;quot;os/user&amp;quot;                                                       
)

func main(){                                                        
    user, err := user.Current()                                 
    if err != nil {                                             
        log.Fatal(err)                                      
    }                                                                 
    fmt.Printf(user.Name + &amp;quot; said : Hello World! \n&amp;quot; )      
}                                                                   
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run $GOPATH/src/hello.go
go install $GOPATH/src/hello.go
$GOBIN/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-clang-cmake&#34;&gt;Install clang &amp;amp; cmake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install clang
sudo apt-get install cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;Install Rust&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -f -L https://static.rust-lang.org/rustup.sh -O
$ sh rustup.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 7 Server note</title>
      <link>https://harryho.github.io/os/centos-server-7/</link>
      <pubDate>Fri, 03 Feb 2017 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-server-7/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup CentOS 7 Server. If you are looking for the information for CentOS 14, please install CentOS desktop version at first, and you can follow &lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14/&#34;&gt;Ubuntu 14 server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with CentOS, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with basic bash/shell command&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-centos-server&#34;&gt;Things to do after installing CentOS server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;firewall-setup&#34;&gt;Firewall setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo firewall-cmd --permanent --add-port=22/tcp
sudo firewall-cmd --permanent --add-port=21/tcp
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-port=443/tcp
sudo firewall-cmd --permanent --add-port=8080/tcp

sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!!! For production environment, SSH should be secured by the CA&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install SSH if it is not done yet&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# yum install openssh openssh-server openssh-clients openssl-libs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Configure SSH&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
sudo chmod a-w /etc/ssh/sshd_config.ori

# use any editor to update sshd_config 
sudo vi /etc/ssh/sshd_config 

# uncomment PasswordAuthentication yes to allow remote password login
# Password authentication is only for test environment

# setup ssh auto-start onboot
sudo systemctl restart sshd 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-time-zone-if-it-is-incorrect&#34;&gt;Update Time Zone if it is incorrect&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls -l /etc/localtime # check the time zone

sudo timedatectl list | grep New_York # find the time zone by the city
sudo timedatectl set-timezone America/New_York
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-git&#34;&gt;Install Git&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Option 1: You can use &lt;code&gt;yum&lt;/code&gt; to install git, but it is quite out-of-date. The version of git is 1.8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install git
git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 2: Download the latest stable release of Git and compile the software from source. (&lt;strong&gt;Recommended&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;install-build-tools&#34;&gt;Install build tools&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &amp;quot;Development Tools&amp;quot;

sudo yum install gettext-devel openssl-devel perl-CPAN perl-devel zlib-devel libcurl-devel expat-devel

sudo yum install yum-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-the-latest-release&#34;&gt;Download the latest release&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/git/git/archive/v2.x.x.tar.gz -O git.tar.gz
tar -zxf git.tar.gz
cd git-*
make configure
./configure --prefix=/usr/local
sudo make install
git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-a-better-vim&#34;&gt;Setup a better Vim&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum isntall vim-enhanced

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tmux&#34;&gt;Install Tmux&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install tmux
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Most useful tmux commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Ctrl+b &amp;ldquo; — split pane horizontally.&lt;/p&gt;

&lt;p&gt;Ctrl+b % — split pane vertically.&lt;/p&gt;

&lt;p&gt;Ctrl+b arrow key — switch pane.&lt;/p&gt;

&lt;p&gt;Hold Ctrl+b, don’t release it and hold one of the arrow keys — resize pane.&lt;/p&gt;

&lt;p&gt;Ctrl+b c — &amp;copy;reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b , — rename reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b n — move to the (n)ext window.&lt;/p&gt;

&lt;p&gt;Ctrl+b p — move to the (p)revious window.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-python-3&#34;&gt;Install python 3&lt;/h3&gt;

&lt;p&gt;You will only find Python 2 on CentOS by default. In order to install the latest python3, we need to install &lt;code&gt;IUS&lt;/code&gt; to which stands for Inline with Upstream Stable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum -y install https://centos7.iuscommunity.org/ius-release.rpm
sudo yum -y install python36u

## Install development package
sudo yum -y insall python-devel python36u-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;Install nodejs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Nodejs 6.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum -y install nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Nodejs 8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Upgrade NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install -g npm
sudo npm install -g typescript
sudo mpm install -g yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ce-centos-7&#34;&gt;install docker CE (CentOS 7)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# add repo
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

# check docker.list
yum list docker-ce --showduplicates | sort -r

# install docker engine
sudo yum install docker-ce

docker -v 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;Install JDK 8&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Downlaod the JDK from Oracle website.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; wget --no-cookies --no-check-certificate --header &amp;quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-secureb ackup-cookie&amp;quot; \ &amp;quot;http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.rpm&amp;quot;

rpm -Uvh  jdk-8u151-linux-x64.rpm

java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test JDK with a simple HelloWorld program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Calendar;

class HelloWorld {
    public static void main(String[] args) {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1;
        int day = cal.get(Calendar.DATE);
        int hour = cal.get(Calendar.HOUR_OF_DAY);
        int minute = cal.get(Calendar.MINUTE);
        String username = System.getProperty(&amp;quot;user.name&amp;quot;);
        System.out.println(username+ &amp;quot;: Hello World! &amp;quot;);
        System.out.println(year + &amp;quot;/&amp;quot; + month + &amp;quot;/&amp;quot; + day + &amp;quot; &amp;quot; + hour + &amp;quot;:&amp;quot; + minute);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile and run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;javac HelloWorld.java
java HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Go&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /tmp
curl -LO https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz

# check hash
shasum -a 256 go*linux-amd64.tar.gz

# install tar ball
sudo tar -C /usr/local -xvzf go1.9.2.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOROOT&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/profile.d
# Create a path.sh script
sudo vi path.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Copy following code into &lt;code&gt;path.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup local GOBIN, GOPATH&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOBIN=&amp;quot;$HOME/projects/go/bin&amp;quot;
export GOPATH=&amp;quot;$HOME/projects/go/src&amp;quot;
export PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple &lt;code&gt;hello.go&lt;/code&gt; file to test&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main                                                        
                                                                    
import (                                                            
    &amp;quot;fmt&amp;quot;                                                           
    &amp;quot;log&amp;quot;                                                           
    &amp;quot;os/user&amp;quot;                                                       
)                                                                   
                                                                    
func main(){                                                        
    user, err := user.Current()                                 
    if err != nil {                                             
            log.Fatal(err)                                      
    }                                                            
    fmt.Printf(user.Name + &amp;quot; said : Hello World! \n&amp;quot; )            
}                                                                   
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run $GOPATH/hello.go
go install $GOPATH/hello.go
$GOBIN/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-cmake&#34;&gt;Install Cmake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install epel-release
sudo yum install cmake3
sudo ln -s /usr/bin/cmake3 /usr/bin/cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;Install Rust&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -f -L https://static.rust-lang.org/rustup.sh -O
sh rustup.sh
rustc --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php-7&#34;&gt;Install PHP 7&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;install and enable EPEL and Remi repository&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;install &lt;code&gt;yum-utils&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install yum-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Enable PHP 7 repo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum-config-manager --enable remi-php72  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install PHP&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install php php-mcrypt php-cli php-gd php-curl php-mysql \
    php-ldap php-zip php-fileinfo 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-clang&#34;&gt;Install clang&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install llvm
sudo yum install clang

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi setup</title>
      <link>https://harryho.github.io/os/raspberrypi-notes/</link>
      <pubDate>Fri, 04 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/raspberrypi-notes/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;*This note is mainly to record how to setup Raspberry Pi as file server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You know what Raspberry Pi is. &lt;a href=&#34;https://www.raspberrypi.org&#34;&gt;Raspbery Pi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;You have a Raspberry Pi with &amp;lsquo;NOOBS&amp;rsquo; preinstalled SD Card&lt;/li&gt;
&lt;li&gt;RPi is short for Raspberry Pi&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;raspberry-pi-model&#34;&gt;Raspberry Pi model&lt;/h2&gt;

&lt;p&gt;I only have the RPi 1 model B in place. It is a birthday gift. There is no wifi or bluetooth support on this model. I have to connect this tiny box to my switch via cable all the time. It commes a smal problem, because my switch is far away from my laptop, monitor, keyboard, etc. and I don&amp;rsquo;t have a cable long enough to connect the RPi and switch.&lt;/p&gt;

&lt;p&gt;The clumsy way to do it is move my kits near to the swtich, but I am too lazy to move things around. I choose to use remote access to control RPi from my laptop.&lt;/p&gt;

&lt;p&gt;First thing first, I need to setup ssh server, and change the configuration to allow password login, also make it auto-start after reboot. To do so I just need monitor and keyboard.&lt;/p&gt;

&lt;h3 id=&#34;connect-the-rpi-with-monitor-and-keyboard&#34;&gt;Connect the RPi with monitor and keyboard&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Reset pasword of &lt;code&gt;pi&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo passwd pi
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install openssh-server 

# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
sudo chmod a-w /etc/ssh/sshd_config.ori

# use any editor to update sshd_config 
sudo nano /etc/ssh/sshd_config 

# uncomment  PasswordAuthentication yes to allow remote password login

# setup ssh auto-start onboot
sudo update-rc.d ssh defaults

# reboot
sudo reboot

# Check the ssh is running after reboot
sudo service ssh status 

# You should see sth as below
[ok] sshd is running

# Turn off Pi 
sudo poweroff
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;connect-rpi-with-the-switch&#34;&gt;Connect RPi with the switch&lt;/h3&gt;

&lt;p&gt;After all above is done, you can disconnect the monitor and keyboard, and connect the RPi with the switch (or modem). Once the power is on, you should be able to access the RPi from you PC or laptop.&lt;/p&gt;

&lt;h3 id=&#34;find-the-ip-address&#34;&gt;Find the ip address&lt;/h3&gt;

&lt;p&gt;Access the admin home page of my switch via browser. e.g. &lt;code&gt;http://192.168.0.1/index.html&lt;/code&gt; (The actual URL depends on your switch or modem. You can find it on the label sticked on the back or bottom.)&lt;/p&gt;

&lt;p&gt;If you forget your password to login the admin page, you still can reset your swtich. If your modem is 3 in 1 model including switch, you need to make sure you have the &lt;code&gt;ID and Password&lt;/code&gt; to access the internet before you reset it.&lt;/p&gt;

&lt;p&gt;After you login successfully, you just need to expand main menus find a menu called &lt;code&gt;DHCP&lt;/code&gt;. e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Basic Setup
|__ ...
Advanced Setup
|__ ...
Device
|__ DHCP
|__ WAN
|__ ...

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will see table as blew.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Hostname&lt;/th&gt;
&lt;th&gt;MAC Address&lt;/th&gt;
&lt;th&gt;IP Address&lt;/th&gt;
&lt;th&gt;Expires In&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;PC-1&lt;/td&gt;
&lt;td&gt;2f:3f:09:ff:f5:24&lt;/td&gt;
&lt;td&gt;192.168.1.7&lt;/td&gt;
&lt;td&gt;x hours x mins&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PC-2&lt;/td&gt;
&lt;td&gt;c0:9f:05:ff:f9:14&lt;/td&gt;
&lt;td&gt;192.168.1.8&lt;/td&gt;
&lt;td&gt;x hours x mins&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Laptop-1&lt;/td&gt;
&lt;td&gt;b0:f6:05:e2:f5:99&lt;/td&gt;
&lt;td&gt;192.168.1.9&lt;/td&gt;
&lt;td&gt;x hours x mins&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;raspberrypi&lt;/td&gt;
&lt;td&gt;a5:06:b2:07:c4:03&lt;/td&gt;
&lt;td&gt;192.168.1.10&lt;/td&gt;
&lt;td&gt;x hours x mins&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;access-rpi-with-your-laptop&#34;&gt;Access RPi with your laptop&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;From Linux or Mac&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;ssh username@192.168.1.10

# type yes 
# type the password 

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;For widnows&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You need to download a ssh tool. If you installed git before, you would have it on your computer. Otherwise, you need to install a SSH too. I recommend you to install &lt;a href=&#34;http://www.putty.org/&#34;&gt;Putty&lt;/a&gt;. It is free and quite handy.&lt;/p&gt;

&lt;p&gt;After you install and launch Putty, you just need to type in the IP address &lt;code&gt;192.168.1.10&lt;/code&gt; to the field &lt;code&gt;Host Name (or IP Address)&lt;/code&gt;, then click button &lt;code&gt;Open&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# type in pi as login user
login as: pi

# type in password
pi@192.168.1.10&#39;s password: 

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;access-rpi-via-vnc&#34;&gt;Access RPi via VNC&lt;/h3&gt;

&lt;h4 id=&#34;setup-vnc-server-on-rpi&#34;&gt;Setup VNC server on RPi&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get install tightvncserver
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Launch VNC server and setup pasword&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/usr/bin/tightvncserver

# Setup password for remote access. 
# View only password is not necessary

# setup VNC server to auto start
sudo update_rc.d tightvncserver defaults

sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-vnc-client-on-your-pc&#34;&gt;Setup VNC client on your PC&lt;/h4&gt;

&lt;p&gt;Linux: Use &lt;strong&gt;xRDP&lt;/strong&gt;
I believe you can figure it out yourself, if you used Linux as desktop.&lt;/p&gt;

&lt;p&gt;Windows: Install &lt;a href=&#34;https://www.realvnc.com/en/connect/download/viewer/&#34;&gt;RealVNC Viewer&lt;/a&gt; as VNC client&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Laucn the VNC Viewer and create a new connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/raspberry-pi-vnc-new-client.jpg&#34; alt=&#34;Screen-VNC-new-connection&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type in the VNC password and you can login RPi with GUI&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/raspberry-pi-vnc.jpg&#34; alt=&#34;Screenshot-VNC&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;setup-samba-to-share-files&#34;&gt;Setup Samba to share files&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Attach external storage to your RPi. The capacity of preinstalled SD card has only 8G space, so I attached my portal hard drives to RPi. You can attach the PC hard drive, USD or another SD card via adapter. It is really up to what you have in place.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;I want to make one as public share folder without authentication, and the other needs password to access.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;If your hard drive or USB is &lt;code&gt;ntfs&lt;/code&gt;, the RPi might not recognize your device. You can simply install a package to make it work.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install ntfs-3g
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Get drive info after attach two hard drives&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo lsblk

# You will see the tree structure of drives
NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda           8:0    0   1.8T  0 disk
└─sda1        8:1    0   1.8T  0 part /media/mydrive1
└─sda2        8:2    0   870G  0 part /media/mydrive2
mmcblk0     179:0    0   7.4G  0 disk
├─mmcblk0p1 179:1    0    56M  0 part /boot
└─mmcblk0p2 179:2    0   7.4G  0 part /
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Remount the drives with proper name&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo su # switch to root
cd /media
umount mydrive1 
umount mydrive2

mkdir public private 
mount -o rw /sda/sda1 public
mount -o rw /sda/sda2 private
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Change &lt;code&gt;fstab&lt;/code&gt; to support read and write permission&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/fstab
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Add following lines to the end of file. The format type of my drives are &lt;code&gt;ntfs&lt;/code&gt;. If you are not sure what file system type is, you can run this command to check &lt;code&gt;sudo lsblk -o name,fstype&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;/dev/sda1  /media/public       ntfs   nofail,noatime    0    0
/dev/sda2  /media/private       ntfs   nofail,noatime    0    0
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;After you complete above changes, you will see the difference by typing the command &lt;code&gt;sudo lsblk&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;NAME        MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda           8:0    0   1.8T  0 disk
└─sda1        8:1    0   1.8T  0 part /media/public
└─sda2        8:2    0   870G  0 part /media/private
mmcblk0     179:0    0   7.4G  0 disk
├─mmcblk0p1 179:1    0    56M  0 part /boot
└─mmcblk0p2 179:2    0   7.4G  0 part /
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install Samba&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get upgrade
sudo apt-get install samba samba-common-bin
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup Samba configuration&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;backup-original-config-and-update-the-config&#34;&gt;Backup original config and update the config&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo su
cd /etc/samba
cp smb.conf smb.conf.ori

nano smb.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;change-the-line-wins-support-no-to-wins-support-yes&#34;&gt;Change the line &lt;code&gt;#   wins support = no&lt;/code&gt; to &lt;code&gt;wins support = yes&lt;/code&gt;&lt;/h4&gt;

&lt;h4 id=&#34;add-follow-lines-to-end-of-the-file&#34;&gt;Add follow lines to end of the file&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[public]
comment = Share Folder
path = /media/public
create mask = 0665
directory mask = 0775
read only = no
guest ok = yes

[private]
comment = Private Folder
path = /media/private
valid users = root,smbu
force user = smbu
create mask = 0777
directory mask = 0777
writable = yes
browsable = yes
read only = no
guest ok = yes
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;add-new-user-smbu-for-remote-access-in-case-you&#34;&gt;Add new user &lt;code&gt;smbu&lt;/code&gt; for remote access. In case you&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo useradd smbu
sudo passwd smbu
sudo usermod -a -G root smbu
sudo smbpasswd smbu # setup pasword for remote access
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Access the network folder&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;linx&#34;&gt;Linx&lt;/h4&gt;

&lt;p&gt;I have no any problem to access the both netowrk drives via Linux.&lt;/p&gt;

&lt;h4 id=&#34;windows&#34;&gt;Windows&lt;/h4&gt;

&lt;p&gt;It took me some time to make it work for me. There are some bullet points, which may help you for trouble shooting.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Please use &lt;code&gt;WORKGROUP&lt;/code&gt; instead of domain.&lt;/li&gt;
&lt;li&gt;Please keep name of workgroup as &lt;code&gt;WORKGROUP&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Turn on the network discovery&lt;br /&gt;
&lt;code&gt;Control Panel &amp;gt; All Control Panel Items&amp;gt; Network and Sharing Cente &amp;gt; Advanced sharing settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Reboot the PC or laptop&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;get-accurate-version-of-rpi-model&#34;&gt;Get accurate version of RPi model&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Get the revision code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat /etc/cpuinfo
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Check the table below to find your model&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MODEL AND PI REVISION&lt;/th&gt;
&lt;th&gt;MEMORY&lt;/th&gt;
&lt;th&gt;HARDWARE REVISION CODE FROM CPUINFO&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Model B Revision 1.0&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;0002&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model B Revision 1.0 + ECN0001 (no fuses, D14 removed)&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;0003&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model B Revision 2.0 Mounting holes&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;0004 0005 0006&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model A Mounting holes&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;0007,0008,0009&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model B Revision 2.0 Mounting holes&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;000d 000e 000f&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model B+&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;0010&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Compute Module&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;0011&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Model A+&lt;/td&gt;
&lt;td&gt;256MB&lt;/td&gt;
&lt;td&gt;0012&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pi 2 Model B&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;td&gt;a01041 (Sony, UK) a21041 (Embest, China)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PiZero&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;900092(no camera connector) 900093(camera connector)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pi 3 Model B&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;td&gt;a02082 (Sony, UK) a22082 (Embest, China)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;PiZero W&lt;/td&gt;
&lt;td&gt;512MB&lt;/td&gt;
&lt;td&gt;9000c1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- server setup</title>
      <link>https://harryho.github.io/os/ubuntu-server-14/</link>
      <pubDate>Fri, 04 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-14/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup Ubuntu server. If you are not familiar with Ubuntu system, please install Ubuntu desktop version at first, and you can follow &lt;a href=&#34;https://harryho.github.io/os/ubuntu-desktop-14/&#34;&gt;Ubuntu deskstop setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;brief-history&#34;&gt;Brief history&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with Ubuntu, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with bash/shell script&lt;/li&gt;
&lt;li&gt;You are going to setup Ubuntu server for special purpose. e.g. Web server, file server, or data center.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-server&#34;&gt;Things to do after installing Ubuntu server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ufw-setup&#34;&gt;UFW setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ufw enable
sudo ufw allow 80/tcp
sudo ufw allow ssh
sudo ufw allow 443/tcp
sudo ufw allow 8000/tcp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!!! For production environment, SSH should be secured by the CA&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install openssh-server 

# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.factory-defaults
sudo chmod a-w /etc/ssh/sshd_config.factory-defaults

# use any editor to update sshd_config 
sudo nano /etc/ssh/sshd_config

# uncomment  PasswordAuthentication yes to allow remote password login
# Password authentication is only for test environment

# setup ssh auto-start onboot
sudo update-rc.d ssh defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;time-zone-setup&#34;&gt;Time Zone setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg-reconfigure tzdata
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-software-properties-common-package&#34;&gt;install software-properties-common Package&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;software-properties-common python-software-properties
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install byobu screen&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install byobu screen 

# Launch byobu
byobu
# F9 for help 
# change the keyboard for putty &amp;gt; Termianl &amp;gt; Keyboard &amp;gt; Function keys and keyboard &amp;gt; Xterm R6
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ubuntu-14-04-lts&#34;&gt;install docker (Ubuntu 14.04 LTS)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# add GBG Key
sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

# add docker.list
sudo touch /etc/apt/sources.list.d/docker.list
#  repo 
sudo vi /etc/apt/sources.list.d/docker.list
#  add following repo ath the end of file 
deb https://apt.dockerproject.org/repo ubuntu-trusty main

# apt update 
sudo apt-get update
# verify 
apt-cache policy docker-engine
# install docker engine

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-vim&#34;&gt;build vim&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I am not &lt;code&gt;vi&lt;/code&gt; fans, but if you really want to use &lt;code&gt;vi&lt;/code&gt;. I wiil suggest spend some time to dig into &lt;a href=&#34;http://vimawesome.com&#34;&gt;&lt;code&gt;vimawesome&lt;/code&gt;&lt;/a&gt; and play around with those plugins. Some are pretty cool, e.g. &lt;code&gt;NERD Tree&lt;/code&gt;, &amp;lsquo;youcompleteme&lt;code&gt;,&lt;/code&gt;syntastic`, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get build-dep vim
git clone https://github.com/vim/vim.git ~/forks/vim
cd ~/forks/vim
## make distclean &amp;amp;&amp;amp; make clean
## build script from this repo
make VIMRUNTIMEDIR=/usr/share/vim/vim74
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;Install JDK 8&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you are going to run Java Web Application on server, or you are going to setup Hadoop environment.&lt;/li&gt;
&lt;li&gt;Setup oracle jdk ppa and install oracle jdk from ppa.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo apt-get install oracle-java8-set-default     
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-openjdk&#34;&gt;Install OpenJdk&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Setup OpenJdk ppa and install it from ppa&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update 
sudo apt-get install openjdk-8-jdk
sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Type in a number to select a Java version.&lt;/li&gt;
&lt;li&gt;set default Java Compiler&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo update-alternatives --config javac
java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to stop mysql auto startup&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Comment out the line below in the config file ( /etc/init/mysql.conf )&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start on (net-device-up&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;Install nodejs&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://deb.nodesource.com/setup | sudo bash -
sudo apt-get install nodejs
sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setup NPM&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use default &lt;code&gt;npm&lt;/code&gt; on your server after you install nodejs, but there is a better way to manage your &lt;code&gt;npm&lt;/code&gt;. It allows you easily to control your packages.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 
mkdir .node_modules
npm config list
npm config get prefix
# /usr or  /usr/share
npm config set prefix $HOME/.node_modules
cat .npmrc
# /home/hho/.node_modules
npm install -g npm
which npm
# /usr/bin/npm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Open .profile add following to end of file&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=&amp;quot;$HOME/.node_modules_global/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nvm&#34;&gt;Install nvm&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using &lt;code&gt;nvm&lt;/code&gt; is no longer popular and best option. I will recommand you just use &lt;code&gt;npm&lt;/code&gt; to manage eveything you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get install build-essential libssl-dev
curl https://raw.githubusercontent.com/creationix/nvm/v0.16.1/install.sh | sh
source ~/.profile
nvm ls-remote
nvm install 0.11.13
nvm use 0.11.13
nvm alias default 0.11.13
nvm use default
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php-compser&#34;&gt;Install PHP &amp;amp; Compser&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install curl php5-cli git
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-python2-python3&#34;&gt;Install Python2, Python3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu has python instaleld by default&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get python pip 
sudo apt-get install python3 pip3
### Install virtualenv 
sudo pip install virtualenv
sudo pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://storage.googleapis.com/golang/go1.4.linux-amd64.tar.gz
sudo tar -xzf go1.4.linux-amd64.tar.gz -C /usr/local

sudo vi /etc/profile
GOPATH=&amp;quot;/YOUR/USER/HOME/go&amp;quot;
GOROOT=&amp;quot;/usr/local/go&amp;quot;
PATH=$GOROOT/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-r&#34;&gt;Install R&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-key adv –keyserver keyserver.ubuntu.com –recv-keys E084DAB9
sudo add-apt-repository ‘deb http://star-www.st-andrews.ac.uk/cran/bin/linux/ubuntu trusty/’
sudo apt-get update
sudo apt-get install r-base
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;Install Rust&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -sf -L https://static.rust-lang.org/rustup.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Uninstall Rust&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /usr/local/lib/rustlib/uninstall.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop setup &amp; dual boot </title>
      <link>https://harryho.github.io/os/ubuntu-desktop-14/</link>
      <pubDate>Sun, 10 Jan 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-desktop-14/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help beginner install Ubuntu desktop at the first time. If you are looking for setup of Ubuntu server, please check out the blog &amp;ndash; &lt;a href=&#34;https://harryho.github.io/blog/ubuntu-server-14/&#34;&gt;Ubuntu server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;brief-history&#34;&gt;Brief history&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;where-to-install-linux&#34;&gt;Where to install Linux?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to answer this quetion really depends user&amp;rsquo;s computer knowledge and skills. Basically Linux can be installed on almost any PC, laptop, embedded device or tablet. So there are some suggestions for people with different level skills.*&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Beginner &amp;ndash; If you never install any operating system, or you never use &lt;code&gt;Unix/Linux&lt;/code&gt; system, but still want to try something new. You should consider to install virtual machine on your computer and then install ubuntu on the virtual machine. &lt;a href=&#34;http://www.vmware.com&#34;&gt;VMware&lt;/a&gt; and &lt;a href=&#34;https://www.virtualbox.org&#34;&gt;VirtualBox&lt;/a&gt; are both very good products.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Intermediate &amp;ndash; If you have installed operating system, or you have used &lt;code&gt;Unix/Linux&lt;/code&gt; system, you can install it on your old machine. or for safe side try it on virtual machine at first.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Expert &amp;ndash; You can try dual boot or multiple boot operating systems on your PC. Install 10-20 operating systems on a PC with 400GB harddisk should be alright. The only problem I encountered before some operating system can not find all proper drivers to support the all devices on your PC/laptop, such as the drivers for camera, touchpad, wifi, etc. It would take you so much time to research and try.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-virtual-machine&#34;&gt;Install virtual machine&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let&amp;rsquo;s get our hands dirty&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install VirtualBox/VMWare on your computer. IMO, use VirtualBox is quite handy and save you much effort, even it is free. Because in the real environment, you will use remote tool to do your admin task instead of really handling a phyiscal machine. And you can try another Liunx OS on VirtualBox.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you lean to commercial product, you can choose VMWare. There is free trial option for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;which-version-to-choose&#34;&gt;Which version to choose&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ubuntu has variant versions for you to download and play. I will suggest you always pick LTS (Long Term Support) version to download. As beginner, desktop version is the best option for you to start.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After downlaod the &lt;a href=&#34;https://www.ubuntu.com/download/desktop&#34;&gt;Ubuntu Desktop&lt;/a&gt; from the internet. You will get a &lt;code&gt;ISO&lt;/code&gt; file like this: ubuntu-xx.xx.x-desktop-amd64.iso, if your OS is 64 bits, or something like ubuntu-xx.xx.x-desktop-x86.iso for 32 bits.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-unbuntu&#34;&gt;Install Unbuntu&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Before you install, you had better to backup anything on the device which you are going to install, and chcek your internet is working properly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a new virtual machine within VMWare or VirtualBox. The processes on both softwares are almost the same.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Assume your new virtual machine will sit in &lt;code&gt;C:\vbox&lt;/code&gt; for VirtualBox or &lt;code&gt;C:\vm&lt;/code&gt; for VMware&lt;/li&gt;
&lt;li&gt;Create a new machine from menu. Type in the name of vm. e.g. Unbuntu&lt;/li&gt;
&lt;li&gt;Select the type of operating system: Linux&lt;/li&gt;
&lt;li&gt;You can choose Ubuntu(&lt;sup&gt;32&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt; bit ) or something else. It doesn&amp;rsquo;t matter. We don&amp;rsquo;t use any built-in xxx.iso files from VirtualBox or VMware. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the memory size for the Unbuntu. 2G RAM is minimal requirement. I prefer up to 30% of total memory size. And then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Create a virtual hard drive now&amp;rdquo;, and then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select defaut VDI, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Dynamically allocated&amp;rdquo;, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Choose the location of Unbuntu. e.g. c:\vbox\ubuntu\ubuntu.vdi or c:\vm\ubuntu\ubuntu.vmdk. Select the size of VDI\VMDK file. At least 8G. I&amp;rsquo;d like to select 16 or more. Then a Unbuntu virtual machine has been created.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Config the Unbuntu hardware setting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VirtualBox toolbar, there is a &lt;code&gt;Start&lt;/code&gt; button. Click &lt;code&gt;Start&lt;/code&gt;, then go the Storage item.&lt;/li&gt;
&lt;li&gt;Under the Storage Tree section, there is Empty CD icon. Click the Empty icon.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Under the Attributes section, click the CD icon at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Start&lt;/code&gt;button on the toolbar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VMWare&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VMware, you can find CD/DVD button on the tab page of new virtual machine.&lt;/li&gt;
&lt;li&gt;Click the CD button at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Power on this virtual machine&lt;/code&gt; option on the tab page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ubuntu provides a friendly and beautiful UI to complete installation instead of ugly and terrified terminal, as geek&amp;rsquo;s computer shown on sci-fi movie. If you choose VMWare or VirtulBox as machine, you can open the page of &lt;a href=&#34;https://www.ubuntu.com/download/desktop/install-ubuntu-desktop&#34;&gt;installation steps&lt;/a&gt; on your browser. You just need to follow the instruction step by step, it will take you around 1-2 hours to complete.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-desktop&#34;&gt;Things to do after installing Ubuntu desktop&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu desktop is very nice and friendly, even it is different from your Windows. Basically you don&amp;rsquo;t need any geek&amp;rsquo;s skill to play around on Uubuntu desktop and use it as your Windows. There are tons of free software you can download from Ubuntu Software Center, so you don&amp;rsquo;t worry where to find the softwre you need. Considering you are the beginner, some suggestions and caveats will be highlighted below, but none of these needs command line and terminal.

&lt;ul&gt;
&lt;li&gt;Disable the system upgrade automatically to new LTS version.&lt;/li&gt;
&lt;li&gt;Disable the system power manager to suspend your PC.&lt;/li&gt;
&lt;li&gt;Disable the system problem report service.&lt;/li&gt;
&lt;li&gt;Enbale the third party packages.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;Utity Tweek&lt;/code&gt; to help you customize your UI.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-don-t-do&#34;&gt;Things don&amp;rsquo;t do&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Something below is suggested not to do, because I assume you are Ubuntu or Linux beginner. I don&amp;rsquo;t wnat you to feel frustrated at the beginning of your Ubuntu desktop journey. It is the same that 99.9999% of Windows user should not delete cache files &lt;code&gt;C:\Windows&lt;/code&gt; or change the system registry, expect they really understand what they are doing.&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t optimzie your memory setting. It is really not a big deal.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t try to change your &lt;code&gt;Utity&lt;/code&gt; to other Ubuntu desktop, e.g. Ubuntu MATE, Ubuntu Xface, etc.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t follow the tips online to use &lt;code&gt;root&lt;/code&gt; in terminal before you fully understand what the commands do.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t try to mount other drives on your computer, if it is mounted automatically.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;dual-boot-or-multiple-boot-with-windows&#34;&gt;Dual boot or multiple boot with Windows&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;This section is for  people who want to install multiple operating system on the actual PC, instead of virtual machine as above. Obviously, it is not for beginner user, but everyone must experience the first time to go to higher level. For safe side, I strongly suggest you should use a old PC or redundant one to test it.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For dual or multiple boot, you need to make sure your disk is formatted as GPT. It will save you so much effort later to install other operating systems.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I suggest Windows first approach for multiple boot systems, because that is easier than the other way around. After install Windows on your PC, you need to shrink Windows disk space for other operating systems with &lt;code&gt;Disk Management&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you need to prepare Ubuntu USB installer or DVD. Place the USB stick or DVD in the appropriate drive, reboot the machine and instruct the BIOS/UEFI to boot-up from the DVD/USB by pressing a special function key (usually F12, F10 or F2 depending on the vendor specifications).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you install Ubuntu, you need to select a separate &lt;code&gt;boot&lt;/code&gt; drive for dual boot systems. Usually you just need to pick the drive &lt;code&gt;efi&lt;/code&gt; as &lt;code&gt;boot&lt;/code&gt; drive. Your drives will be supposed to format with GPT as following structure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;sda
  +----sda1        nfts               500M         Windows recovery
  +----sda2        efi       /boot    100M         grub2 , Windows boot manager
  +----sda3                  /        10M            
  +----sda4        ntfs      /      40000M         Window 7/8/10
  +----sda5                  swap   &amp;lt;Double size of your RAM size&amp;gt;   
  +----sda6        ext4      /      20000M         Ubuntu 14 desktop
  +----sda7        ext4      /      20000M         Fedora 20 desktop           
  +----sda8        ext4      /      20000M         CentOS 6 desktop
  +----sda9        ext4      /      20000M         OpenSuse desktop
  + ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting-windows-always-boots-first&#34;&gt;Troubleshooting: Windows always boots first&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Change BIOS&lt;/strong&gt;
* Start your PC by pressing a pressing a special function key (usually F12, F10 or F2 depending on the vendor specifications).
* Some PC&amp;rsquo;s BIOS has &lt;code&gt;BOOT&lt;/code&gt; tab option, open the &lt;code&gt;BOOT&lt;/code&gt; tab, you will find the &lt;code&gt;OS Boot Manager&lt;/code&gt;. It is the simplest way to fix the issue. If your PC&amp;rsquo;s BIOS has no such setting feature, you need to check the next section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Change the Windows Boot Manager&lt;/strong&gt;
* Login windows with common prompt
* Restart windows, meanwhile press shift key
* In the options page, choose change to other options
* Troubleshooting
* Command Prompt
* Login in Windows with Common prompt
* Use BCDEdit to change windows boot manager. Change to boot ubuntu at first&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM backup
bcdedit /enum &amp;gt; X:\Users\public\documents\bcdedit.txt
REM change the bootmgr 
bcdedit /set {bootmgr} path \EFI\ubuntu\grubx64.efi
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;After you reboot system, you will see the Grub 2 menu as follow.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;                             GNU GRUB version 2.0
---------------------------------------------------------------------------------- 
| Ubuntu 
| Advanced options for Unbuntu
| Windows Boot Manager ( on /dev/sda2 )
| Fedora 20
| Advanced options for Fedora 20
| OpenSuse 
| Advanced options for OpenSuse
| ....

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop, extra tools</title>
      <link>https://harryho.github.io/os/ubuntu-desktop-14-extra-tools/</link>
      <pubDate>Sun, 10 Jan 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-desktop-14-extra-tools/</guid>
      <description>

&lt;h2 id=&#34;how-to-install-ubunt-14&#34;&gt;How to install Ubunt 14&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/os/ubuntu-desktop-14/&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-chrome&#34;&gt;Install chrome&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i google-chrome-stable_current_amd64.deb
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-umake&#34;&gt;Install Umake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:ubuntu-desktop/ubuntu-make
sudo apt-get update
sudo apt-get install ubuntu-make
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-ides-via-umake&#34;&gt;Install IDEs via Umake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;umake ide pycharm
umake web visual-studio-code
umake android android-studio
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;general-prerequest&#34;&gt;General prerequest&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sed -i &amp;quot;/^# deb .*partner/ s/^# //&amp;quot; /etc/apt/sources.list &amp;amp;&amp;amp; apt-get update
sudo apt-get install geany byobu p7zip-full gimp pdfshuffler scribus \
filezilla lftp ubuntu-restricted-extras vlc pyrenamer \
imagemagick hugin darktable skype avidemux
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;remove-games&#34;&gt;Remove Games&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
sudo apt-get remove aisleriot gnome-mahjongg gnomine gnome-sudoku

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;geany-themes&#34;&gt;Geany themes&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd ~/Downloads
git clone https://github.com/codebrainz/geany-themes.git
mkdir ~/.config/geany/colorschemes
cp ~/Downloads/geany-themes/colorschemes/* ~/.config/geany/colorschemes/
rm -rf ~/Downloads/geany-themes
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;cloud&#34;&gt;Cloud&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;from: &lt;a href=&#34;http://www.webupd8.org/2014/06/install-copycom-client-in-ubuntu-or.html&#34;&gt;http://www.webupd8.org/2014/06/install-copycom-client-in-ubuntu-or.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:paolorotolo/copy
sudo apt-get update
sudo apt-get install copy
sudo /opt/copy-client/CopyAgent -installOverlay
nautilus -q
copy
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;data-processing&#34;&gt;Data processing&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9
sudo add-apt-repository &#39;deb http://star-www.st-andrews.ac.uk/cran/bin/linux/ubuntu trusty/&#39;
sudo apt-get update
sudo apt-get install spyder python-numpy python-numpy-doc sqlite3 \
python-scipy python-matplotlib python-matplotlib-doc r-base git-core
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;don-t-forget-to-use-your-own-name-and-email&#34;&gt;Don&amp;rsquo;t forget to use your own name and email!&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &amp;quot;Your Name&amp;quot;
git config --global user.email &amp;quot;your@email.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;maps-and-gis-software&#34;&gt;Maps and GIS software&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install python-software-properties
sudo add-apt-repository &#39;deb http://qgis.org/debian trusty main&#39;
gpg --keyserver keyserver.ubuntu.com --recv DD45F6C3
gpg --export --armor DD45F6C3 | sudo apt-key add -
sudo apt-get update
sudo apt-get install qgis python-qgis qgis-plugin-grass grass-gui grass-doc \
libgdal1-dev libproj-dev gpsbabel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;latex-type-stuff&#34;&gt;Latex type stuff&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install jabref ibus-qt4 texlive texlive-latex-extra \
texlive-humanities texlive-fonts-extra latex-beamer
sudo apt-get -f install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;package-download-and-install-texmaker-and-rstudio&#34;&gt;Package download and install (Texmaker and RStudio)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget http://www.xm1math.net/texmaker/texmaker_ubuntu_14.04_4.4.1_amd64.deb
wget http://download1.rstudio.org/rstudio-0.98.1102-amd64.deb
sudo dpkg -i *.deb
sudo rm *.deb
 
sudo apt-get update &amp;amp;&amp;amp; apt-get upgrade
sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/update-manager/release-upgrades
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 2</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</link>
      <pubDate>Mon, 24 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This article will continue the topic of Windows command &amp;amp; hotkeys. Part-1 shows you common hotkeys and short command lines for &lt;code&gt;Run&lt;/code&gt; windnow dialog. The rest of this topic will focus on the advanced commands and how to create a batch script with all those commands.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let me clarify something first. Advanced command here does not mean that commands here are very complicated or much more powerful than common ones, which have been shown in the Part-1. Here we call them advanced, because they are used by experienced users to complete their given tasks, and those commands are used seldom by majority people. Comparing with Part-1, advanced commands have some specific features which allow them to do some special jobs, which usually are done by system admin. Advanced command is known as Admin command as well.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;advanced-commands-and-usages&#34;&gt;Advanced commands and usages&lt;/h2&gt;

&lt;h3 id=&#34;attrib&#34;&gt;attrib&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;attrib +h a.txt&lt;/code&gt; to hide file and use &lt;code&gt;attrib -h a.txt&lt;/code&gt; to unhide it.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;attrib +r a.txt&lt;/code&gt; to change file to read-only and reverse the action by &lt;code&gt;-r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;env&#34;&gt;env&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;env&amp;gt;env.txt &amp;amp; notepad env.txt&lt;/code&gt; Display all environment variable in text file&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;set&#34;&gt;set&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;set path&lt;/code&gt; to display &lt;strong&gt;PATH&lt;/strong&gt; environment variable, which is useful to check if your &lt;strong&gt;PATH&lt;/strong&gt; has been setup properly.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;set /P a=b&lt;/code&gt; to set b as value to variable a. It will be used in bat/cmd script.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;net&#34;&gt;net&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;get sub-commands&lt;/strong&gt; &amp;ndash; type &lt;code&gt;net /?&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;    [ ACCOUNTS | COMPUTER | CONFIG | CONTINUE | FILE | GROUP | HELP |
     HELPMSG | LOCALGROUP | PAUSE | SESSION | SHARE | START | 
     STATISTICS | STOP | TIME | USE | USER | VIEW ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;get sub-command&amp;rsquo;s help&lt;/strong&gt; &amp;ndash; type &lt;code&gt;net [sub-command] /?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;net view&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net view&lt;/code&gt; to show a list of computers and network devices on the network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net statistics&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net statistics workstation(/server)&lt;/code&gt; to show the network statistics log for the Server or Workstation service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net localgroup&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net localgroup&lt;/code&gt; to show a list of local user group on your computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net user&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;net user %username%&lt;/code&gt; to retrieve your user information&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;net user adminstrator&lt;/code&gt; to check the status of administrator&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;net user administrator /active:yes&lt;/code&gt; to activate adminstrator and inactivate by replacing &lt;code&gt;yes&lt;/code&gt; with&lt;code&gt;no&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net accounts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt;&lt;/code&gt; to show current user&amp;rsquo;s password and login requirement.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt; /minpwlen:6&lt;/code&gt; to set password minimum length requirement for user.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt; /maxpwage:30&lt;/code&gt; to force user to reset password every 30 days, or use &lt;code&gt;unlimited&lt;/code&gt; to replace the number &lt;code&gt;30&lt;/code&gt;, then user&amp;rsquo;s password will never expire.&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;net accounts /unique:5&lt;/code&gt; to prevent user reuse previous passwords, and default value is 5.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;runas&#34;&gt;runas&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;start command prompt as administrator
runas /user:yourpc\administrator &amp;quot;cmd&amp;quot;

REM ##BE CAREFUL When you try the command below ##  
REM it shows how to create, delete files as admin under C drive root.  
runas /user:yourpc\administrator &amp;quot;cmd /C type \&amp;quot;\&amp;quot;&amp;gt;c:\z.txt &amp;amp; dir c:\z.txt &amp;amp; pause &amp;amp; del c:\z.txt &amp;quot; 

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sc&#34;&gt;sc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;sc command usage: &lt;code&gt;sc &amp;lt;server&amp;gt; [command] [service name] &amp;lt;option1&amp;gt; &amp;lt;option2&amp;gt;...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;sc query&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic usage&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM query all service on the PC -- &amp;lt;yourpcname&amp;gt;
sc \\&amp;lt;yourpcname&amp;gt; query

REM query status of given service 
sc query &amp;lt;servicename&amp;gt;
sc query state= all | find &amp;quot;SERVICE_NAME&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Retrieve service name and state. type parameter can be used twice in some case.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state = {active | inactive | all}&lt;/li&gt;
&lt;li&gt;type = {driver | service | all}&lt;/li&gt;
&lt;li&gt;type= {own | share | interact | kernel | filesys | rec | adapt}&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The command options for SC are case sensitive.&lt;/li&gt;
&lt;li&gt;If you run this inside a batch file, the percent signs (e.g. at %s) need to be doubled.&lt;/li&gt;
&lt;li&gt;Extra space within option is necessary. e.g. &lt;code&gt;state= all&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM query all services which are inactive and type are driver and kernel
sc query state= inactive type= driver type= kernel

REM get all services name
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc query state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @echo %s 

REM get all services name and state
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc query state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=4&amp;quot; %t in (&#39;sc query %s ^| find &amp;quot;STATE&amp;quot; &#39;) 
        do @echo %s -- %t
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc queryex&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM get all services name and pid
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=3&amp;quot; %t in (&#39;sc queryex %s ^| find &amp;quot;PID&amp;quot; &#39;) 
        do @echo %s -- %t
)

REM get all services name and pid
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=3&amp;quot; %t in (&#39;sc queryex %s ^| find &amp;quot;BINARY_PATH_NAME&amp;quot; &#39;) 
        do @echo %s -- %t
) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc qc&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM get all services name and path
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(     
    for /f &amp;quot;tokens=3 delims==:&amp;quot; %t in (&#39;sc qc %s ^| find &amp;quot;BINARY_PATH_NAME&amp;quot; &#39;) 
    do @echo %s -- C:%t
)   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc start/stop&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM start and stop service
sc start  &amp;lt;servicename&amp;gt;

REM query service state
sc query &amp;lt;servicename&amp;gt;

REM stop service
sc stop  &amp;lt;servicename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ipconfig&#34;&gt;ipconfig&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;ipconfig /all&lt;/code&gt; to display full configuration information.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;ipconfig /flushdns&lt;/code&gt;    to purge the DNS Resolver cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tasklist&#34;&gt;tasklist&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;syntax&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tasklist[.exe] [/s computer] [/u domain\user [/p password]] [/fo {TABLE|LIST|CSV}] [/nh] [/fi FilterName [/fi FilterName2 [ &amp;hellip; ]]] [/m [ModuleName] | /svc | /v&lt;/li&gt;
&lt;li&gt;FilterName: Status, Imagename,&lt;/li&gt;
&lt;li&gt;Find process by pid&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM get the mysqld process info
tasklist /v /fo list /fi &amp;quot;imagename eq mysqld.exe&amp;quot;

REM get the mongod process info
tasklist /v /fo list /fi &amp;quot;imagename eq mongod.exe&amp;quot;

REM get list of running processes under given user  
tasklist /fi &amp;quot;USERNAME ne NT AUTHORITY\SYSTEM&amp;quot; /fi &amp;quot;STATUS eq running&amp;quot;

REM get list of non-responding processes under given user   
tasklist /fi &amp;quot;USERNAME ne NT AUTHORITY\SYSTEM&amp;quot; /fi &amp;quot;STATUS eq not responding&amp;quot; 

REM get process by PID
tasklist /fi &amp;quot;pid eq 4444&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;netstat&#34;&gt;netstat&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;netstat&lt;/code&gt; to get all ports and IP addresses, which are connected or listening&lt;/li&gt;
&lt;li&gt;Type PID of process which is using some given port, such as 80, 443, 22, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;netstat -ano | find &amp;quot;:80&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Type the application which is using given port.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for /f &amp;quot;tokens=5&amp;quot; %p in ( &#39;netstat -ano ^| find &amp;quot;:80&amp;quot;&#39;) do @(     
    for /f &amp;quot;tokens=1&amp;quot; %s in ( &#39;tasklist /fi &amp;quot;pid eq %p&amp;quot; ^| find &amp;quot;%p&amp;quot;&#39;) do @(
        echo PID:%p -- APP: %s
    ) 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;taskkill&#34;&gt;taskkill&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;syntax&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;taskkill [/S system [/U username [/P [password]]]]
         { [/FI filter] [/PID processid | /IM imagename] } [/F] [/T]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;samples&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM force to stop notepad application and any children processes
taskkill /F /IM notepad.exe /

REM stop process by PID and any children processes
taskkill /PID 1230 /PID 1241 /PID 1253 /T

REM force to stop applications which PID is equal or greater than 10000
REM and windows title of app is not starts with untitle
taskkill /F /FI &amp;quot;PID ge 1000&amp;quot; /FI &amp;quot;WINDOWTITLE ne untitle*&amp;quot;
taskkill /F /FI &amp;quot;USERNAME eq NT AUTHORITY\SYSTEM&amp;quot; /IM notepad.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;schtasks&#34;&gt;schtasks&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax &amp;ndash; &lt;code&gt;schtasks /parameter [arguments]&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;parameters include &amp;ndash; Change, Create, Delete, End, Query, Run, ShowSid&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;schtasks&lt;/code&gt; to list all scheduled tasks&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;schtasks /Query&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM get help info                                                                 
SCHTASKS /Query /?

REM query tasks which are scheduled on given system
SCHTASKS /Query /S system /U user /P

REM get list of tasks in details
SCHTASKS /Query /FO LIST /V     

REM get table of running tasks in details and output to csv file 
SCHTASKS /Query /FO TABLE /NH /V | find &amp;quot;Running&amp;quot;&amp;gt;running_tasks.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;combination-of-multiple-commands&#34;&gt;Combination of multiple commands&lt;/h2&gt;

&lt;p&gt;As we know, usually each command is designed to complete some specific actions, but sometimes we have to combine different commands together to achieve what we want. There are a few ways to put the commands together.&lt;/p&gt;

&lt;h3 id=&#34;use-to-simply-connect-to-commands&#34;&gt;Use &lt;code&gt;&amp;amp;&lt;/code&gt; to simply connect to commands&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Delete a folder with non-empty subdirectries &lt;code&gt;test&lt;/code&gt; we need to combine &lt;code&gt;del&lt;/code&gt; and &lt;code&gt;rd&lt;/code&gt; together. Actually we can two commands one by one, but we can put it together and just execute once.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM show the folder with non-empty subdirectries
tree test

\path\to\TEST
+---subdir1
|       file1
|       file2
|       
\---subdir2
        file1
        file2

del /s/q test &amp;amp; rd /s/q
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-pipeline-to-setup-a-channel-between-commands-pass-the-data-through-the-commands&#34;&gt;Use pipeline &lt;code&gt;|&lt;/code&gt; to setup a channel between commands pass the data through the commands.&lt;/h3&gt;

&lt;p&gt;Actually you have seen many samples from above advanced commands. I just use a very simple one to show you how it works.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM write some content to a text file all.txt
echo aaa&amp;gt;all.txt &amp;amp; echo mark aaa &amp;gt;&amp;gt;all.txt &amp;amp; echo mark bbb&amp;gt;&amp;gt;all.txt

REM retrive lines start with mark and write them to mark.txt
cat all.txt | find &amp;quot;mark&amp;quot;&amp;gt;mark.txt
cat mark.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-for-loop-to-combine-commands-please-check-the-samples-above&#34;&gt;Use &lt;code&gt;for&lt;/code&gt; loop to combine commands. Please check the samples above.&lt;/h3&gt;

&lt;h2 id=&#34;script&#34;&gt;script&lt;/h2&gt;

&lt;h3 id=&#34;basic-hello-world-script&#34;&gt;Basic hello world script&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can find it on the &lt;a href=&#34;https://harryho.github.io&#34;&gt;home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;customized-script&#34;&gt;Customized script&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This sample script is used to query temp folders and clean up log files within the folder.&lt;/li&gt;
&lt;li&gt;We assume you have multiple temp folders in different drives and You want to delete log files inside temp folder and its subdirectries from time to time. Before you delete them, you want to list all files first. You can confirm if you want to delete them or not.&lt;/li&gt;
&lt;li&gt;Create a file named clean-logs.bat&lt;/li&gt;
&lt;li&gt;Copy the sample code and tailor anything you want.&lt;/li&gt;
&lt;li&gt;The sample shows you how to create interative command script and how to combine commands together with the condition statement and loop statement.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
@echo off

@echo.&amp;quot;Assumption: You have multiple temp folders in different drives. You want to delete log files inside temp folder and its subdirectries. Before you delete them, you want to list all files first, file list should be sorted by time&amp;quot;

:again 
   echo &amp;quot;Checking all Recycle bins for each drive ...&amp;quot;
   echo.-----------------------
   for /f  %%x in (&#39;wmic logicaldisk get caption  ^| find &amp;quot;:&amp;quot;&#39;) do @(
        for /f &amp;quot;tokens=*&amp;quot; %%s in (&#39;tree /f /a %%x\temp ^| find  &amp;quot;log&amp;quot; &#39;  ) do @(
            echo.%%x\temp\%%s
        )
   )

   set /p answer=Do you want to clean up log files (Y/N)?
   if /i &amp;quot;%answer:~,1%&amp;quot; EQU &amp;quot;Y&amp;quot; ( 
       @echo.Y
       goto clean
   )
   if /i &amp;quot;%answer:~,1%&amp;quot; EQU &amp;quot;N&amp;quot; ( 
       @echo.N 
       goto end 
   )  
   echo Please type Y for Yes or N for No
   goto again

:clean
    echo.&#39;deleting logs&#39;
    for /f  %%x in (&#39;wmic logicaldisk get caption  ^| find &amp;quot;:&amp;quot;&#39;) do @(
        for /f &amp;quot;tokens=*&amp;quot; %%s in (&#39;tree /f /a %%x\temp ^| find  &amp;quot;log&amp;quot; &#39;  ) do @(
            del &amp;quot;%%x\temp\%%s&amp;quot;
        )
    )

:end
    echo.&#39;exiting program&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 1</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</link>
      <pubDate>Sun, 09 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Do you want to make your friends amazed by your computer skill and praise you as genius? Or the hacker as watched in Sci-Fi movies? You don&amp;rsquo;t need Mac, Linux or other operating systems, just Windows, you can show-off and look like hacker and master of Zeroes and Ones, even you have no any idea of it. Here are some tricks by which you can make your friends&amp;rsquo; jaw drop.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-windows-command-prompt-as-hacker&#34;&gt;Start Windows command prompt as hacker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use use hotkeys to open &lt;code&gt;Run&lt;/code&gt; feature in two keystrokes: &lt;code&gt;WinKey + R&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;cmd&lt;/code&gt; and press &lt;code&gt;Enter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/windows-run-feature.png&#34; alt=&#34;Run&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;color A&lt;/code&gt; to change the color of text to &lt;strong&gt;Green&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change the title to &lt;strong&gt;Hacker Tool&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;List the folders of current directory&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\color A
C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\title Hacker Tool
C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\cd \
C:\&amp;gt;tree 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;use-other-command-prompt&#34;&gt;Use other command prompt&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cmder.net/&#34;&gt;cmder&lt;/a&gt; is an awesome product. I suggest you just choose mini version to download and install if you are not the heavy git user. There are so many built-in features you can play around.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourceforge.net/projects/console/&#34;&gt;console2&lt;/a&gt; is a very good as well. I used it for many years. I&amp;rsquo;m planning to migrate to &lt;code&gt;cmder&lt;/code&gt;, but it will take me some time to do it, because I have some customized scripts need to run in &lt;code&gt;console2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;useful-windows-hotkeys&#34;&gt;Useful Windows hotkeys&lt;/h2&gt;

&lt;p&gt;I believe the common hotkeys you should know. e.g. &lt;code&gt;Ctrl + C, Ctrl + V, Ctrl + A&lt;/code&gt;. Here the hotkeys I list below are some rarely-used but very useful hotkys.&lt;/p&gt;

&lt;h3 id=&#34;general-hotkeys&#34;&gt;General hotkeys&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + Esc&lt;/code&gt;  &amp;ndash;  Open task manager&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + R&lt;/code&gt;  &amp;ndash;  run dialog&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + D&lt;/code&gt;  &amp;ndash;  toggle &amp;lsquo;show desktop&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + L&lt;/code&gt;  &amp;ndash;  lock workstation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + E&lt;/code&gt;  &amp;ndash;  windows explorer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + R&lt;/code&gt;  &amp;ndash;  clear page cache and refresh webpage on browser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + (shift +) tab&lt;/code&gt;  &amp;ndash;  switch windows forwards (or backwards)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + F4&lt;/code&gt;  &amp;ndash;  close the selected application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F2&lt;/code&gt; , renames selected file. Also used with spreadsheet cells.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl and (+/-)&lt;/code&gt;  &amp;ndash;  zoom in or zoom out text on the editor tool&lt;/li&gt;
&lt;li&gt;Middle click a tab  &amp;ndash;  close tab&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hotkeys-for-windows-7-or-higher-version&#34;&gt;Hotkeys for Windows 7 or higher version&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WinKey + W&lt;/code&gt;  &amp;ndash;  search setting iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + Q&lt;/code&gt;  &amp;ndash;  search every iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + F&lt;/code&gt;  &amp;ndash;  search file iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + T&lt;/code&gt;  &amp;ndash;  use keyboard arrow keys to navigate dock&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + X&lt;/code&gt; - bring up laptop settings control panel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl +  N&lt;/code&gt; - new tab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + N&lt;/code&gt; - new Folder&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;common-short-command-lines-for-run-feature&#34;&gt;Common short command lines for &lt;code&gt;Run&lt;/code&gt; feature&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; &amp;ndash; start a Windows command prompt&lt;/li&gt;
&lt;li&gt;&lt;code&gt;calc&lt;/code&gt; &amp;ndash; start the calculator application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notepad&lt;/code&gt; &amp;ndash; start the notepad application&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;advanced-short-command-lines-for-run-feature&#34;&gt;Advanced short command lines for &lt;code&gt;Run&lt;/code&gt; feature&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mstsc&lt;/code&gt; &amp;ndash; start the remote desktop application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regedit&lt;/code&gt; &amp;ndash; start registry editor application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resmon&lt;/code&gt;  &amp;ndash;  awesome resource monitor - bandwidth etc (win7 or higher)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perfmon&lt;/code&gt;  &amp;ndash;  a pretty decent performance monitor (vista or higher)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;services.msc&lt;/code&gt;  &amp;ndash;  windows service management&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compmgmt.msc&lt;/code&gt;  &amp;ndash;  computer management including all other management&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eventvwr&lt;/code&gt;&amp;ndash;  windows event log viewer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;appwiz.cpl&lt;/code&gt; &amp;ndash; windows programs and features management on control panel&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;most-common-and-useful-commands&#34;&gt;Most common and useful commands&lt;/h2&gt;

&lt;p&gt;This article won&amp;rsquo;t list all commands and all usages of each command. Here I will just choose the commands and some usages of command which are useful for most people. Some advanced command will be explained in Part-2.&lt;/p&gt;

&lt;p&gt;Before you start typing any cmd, I want to share a common mistake for most beginners, including myself. We always forget to use help command before we Google a solution, when we hit some impediment or roadblock. Actually help command is the most common built-in feature within any software or tool. Learn how to use help command or find the help information is first important when we are going to learn anything new.&lt;/p&gt;

&lt;h3 id=&#34;help&#34;&gt;help&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start command prompt and type &lt;code&gt;help&lt;/code&gt;. You will get a list of command which you can use, and short decription of each command.&lt;/li&gt;
&lt;li&gt;Use help command to see and learn other commands
&lt;code&gt;
C:\&amp;gt;help
C:\&amp;gt;help cd 
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;start&#34;&gt;start&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start another &lt;code&gt;cmd&lt;/code&gt; window prompt.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pwd&#34;&gt;pwd&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;pwd&lt;/code&gt; to display current directory. All commands will use current directory as default path input if the path parameter is not specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dir&#34;&gt;dir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Displays a list of files and subdirectories in a directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;dir /a:h/a:d&lt;/code&gt; to display hidden subdirectories only&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /p/w&lt;/code&gt; to display many items per screen within wide list format&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:-s&lt;/code&gt; to display items sorted by size (biggest first)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:s&lt;/code&gt; to display items sorted by size (smallest first)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:dn&lt;/code&gt; to display items sorted by date/time  (oldest first) and name ( alphabetic)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cd-chdir&#34;&gt;cd / chdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Displays the name of or changes the current directory

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;cd&lt;/code&gt; to display the name of directory&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cd c:\windows&lt;/code&gt; to change to &lt;code&gt;c:\Windows&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cd /d D:&lt;/code&gt; to change to d driver if you have d driver&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tree&#34;&gt;tree&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;tree /f/a &amp;lt;path&amp;gt;&lt;/code&gt; to graphically display the folder structure of a drive or path.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ren-rename&#34;&gt;ren / rename&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;ren abc cba&lt;/code&gt; to ren file name from &amp;ldquo;abc&amp;rdquo; to &amp;ldquo;cba&amp;rdquo; if there is file named abc under current directory.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;*.md *.txt&lt;/code&gt; to ren all files under current directory with &lt;code&gt;md&lt;/code&gt; extension to &lt;code&gt;txt&lt;/code&gt; extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;md-mkdir&#34;&gt;md / mkdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;md a\b\c\d &amp;amp; tree a&lt;/code&gt; to create all directories once and display result as follow&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;current-directory&amp;gt;\a
|___b
    |___c
        |___d

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;copy&#34;&gt;copy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;touch test.txt &amp;amp; copy test.txt C:\User\&amp;lt;yourname&amp;gt;\&lt;/code&gt; to create a test.txt file and copy the test.txt to C:\User&amp;lt;yourname&amp;gt;\&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;xcopy&#34;&gt;xcopy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;md a\b\c &amp;amp; touch a\test.txt &amp;amp; touch a\b\test.txt &amp;amp; xcopy /s /e /q a C:\User\&amp;lt;yourname&amp;gt;\a\&lt;/code&gt; to folder a to &lt;code&gt;C:\User\&amp;lt;yourname&amp;gt;\&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;tree /f /a C:\User\&amp;lt;yourname&amp;gt;\a&lt;/code&gt; to verify the result&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;move&#34;&gt;move&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;move a b&lt;/code&gt; to move folder &lt;code&gt;a&lt;/code&gt; into folder &lt;code&gt;b&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rd-rmdir&#34;&gt;rd / rmdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;rd a&lt;/code&gt; to remove a empty directory &lt;code&gt;a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;rd /s a&lt;/code&gt; to remove a directory &lt;code&gt;a&lt;/code&gt; including all files and empty subdirectories within folder &lt;code&gt;a&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;del&#34;&gt;del&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;&lt;/strong&gt; : The item deleted by command &lt;code&gt;del&lt;/code&gt; can not be restored from &lt;strong&gt;Recyle Bin&lt;/strong&gt;. Please be careful before you use this command.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;del&lt;/code&gt; to delete files or &lt;code&gt;del *.txt&lt;/code&gt; to delete all files with &lt;code&gt;txt&lt;/code&gt; extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cls&#34;&gt;cls&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;cls&lt;/code&gt; to clean the screen&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 6/7 Multi-Boot Setup</title>
      <link>https://harryho.github.io/os/centos-fedora-desktop/</link>
      <pubDate>Fri, 10 Jan 2014 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-fedora-desktop/</guid>
      <description>

&lt;h2 id=&#34;breif-history&#34;&gt;Breif History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/#centos&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bootable-usb-preparation&#34;&gt;Bootable usb preparation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Download dvd iso from url or torrent
Use Win32 Image Writer to create usb. ( Bootice is useful tool to reformat the USB as origin )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-centos-on-virtual-machine&#34;&gt;Install CentOS on virtual machine&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Before you install, you are better to backup anything on the device which you are going to install, and chcek your internet is working properly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CentOS provide a friendly and nice installation process. If you choose VMWare or VirtulBox as machine, you can open &lt;a href=&#34;http://www.tecmint.com/centos-7-installation&#34;&gt;installation steps&lt;/a&gt; on your browser or use ipad /tablet to access this page. You just need to follow the instruction step by step, it will be done within an hour or more(it varies in computing power of PC).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;prepare-vm-for-centos&#34;&gt;Prepare VM for CentOS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a new virtual machine.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type in the name of vm. e.g. CentOS&lt;/li&gt;
&lt;li&gt;Select the type of Linux&lt;/li&gt;
&lt;li&gt;You can choose RedHat(&lt;sup&gt;32&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt; bit ) or something else. It doesn&amp;rsquo;t matter. We don&amp;rsquo;t use any built-in xxx.iso files from VirtualBox. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the memory size for the CentOS. It is up  to you. I prefer 4GB, but 2GB is necessary. And then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Create a virtual hard drive now&amp;rdquo;, and then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select defaut VDI, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Select &amp;ldquo;Dynamically allocated&amp;rdquo;, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose the location of CentOS. e.g. c:\vbox\centos\centos.vdi. Select the size of VDI file. At least 10G. I&amp;rsquo;d like to select 20 or more. Then a virtual machine of CentOS is created.&lt;/li&gt;
&lt;li&gt;Choose the location of CentOS. e.g. c:\vm\centos\centos.vmdk. Select the size of VMDK file. At least 10G. I&amp;rsquo;d like to select 20 or more. Then a virtual machine of CentOS is created.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Config the CentOS hardware setting on VirtulBox or VMWare.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VirtualBox toolbar, there is a &lt;code&gt;Start&lt;/code&gt; button. Click &lt;code&gt;Start&lt;/code&gt;, then go the Storage item.&lt;/li&gt;
&lt;li&gt;Under the Storage Tree section, there is Empty CD icon. Click the Empty icon.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Under the Attributes section, click the CD icon at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Start&lt;/code&gt;button on the toolbar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VMWare&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VMware, you can find CD/DVD button on the tab page of new virtual machine.&lt;/li&gt;
&lt;li&gt;Click the CD button at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Power on this virtual machine&lt;/code&gt; option on the tab page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-centos-default-setting&#34;&gt;Config CentOS default setting&lt;/h3&gt;

&lt;p&gt;After the CentOS starts, we can config the default setting of CentOS. Don&amp;rsquo;t be panic, the configuration envrionment is very nice. You don&amp;rsquo;t need to type any command line so far.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prepare the installation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose the language of CentOS. Then click Continue.&lt;/li&gt;
&lt;li&gt;On the Installation Summary screen, there is warning icon attached to the hard drive icon, which is under SYSTEM section with a lable &amp;ldquo;INSTALLATION DESTINATION&amp;rdquo;. Click that label.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;You will see the partition is already done automatically. I&amp;rsquo;d like you to leave it as until you are familar with the CentOS. Then click Done button on the header.&lt;/li&gt;
&lt;li&gt;Leave the SOFTWARE SELECTION as Minimal Install; NETWORK &amp;amp; HOSTNAME as Not connected. Then click Begin Installation button.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Setup account&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup password of root account. Please remember the password. If you forget it you need to reset the root&amp;rsquo;s password. To do that you need to do a few things which depends on the CentOS version. As a beginner, please don&amp;rsquo;t make it too complicated.&lt;/li&gt;
&lt;li&gt;Create your account. e.g. harryporter Mark your account as administrator to save some effort. Please remember your password and don&amp;rsquo;t make it too complicated.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;The progress of installation is complete. Click Finish configuration button.
w$w4 d. After a few seconds, you will the Reboot button. Then click it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;manage-centos-packages-and-software&#34;&gt;Manage CentOS packages and software&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;there are two management tools rpm and yum. To make it easy, we just talk about yum. It is a very handy tool. Comparing with the windows built-in program management tool, it is much powerful than that. It provides necessary functions for admin. If you need to maintain the Linux server, then you will use it in your daily task.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;man yum&lt;/code&gt; to take a look the description of yum. You do not need to understand all usage of yum. Just have an overview is enough.&lt;/li&gt;
&lt;li&gt;There are a few useful and common yum commands.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum list installed | less
yum search &amp;lt;pacakge_name&amp;gt;
yum grouplist
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-centos-on-pc-or-laptop&#34;&gt;Install CentOS on PC or laptop&lt;/h2&gt;

&lt;h3 id=&#34;setup-network-via-cable&#34;&gt;Setup network ( via cable )&lt;/h3&gt;

&lt;p&gt;If you install a minimal version without network configuration, you will find you can not ping public domain. Here I am going to show you how to setup the connection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use &lt;code&gt;ip a&lt;/code&gt; command to check the status of all network interface.&lt;/li&gt;
&lt;li&gt;You will see all the state of interfaces would be DOWN OR UNKNOWN.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
# lo ****  qdisc pfifo_fast noqueue UNKNOWN
# eth0 **** qdisc pfifo_fast state DOWN

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;# ifup eth0&lt;/code&gt; to start the ech0 then you can access internet. It is a bit tedious to start the network service every time we reboot the system. Next step we will setup network service to start automatically after the system is up.&lt;/li&gt;
&lt;li&gt;There is a configuration file which can help you setup internet connection after the startup. Ususally the configuration is under this path &lt;code&gt;/etc/sysconfig/network-scripts&lt;/code&gt;, and file name would &lt;code&gt;ifcfg-eth&amp;lt;*&amp;gt;&lt;/code&gt;. So we check the real file name at first.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /etc/sysconfig/network-scripts/ifcfg-*

# Following are sample of files which will sit in your system. 
/etc/sysconfig/network-scripts/ifcfg-eth0
/etc/sysconfig/network-scripts/ifcfg-lo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we need to update this file via nano or vi. If you have no any experience of vi, I recommended an interactive online tutorial for you. Just 20 mins, you can master basic vi usage.
&lt;a href=&#34;http://www.openvim.com/tutorial.html&#34;&gt;http://www.openvim.com/tutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use vi to open the config file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# vi /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will a setting below.
ONBOOT=no&lt;/p&gt;

&lt;p&gt;You just need to update it to ONBOOT=yes, then save it and reboot CentOS to test the result.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you reboot and login CentOS, you can use ping to test if your system can access internet, then configuration is updated successful.&lt;/p&gt;

&lt;h4 id=&#34;setup-wifi&#34;&gt;Setup Wifi&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Setup Wifi during the installation. After the installation, you will find the Wifi is not available on Cent OS&lt;/li&gt;
&lt;li&gt;Mount the DVD or iso file&lt;/li&gt;
&lt;li&gt;use yum to install the NetworkManager-wifi package&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum --disablerepo=\* install /path/to/dvd/Packages/NetworkManager-wifi* 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;multiple-boot-system-fedora-centos-redhat&#34;&gt;Multiple boot system ( Fedora, CentOS, Redhat )&lt;/h2&gt;

&lt;h3 id=&#34;partition-setup-for-multiple-os-installation&#34;&gt;Partition setup for multiple OS installation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Fedora, CentOS and Redhat share the almost the same installation process.
Click on the &lt;code&gt;Installation Destination&lt;/code&gt; icon to change this to custom partitioning
Under the Other Storage Options, choose I will configure partitioning then click Done
Following is sample of partition setup of multiple boot system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;sda
  +----sda1        nfts               500M         Windows recovery
  +----sda2        efi       /boot    100M         grub2 , Windows boot manager
  +----sda3                  /        10M            
  +----sda4        ntfs      /      40000M         Window 7/8/10
  +----sda5                  swap   &amp;lt;Double size of your RAM size&amp;gt;   
  +----sda6        ext4      /      20000M         Ubuntu 14 desktop
  +----sda7        ext4      /      20000M         Fedora 20 desktop           
  +----sda8        ext4      /      20000M         CentOS 6 desktop
  +----sda9        ext4      /      20000M         OpenSuse desktop
  + ...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;h4 id=&#34;ifconfig-not-found-in-centos-minimal-server&#34;&gt;ifconfig not found in CentOS minimal server&lt;/h4&gt;

&lt;p&gt;Use command &lt;code&gt;ip&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip addr
ip -s link
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;enable-network-non-wifi-onboot-after-minimal-installation&#34;&gt;Enable Network (Non-wifi) onboot after minimal installation&lt;/h4&gt;

&lt;p&gt;If you cannot ping any domain, use &lt;code&gt;dhclient -v&lt;/code&gt; to check if the internet is available.&lt;/p&gt;

&lt;p&gt;Setup the network enabled onboot&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /etc/sysconfig/network-scripts/ 
# sed -i -e &#39;s@^ONBOOT=&amp;quot;no@ONBOOT=&amp;quot;yes@&#39; ifcfg-e.xx.xxx
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;boot-centos-in-terminal&#34;&gt;Boot CentOS in terminal&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# cat /etc/inittab
# systemctl get-default 
graphic.target
# systemctl set-default multi-user.target
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;fedora-boot-error&#34;&gt;Fedora boot error&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Please check the grub.cfg if you get booting error&lt;/li&gt;
&lt;li&gt;You can try following command to boot Fedora from Grub menu&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;linux /boot/vmluz-x.x.x-x.x.x
initrd /boot/intrd-plymouth.img
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>