<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>F# on Hello World</title>
    <link>/coding/f-sharp/</link>
    <description>Recent content in F# on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/coding/f-sharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>F# Overview</title>
      <link>/coding/f-sharp/fsharp-note-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/f-sharp/fsharp-note-1/</guid>
      <description>F  F# is an open-source, cross-platform, interoperable programming language for writing succinct, robust and performant code. Your focus remains on your problem domain, rather than the details of programming.
 Organizing F# Code The following table shows reference articles related to organizing your F# code.
   Title Description     Namespaces Learn about namespace support in F#. A namespace lets you organize code into areas of related functionality by enabling you to attach a name to a grouping of program elements.</description>
    </item>
    
    <item>
      <title>F# Functions</title>
      <link>/coding/f-sharp/fsharp-note-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/f-sharp/fsharp-note-3/</guid>
      <description>F# Function  Functions are the fundamental unit of program execution in any programming language. As in other languages, an F# function has a name, can have parameters and take arguments, and has a body. F# also supports functional programming constructs such as treating functions as values, using unnamed functions in expressions, composition of functions to form new functions, curried functions, and the implicit definition of functions by way of the partial application of function arguments.</description>
    </item>
    
    <item>
      <title>F# Namespace, Module &amp; Import</title>
      <link>/coding/f-sharp/fsharp-note-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/f-sharp/fsharp-note-2/</guid>
      <description>Namespace  A namespace lets you organize code into areas of related functionality by enabling you to attach a name to a grouping of F# program elements. Namespaces are typically top-level elements in F# files.
 Namespaces cannot directly contain values and functions. Instead, values and functions must be included in modules, and modules are included in namespaces. Namespaces can contain types, modules.
namespace [rec] [parent-namespaces.]identifier  Modules  A module is a grouping of F# code, such as values, types, and function values, in an F# program.</description>
    </item>
    
  </channel>
</rss>