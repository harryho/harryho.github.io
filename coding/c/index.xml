<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C  on Hello World</title>
    <link>/coding/c/</link>
    <description>Recent content in C  on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/coding/c/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C Lecture - 1</title>
      <link>/coding/c/lcthw-lectures.1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/c/lcthw-lectures.1/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&#39;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 0 Installing Software The Plan
 Install software on your system. Test that it works right.  Linux Install
On Debian/Ubuntu use:
$ sudo apt-get install build-essential  On RedHat/CentOS:
$ sudo yum groupinstall development-tools  Linux Testing
Test that your C compiler works with:
$ cc --version  OSX Install</description>
    </item>
    
    <item>
      <title>C Lecture - 2</title>
      <link>/coding/c/lcthw-lectures.2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/c/lcthw-lectures.2/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&#39;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 32 Double Linked Lists The Plan
Learn about your very first data structure:
Double Linked Lists
Creating A liblcthw Project
We&#39;ll need a project for the rest of the book called liblcthw.
Algorithms and Data Structures
A big step in going from amateur to professional is learning about data structures and algorithms.</description>
    </item>
    
    <item>
      <title>C Lecture - 3</title>
      <link>/coding/c/lcthw-lectures.3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/c/lcthw-lectures.3/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&#39;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 41 Project devpkg .\ex41\devpkg
.\ex41\devpkg\commands.c
#include &amp;lt;apr_uri.h&amp;gt;#include &amp;lt;apr_fnmatch.h&amp;gt;#include &amp;lt;unistd.h&amp;gt; #include &amp;#34;commands.h&amp;#34;#include &amp;#34;dbg.h&amp;#34;#include &amp;#34;bstrlib.h&amp;#34;#include &amp;#34;db.h&amp;#34;#include &amp;#34;shell.h&amp;#34; int Command_depends(apr_pool_t * p, const char *path) { FILE *in = NULL; bstring line = NULL; in = fopen(path, &amp;#34;r&amp;#34;); check(in != NULL, &amp;#34;Failed to open downloaded depends: %s&amp;#34;, path); for (line = bgets((bNgetc) fgetc, in, &amp;#39;\n&amp;#39;); line !</description>
    </item>
    
    <item>
      <title>C Lecture - 4</title>
      <link>/coding/c/lcthw-lectures.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/coding/c/lcthw-lectures.4/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&#39;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 48a A Simple Network Server: Project Description
The Plan
Start your first long running project:
statserve
The Purpose
You&#39;ll get the project started and get a minimum first hack going.
The Requirements
 Create a simple network server that accepts a connection on port 7899 from netclient or the nc command, and echoes back anything you type.</description>
    </item>
    
  </channel>
</rss>