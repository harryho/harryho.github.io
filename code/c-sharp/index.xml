<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C# on Hello World</title>
    <link>/code/c-sharp/</link>
    <description>Recent content in C# on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/code/c-sharp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C# Note - 1</title>
      <link>/code/c-sharp/csharp-note-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/code/c-sharp/csharp-note-1/</guid>
      <description>Prerequisite  .Net Framework has been install to your PC or laptop
 Create simple .net project without Visual Studio Assumption  The version of .Net Framework on your PC is 2.0+ or later Assume the path of .Net Frameowork is c:\Windows\Microsfot.Net\Frameowork\v2.0.50727  Simple C# project Create a proejct named csharp-project md csharp-project cd csharp-project md bin src echo.&amp;gt;csharp-project.proj echo.&amp;gt;src\helloworld.cs  Open Project configuration csharp-project.proj with notepad &amp;lt;Project DefaultTargets = &amp;quot;Compile&amp;quot; xmlns=&amp;quot;http://schemas.</description>
    </item>
    
    <item>
      <title>C# Note - 2</title>
      <link>/code/c-sharp/csharp-note-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/code/c-sharp/csharp-note-2/</guid>
      <description>Problem  Set up the some scheduled tasks running in the backgroud to take care of data update or sync for every 15 mins, or everyday or every week
 Solution Option 1 Windows Task Scheduler  Click the Start button. Click Control Panel. Click System and Maintenance. Click Administrative Tools. Double-click Task Scheduler.  Option 2 Use Window Service as task scheduler Overview of design The design here is a simplified version, which I built for previous projects.</description>
    </item>
    
    <item>
      <title>C# Note - 3</title>
      <link>/code/c-sharp/csharp-note-3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/code/c-sharp/csharp-note-3/</guid>
      <description>C# Thread &amp;amp; Task  From Net 4.0, .Net applicatoin introduced Parallel Framework Extensions (PFx), along the way it delivered an entirely new model for async processing in .NET. In .NET 4.0 the thread pool queue was redesigned with the new requirements of PFx in mind. Instead of using a simple linked list, the queue was built with arrays of work items with the arrays connected into a linked list.</description>
    </item>
    
  </channel>
</rss>