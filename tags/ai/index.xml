<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ai on Hello World</title>
    <link>https://harryho.github.io/tags/ai/</link>
    <description>Recent content in Ai on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Dec 2016 16:56:21 +1100</lastBuildDate>
    <atom:link href="https://harryho.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tensorflow Notes, Part 1</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-1/</guid>
      <description>

&lt;h3 id=&#34;assumption:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Ubuntu 16&lt;/li&gt;
&lt;li&gt;Your machine has Nvidia GPU card installed&lt;/li&gt;
&lt;li&gt;If you are using Ubuntu 14, the installation of CUDA and cuDNN will be a bit different. Please check Google&amp;rsquo;s instructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-python3-and-pip3:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Install python3 and pip3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14&#34;&gt;Please find instructions here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-virtualenv-via-pip3:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Install virtualenv via pip3&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-two-tensorflow-virtualenvs:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Create two tensorflow virtualenvs.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/.envs
virtualenv --system-site-packages ~/.envs/tf  # CPU only
virtualenv --system-site-packages ~/.envs/tfgpu   # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tensorflow-for-different-virtualenvs:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Install tensorflow for different virtualenvs&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tf/bin/activate
source ~/.envs/tfgpu/bin/activate

pip3 install tensorflow # CPU only
pip3 install tensorflow-gpu # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-cuda-and-cudnn-for-tensorflow-gpu:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Install CUDA and cuDNN for tensorflow-gpu&lt;/h3&gt;

&lt;h4 id=&#34;use-following-command-to-check-you-gpu-information:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Use following command to check you GPU information&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lspic -nn | grep &#39;\[03&#39; ]
lshw -numeric -C display

# GPU info sample
# NVIDIA Corporation GM107M [GeForce GTX 850M]
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-nvidia-driver-based-on-above-gpu-info-http-www-geforce-com-drivers:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Download and install Nvidia driver based on above GPU info &lt;a href=&#34;http://www.geforce.com/drivers&#34;&gt;http://www.geforce.com/drivers&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;chmod +x NVIDIA-Linux-xxxx.run
sudo ./NVIDIA-Linux-xxxx.run   
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cuda-from-nvidia-https-developer-nvidia-com-cuda-downloads:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Download and install  CUDA from NVIDIA &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;https://developer.nvidia.com/cuda-downloads&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i cuda-repo-xxxxx.deb
sudo apt-get udpate
sudo apt-get install cuda
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-cuda-home:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Setup CUDA_HOME&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# CUDA
export CUDA_HOME=/usr/local/cuda-8.0 
export LD_LIBRARY_PATH=${CUDA_HOME}/lib64 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cudnn-for-cuda-https-developer-nvidia-com-cudnn:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Download and install cuDNN for CUDA &lt;a href=&#34;https://developer.nvidia.com/cudnn&#34;&gt;https://developer.nvidia.com/cudnn&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# extra the cuDNN tar ball
tar -xvf cudnn-8.0
cd cuda 
sudo cp lib64/* /usr/local/cuda-8.0/lib64
sudo cp include/* /usr/local/cuda-8.0/include
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-sample-code-to-test-tensorflow:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Use sample code to test Tensorflow&lt;/h3&gt;

&lt;h4 id=&#34;save-code-below-to-file-test-py:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Save code below to file test.py&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import tensorflow as tf

# Model parameters
W = tf.Variable([.3], tf.float32)
b = tf.Variable([-.3], tf.float32)
# Model input and output
x = tf.placeholder(tf.float32)
linear_model = W * x + b
y = tf.placeholder(tf.float32)
# loss
loss = tf.reduce_sum(tf.square(linear_model - y)) # sum of the squares
# optimizer
optimizer = tf.train.GradientDescentOptimizer(0.01)
train = optimizer.minimize(loss)
# training data
x_train = [1,2,3,4]
y_train = [0,-1,-2,-3]
# training loop
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init) # reset values to wrong
for i in range(1000):
sess.run(train, {x:x_train, y:y_train})

# evaluate training accuracy
curr_W, curr_b, curr_loss  = sess.run([W, b, loss], {x:x_train, y:y_train})
print(&amp;quot;W: %s b: %s loss: %s&amp;quot;%(curr_W, curr_b, curr_loss))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-with-tensorflow-gpu-gpu-enabled:dcc7d6c7e6d56cb7c25ea39a679187b7&#34;&gt;Test with tensorflow-gpu (GPU enabled)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tfgpu/bin/activate
python3 test.py

# You will probably see the result as follow 
# ....
# name: GeForce GTX 850M
# major: 5 minor: 0 memoryClockRate (GHz) 0.9015
# pciBusID 0000:0a:00.0
# Total memory: 3.95GiB
# Free memory: 3.58GiB
# 2017-04-25 10:25:59.640621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 
# 2017-04-25 10:25:59.640626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y 
# 2017-04-25 10:25:59.640640: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&amp;gt; (device: 0, name: GeForce GTX 850M, pci # bus id: 0000:0a:00.0)
# W: [-0.9999969] b: [ 0.99999082] loss: 5.69997e-11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>