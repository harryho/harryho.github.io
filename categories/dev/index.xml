<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Hello World</title>
    <link>https://harryho.github.io/categories/dev/index.xml</link>
    <description>Recent content in Dev on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <atom:link href="https://harryho.github.io/categories/dev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP web framework</title>
      <link>https://harryho.github.io/dev/php-web/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/php-web/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Here we are going to explore some PHP web frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;php-development-environment-setup&#34;&gt;PHP development environment setup&lt;/h1&gt;

&lt;h2 id=&#34;install-php-5-6-x&#34;&gt;Install PHP 5.6.x&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find the instruction from &lt;a href=&#34;https://harryho.github.io/#php&#34;&gt;home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;composer&#34;&gt;Composer&lt;/h2&gt;

&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;curl -s https://getcomposer.org/installer | php --&lt;/code&gt; to install composer on Linux&lt;/li&gt;
&lt;li&gt;use &amp;lsquo;composer -v &amp;rsquo; to verify.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;composer&lt;/a&gt; and install php on your PC&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;composer -v&lt;/code&gt; to verify the composer is ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;zendframework&#34;&gt;Zendframework&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Zend Framework is a collection of 60+ packages for professional PHP development. It can be used to develop web applications and services using PHP 5.6+, and provides 100% object-oriented code using a broad spectrum of language features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;zendframework-2-x&#34;&gt;Zendframework 2.x&lt;/h2&gt;

&lt;h3 id=&#34;create-zendframework-2-project-from-scratch&#34;&gt;Create Zendframework 2 project from scratch&lt;/h3&gt;

&lt;h4 id=&#34;clone-zendframework-skeleton-project-as-new-project&#34;&gt;* Clone Zendframework skeleton project as new project.&lt;/h4&gt;

&lt;h4 id=&#34;install-zendframework-with-composer&#34;&gt;* Install zendframework with composer&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    cd  /path/to/newproject
    git clone git://github.com/zendframework/ZendSkeletonApplication.git
    cd ZendSkeletonApplication
    php composer.phar self-update
    php composer.phar install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;start-app-with-php-built-in-server&#34;&gt;* Start app with php built-in server&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public/ public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;use-apache-server&#34;&gt;* Use apache server&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt; &amp;lt;VirtualHost *:80&amp;gt;
     ServerName zf2-tutorial.localhost
     DocumentRoot /path/to/newproject/ZendSkeletonApplication/public
     SetEnv APPLICATION_ENV &amp;quot;development&amp;quot;
     &amp;lt;Directory /path/to/newproject/ZendSkeletonApplication/public&amp;gt;
         DirectoryIndex index.php
         AllowOverride All
         Require all granted
     &amp;lt;/Directory&amp;gt;
 &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-zf2-mvc-starter-project&#34;&gt;Use Zf2-MVC-Starter project&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Please find the project introduction &lt;a href=&#34;https://harryho.github.io/project/zf2-mvc-starter/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;laravel&#34;&gt;Laravel&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Laravel is a free, open-source PHP web framework, created by Taylor Otwell and intended for the development of web applications following the model–view–controller (MVC) architectural pattern. Some of the features of Laravel are a modular packaging system with a dedicated dependency manager, different ways for accessing relational databases, utilities that aid in application deployment and maintenance, and its orientation toward syntactic sugar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;laravel-5-x&#34;&gt;Laravel 5.x&lt;/h2&gt;

&lt;h3 id=&#34;install-laravel-global&#34;&gt;Install laravel global&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Use `composer global laravel/installer`
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enable-the-mbs-string-extension&#34;&gt;Enable the &lt;code&gt;mbs-string&lt;/code&gt; extension&lt;/h3&gt;

&lt;h4 id=&#34;update-php-ini-config&#34;&gt;update &lt;code&gt;php.ini&lt;/code&gt; config&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;php.ini&lt;/code&gt; with notepad&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;;extension=php_mbstring.dll&lt;/code&gt; to &lt;code&gt;extension=php_mbstring.dll&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-new-project-from-scratch&#34;&gt;Create new project from scratch&lt;/h3&gt;

&lt;h4 id=&#34;create-new-project&#34;&gt;Create new project&lt;/h4&gt;

&lt;h4 id=&#34;migrate-database-and-seed-dummy-data&#34;&gt;Migrate database and seed dummy data&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create data model&lt;/li&gt;
&lt;li&gt;Following is the sample code
```php
&amp;lt;?php&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;namespace App;
use Illuminate\Database\Eloquent\Model;&lt;/p&gt;

&lt;p&gt;class Article extends Model
{
    protected $fillable = [&amp;lsquo;title&amp;rsquo;, &amp;lsquo;content&amp;rsquo;];&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function getTitleAttribute($value) {
    return strtoupper($value);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* Use artisan to create the table 

```bash

php artisan migrate -VVV 

# Use following command to seek dump or initial data
php artisan db:seed
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fix the error of Specified key was too long&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Schema;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        //
        Schema::defaultStringLength(191);
    }

    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-lavarel-mvc-starter-project&#34;&gt;Use Lavarel MVC Starter project&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;* Please find the project introduction [here](/project/lara-mvc-starter/). 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-laravel-rest-starter-project&#34;&gt;Use Laravel Rest Starter project&lt;/h3&gt;

&lt;h2 id=&#34;prestashop&#34;&gt;PrestaShop&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PrestaShop is a free, open source e-commerce solution. The software is published under the Open Software License (OSL). It is written in the PHP programming language with support for the MySQL database management system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;prestashop-1-5-4&#34;&gt;Prestashop 1.5.4&lt;/h2&gt;

&lt;h3 id=&#34;download-the-zip-file-from-download-page-https-www-prestashop-com-en-developers-versions&#34;&gt;Download the zip file from &lt;a href=&#34;https://www.prestashop.com/en/developers-versions&#34;&gt;download page&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&#34;install-prestashop&#34;&gt;Install Prestashop&lt;/h3&gt;

&lt;p&gt;There is a instruction page inside the zip file. You can follow the instructions to complete the installation. There is no EasyPHP, Wamp, XAMPP, or any similar AMP (Apache+MySQL+PHP) package installed on my PC, but I have PHP, Apache, MySQL installed. Actually EasyPHP, Wamp are just the bundle of PHP development tools, which include PHP, Apache, MySQL. I don&amp;rsquo;t want to install too many duplicate softwares and packages on my PC, so I prefer to install Prestashop with what I have on my PC. Which strategy is up to you.&lt;/p&gt;

&lt;h3 id=&#34;install-prestashop-with-amp-package&#34;&gt;Install Prestashop with AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow the instruction page within zip file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-prestashop-without-amp-package&#34;&gt;Install Prestashop without AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unzip file to &lt;code&gt;path\to\prestashop_workspace&lt;/code&gt;. Your folder structure will look like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\prestashop_workspace
\---prestashop
    +---admin 
    +---cache 
    +---classes  
    +---config 
    +---controllers 
    +---css
    +---docs
    +---download
    +---img 
    +---install    
    +---js   
    +---localization
    +---log
    +---mails
    +---modules  
    +---override
    +---pdf
    +---themes
    +---tools 
    +---translations
    +---upload
    \---webservice
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start your MySQL or check the status of MySQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use your MySQL client tool to connect to your MySQL server.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Launch installer page with php server&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start a command prompt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/prestashop_workspace
php -S 0.0.0.0:1234 -t prestashop
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open the link &lt;code&gt;http://localhost:1234/install/index.php&lt;/code&gt; with browser, then you can start installation process.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Choose language and click &lt;code&gt;Next&lt;/code&gt;, and then select the checkbox &amp;ldquo;I agree bah lah bah lah &amp;hellip;. &amp;rdquo; and click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If there is an error &lt;code&gt;GD Library is not installed&lt;/code&gt; prompt, you just need to enable the library on &lt;code&gt;php.ini&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DO NOT close your browser.&lt;/li&gt;
&lt;li&gt;Stop the php server by &lt;code&gt;Ctrl + C&lt;/code&gt; in the command prompt.&lt;/li&gt;
&lt;li&gt;Use notepad to open the file &lt;code&gt;php.ini&lt;/code&gt; under the &lt;code&gt;\path\to\php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Uncomment the config &lt;code&gt;;extension=php_gd2.dll&lt;/code&gt; =&amp;gt; &lt;code&gt;extension=php_gd2.dll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start the php server again
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click the &lt;code&gt;Refresh this settings&lt;/code&gt;, and click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fill the login user and password. If your MySQL port is not 3306, please attach your port to the server address input field. Click &lt;code&gt;Test your database connection&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you got error &lt;code&gt;prestashop database not found&lt;/code&gt;, you need to create a database on mysql server.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I simply create a new database immediately with one command line&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE prestashop CHAR SET utf8 COLLATE &#39;utf8_unicode_ci&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test the connection again. You will get the green light
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click &lt;code&gt;Next&lt;/code&gt; and you can start to setup your store informaiton, such as, store name, admin account, etc. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Setup your sample store. Click &lt;code&gt;Next&lt;/code&gt;. Then the installer will help you finish the initialization.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After the store setup, you can access the website by clicking &lt;code&gt;Font site&lt;/code&gt;, but you can not access back office, as known as admin panel.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Don&amp;rsquo;t panic. It is easy to fix. Stop the php server by clicking &lt;code&gt;Ctrl+C&lt;/code&gt;, and delete the folder &lt;code&gt;install&lt;/code&gt; under the root, and then start the server again. Open the folder with prestashop, you will find something interesting. The original folder &lt;code&gt;admin&lt;/code&gt; under &lt;code&gt;prestashop&lt;/code&gt; has been renamed to &lt;code&gt;adminXXXX&lt;/code&gt;. X is a number. It is Prestashop special trick to secure your admin folder. Now you need to use this new name as path to acces back office. Your new back office link will be &lt;code&gt;http://localhost:1234/adminXXXX&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open the new link in browser and type in your admin id and password. Now you can start managing your Prestashop site. Enjoy it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;forgot-admin-s-password&#34;&gt;Forgot admin&amp;rsquo;s password&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Forgot admin&amp;rsquo;s password or somehow you have to reset password and you cannot get admin&amp;rsquo;s password from previous adminstrator. For such case, there is a simple way to update admin&amp;rsquo;s password from database.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tailor the SQL below. Then you should be able to use new password to login.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE ps_employee SET passwd = MD5(&#39;&amp;lt;_COOKIE_KEY_&amp;gt;password&#39;) 
WHERE ps_employee.id_employee = &amp;lt;ID_EMPLOYEE&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting-1&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;h4 id=&#34;innodb-error&#34;&gt;InnoDB error&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Error : InnoDB is not supported by your MySQL server&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You got error because Prestashop 1.5 is not working properly with MySQL 5.4 and later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Update files &lt;code&gt;DbPDO.php&lt;/code&gt; , &lt;code&gt;MySQL.php&lt;/code&gt; and &lt;code&gt;DbMySQLi.php&lt;/code&gt; as follow.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    // $sql = &#39;SHOW VARIABLES WHERE Variable_name = \&#39;have_innodb\&#39;&#39;;
    $sql = &amp;quot;SELECT SUPPORT FROM INFORMATION_SCHEMA.ENGINES WHERE ENGINE LIKE &#39;INNO%&#39;&amp;quot;;

    ...
    
    // if (!$row || strtolower($row[&#39;Value&#39;]) != &#39;yes&#39;)
    if (!$row || strtolower($row[&#39;Value&#39;]) === &#39;no&#39;) 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Restart the server and the proble will be fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;cors&#34;&gt;CORS&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enable module header in &lt;code&gt;httpd.conf&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add header settings&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;Header always set Access-Control-Max-Age &amp;quot;1000&amp;quot;
Header always set Access-Control-Allow-Headers &amp;quot;X-Requested-With, Content-Type, Origin, Authorization, Accept, Client-Security-Token, Accept-Encoding&amp;quot;
Header always set Access-Control-Allow-Methods &amp;quot;POST, GET, OPTIONS, DELETE, PUT&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Build mobile app with web dev skills</title>
      <link>https://harryho.github.io/dev/build-mobile-app/</link>
      <pubDate>Sun, 10 Jul 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/build-mobile-app/</guid>
      <description>

&lt;h2 id=&#34;what-is-mobile-app&#34;&gt;What is mobile app&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;A mobile application, basically, is a computer generated program designed and developed to run on iPhone, Android Smartphone, and many other mobile devices. In a nutshell, there are three types of apps&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Native apps&lt;/strong&gt; are specific to a given mobile platform (iOS or Android) using the development tools and language that the respective platform. Usaully it looks and performs the best.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;HTML5 apps&lt;/strong&gt; use standard web technologies—typically HTML5, JavaScript and CSS. This write-once-run-anywhere approach to mobile development creates cross-platform mobile applications that work on multiple devices.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Hybrid apps&lt;/strong&gt; make it possible to embed HTML5 apps inside a thin native container, combining the good parts of &lt;strong&gt;Native app&lt;/strong&gt; and &lt;strong&gt;HTML5 app&lt;/strong&gt; elements.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;mobile-app-development&#34;&gt;Mobile app development&lt;/h2&gt;

&lt;p&gt;According above breif history we can image the mobile developer community has become asfragmented as the market. Mobile software developers work with different programming environments, different tools, and different programming languages.&lt;/p&gt;

&lt;p&gt;After a few years of improvement, we can see some &lt;strong&gt;Hybrid app&lt;/strong&gt; based framework becomes more and more popular and shining. &lt;code&gt;ionic&lt;/code&gt;, &lt;code&gt;nativescript&lt;/code&gt; and &lt;code&gt;react native&lt;/code&gt; are most promising frameworks which we should really look into.&lt;/p&gt;

&lt;h2 id=&#34;introduction-of-ionic-developement&#34;&gt;Introduction of ionic developement&lt;/h2&gt;

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Here we just introduce ionic 1.x. When I started investigating the &lt;code&gt;ionic&lt;/code&gt;, the &lt;code&gt;ionic 2&lt;/code&gt; just came out for a while. &lt;code&gt;ionic 2&lt;/code&gt; study is on my todo list.&lt;/li&gt;
&lt;li&gt;You are familiar with web technologies, such as, HTML5, CSS, JavaScript, and you should have experience of nodejs and relevant skills.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;getting-started&#34;&gt;Getting started&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;install ionic 1.x&lt;/li&gt;
&lt;li&gt;setup ionic and create new project &lt;code&gt;demoApp&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;ionic start demoApp slidemenu
cd demoApp
ionic platform add android 
ionic build android 
ionic emulate android 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-packages&#34;&gt;Install packages&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;npm install&lt;/code&gt; to install packages&lt;/li&gt;
&lt;li&gt;Folllowing is the &lt;code&gt;package.json&lt;/code&gt;. You can tailor it on your own.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;{
  &amp;quot;name&amp;quot;: &amp;quot;ionic-project&amp;quot;,
  &amp;quot;version&amp;quot;: &amp;quot;1.0.0&amp;quot;,
  &amp;quot;description&amp;quot;: &amp;quot;An Ionic project&amp;quot;,
  &amp;quot;dependencies&amp;quot;: {
    &amp;quot;gulp&amp;quot;: &amp;quot;^3.5.6&amp;quot;,
    &amp;quot;gulp-sass&amp;quot;: &amp;quot;^2.0.4&amp;quot;,
    &amp;quot;gulp-concat&amp;quot;: &amp;quot;^2.2.0&amp;quot;,
    &amp;quot;gulp-minify-css&amp;quot;: &amp;quot;^0.3.0&amp;quot;,
    &amp;quot;gulp-rename&amp;quot;: &amp;quot;^1.2.0&amp;quot;
  },
  &amp;quot;devDependencies&amp;quot;: {
    &amp;quot;bower&amp;quot;: &amp;quot;^1.3.3&amp;quot;,
    &amp;quot;gulp-util&amp;quot;: &amp;quot;^2.2.14&amp;quot;,
    &amp;quot;shelljs&amp;quot;: &amp;quot;^0.3.0&amp;quot;
  },
  &amp;quot;cordovaPlugins&amp;quot;: [
    &amp;quot;cordova-plugin-device&amp;quot;,
    &amp;quot;cordova-plugin-console&amp;quot;,
    &amp;quot;cordova-plugin-whitelist&amp;quot;,
    &amp;quot;cordova-plugin-splashscreen&amp;quot;,
    &amp;quot;cordova-plugin-statusbar&amp;quot;,
    &amp;quot;ionic-plugin-keyboard&amp;quot;
  ],
  &amp;quot;cordovaPlatforms&amp;quot;: []
}

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;debug&#34;&gt;Debug&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Browser is the best option for ionic mobile development debug tools&lt;/li&gt;
&lt;li&gt;Use Telerik AppBuilder to debug&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;test-on-emulator-or-device&#34;&gt;Test on emulator or device&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Android&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Download and install &lt;a href=&#34;https://developer.android.com/studio/index.html#downloads&#34;&gt;Android SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Download install at least one sdk platform.&lt;/li&gt;
&lt;li&gt;ionic only support Android 4.1.x or later, so you are better to install any sdk platform version 18+.&lt;/li&gt;
&lt;li&gt;install x86 or x86_64 image for windows environment&lt;/li&gt;
&lt;li&gt;install Extra plugins: Google USB driver, X86 Emulator Accelerator&lt;/li&gt;
&lt;li&gt;Create AVD for your mobile app testing&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;iPhone&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install AppBuilder on Visual Studio&lt;/li&gt;
&lt;li&gt;Install Genymotion&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Android emulator accelerator error due to version is too low to support the system image&lt;/li&gt;
&lt;li&gt;uninstall old version intel HAXM&lt;/li&gt;

&lt;li&gt;&lt;p&gt;install new version manually from &lt;code&gt;&amp;lt;Android_SDK_Location&amp;gt;\extras\intel\Hardware_Accelerated_Execution_Manager&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If app is not working on emulator, check cordova plugins or manually install cordova plugins&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ionic plugins list&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ionic plugins add XXXXX&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Web framework</title>
      <link>https://harryho.github.io/dev/python-django/</link>
      <pubDate>Mon, 28 Sep 2015 09:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/python-django/</guid>
      <description>

&lt;h2 id=&#34;getting-started&#34;&gt;Getting started&lt;/h2&gt;

&lt;h3 id=&#34;install-python-pip-virtualenv&#34;&gt;Install Python &amp;amp; pip &amp;amp; virtualenv&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Windows: Please find in from &lt;a href=&#34;https://harryho.github.io/&#34;&gt;Home Page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ubuntu: Please find it from &lt;a href=&#34;ubuntu-server-14&#34;&gt;Ubuntu setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python 3.4 (released March 2014) and Python 2.7.9 (released December 2014) ship with Pip.&lt;/li&gt;
&lt;li&gt;You can simply use pip or pip3 install any package you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-django&#34;&gt;Install Django&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install django

&lt;ul&gt;
&lt;li&gt;create a folder virtualenvs within the location of python 3&lt;/li&gt;
&lt;li&gt;create a new virtualenv named django18&lt;/li&gt;
&lt;li&gt;Activate the new virtual env&lt;/li&gt;
&lt;li&gt;Install Django 1.x.x (LTS version )&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd  /path/to/python3
cd  virtualenvs
virtualenv django18
cd django18
Scripts\activate
which python
pip install django==1.x.x
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-django-project&#34;&gt;Create django project&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;SET PATH in current command promp&lt;/li&gt;
&lt;li&gt;Navigate to workspace folder&lt;/li&gt;
&lt;li&gt;Create new django project&lt;/li&gt;
&lt;li&gt;Start the app&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;SET PATH=c:\apps\python3\virtualenvs\django18\Script;%PATH%
which django-admin
cd c:\ws\python\django\
django-admin startproject demo
cd demo
python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Create a new app module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;python manage.py startapp main&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new db&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;**  following commands are just tested in django 1.8&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python manage.py syncdb 
python manage.py makemigrations new_app 
# migrate 
pyrhon manage.py sqlmigrate new_app 0001 
# migrate 
python manage.py migrate new_app 0001
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;use python shell Model API&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;python manage.py shell
&amp;gt;&amp;gt;&amp;gt; from XXX.models import ModelClass
&amp;gt;&amp;gt;&amp;gt; ModelClass.objects.all()
&amp;gt;&amp;gt;&amp;gt; ModelClass.objects.get(pk =1 )
&amp;gt;&amp;gt;&amp;gt; ModelClass.objects.filter( fieldName1=&amp;quot;abc&amp;quot;)
&amp;gt;&amp;gt;&amp;gt; mc = new ModelClass.( fieldName1 = &amp;quot;abc&amp;quot;, fieldName2=&amp;quot;def&amp;quot;, fieldName3 = 3 )
&amp;gt;&amp;gt;&amp;gt; mc.save()
&amp;gt;&amp;gt;&amp;gt; mc = ModelClass.objects.get(pd=1)
&amp;gt;&amp;gt;&amp;gt; mc.delete()    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;pip install virtualenv
pip3 install virtualenv
cd ~
mkdir .envs

# create python2 env
virtualenv -p /usr/bin/python2.7 py2env
virtualenv -p /usr/bin/python3.4 py3env

cd py2env 
source bin/activate
# Check python path 
which python
# Exit
deactivate

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Activate virtual environment need to use source instead of executing sh file&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Debug PHP with Eclipse PDT and Netbeans</title>
      <link>https://harryho.github.io/dev/php-debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harryho.github.io/dev/php-debug/</guid>
      <description>

&lt;h2 id=&#34;pdt-and-netbeans&#34;&gt;PDT and Netbeans&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PDT and Netbeans are two most popluar free PHP IDEs. We choose such IDE for productivity, so code intelligence and debug are two key factors, which let us love IDE. Because both are not created for PHP development at the start, there is no built-in server to support the PHP web debug. When we want to use it to debug, we would come across some wierd problems. Here is how to prepare the IDE for PHP debug.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;amp-package-or-without-amp&#34;&gt;AMP package or without AMP&lt;/h2&gt;

&lt;h3 id=&#34;use-amp-package-as-smart-choice&#34;&gt;Use AMP package as smart choice&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;If you haven&amp;rsquo;t installed install any MySQL, Apache, PHP on your computer, I will recommend you to choose AMP ( Apache, MySQL, PHP ) package first, especially when project is small, the time is so tight, your client just want you to do some minor change. In that scenario, AMP package is a much better choice. Popular AMP packages include : EasyPHP, MAMP, WAMP, XAMPP. You can pick any of them on your favor.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Here is not going to discuss any specific AMP package. You can find more detailed instruction from their official website. If you still have problem, you can take a look how to do without the AMP package, but I won&amp;rsquo;t guarantee you the solution below will work for your AMP.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;manage-your-shits-without-amp-package&#34;&gt;Manage your shits without AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Here we just focus on how to work with shits ( Apache, PHP ) which you download and install them piece by piece. 10 years ago, it was easier to choose which one to download and install, because there was no much option, but now there are many options which make us confused.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The more worst and nastiest problem today is compatible issue between x86 and x64 applications in Windows. Even sometimes they are claimed compiled as x86, until you test it you will never they are really compatible. The reason is Windows has different versions of C++ redistributed compiler, if you use different compilers from Windows to compile your source code, you cannot ensure they are compatible to work together.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;To avoid this problem, it is better to make sure the package or software are compatible at the beginning. That is why the AMP package is much better and easy to do that. They help you solve such nasty problem by bundling all you need together.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download the compatible packages, especially Apache and PHP. When you download PHP, you need to know the PHP is compiled by VC9, VC11, or VC14, and x86 or x64. After that, you need to download proper Apache from &lt;a href=&#34;https://www.apachelounge.com/download&#34;&gt;here&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;h3 id=&#34;apache-path-c-apache-version-2-4-x-vc11-x86&#34;&gt;Apache path &lt;code&gt;c:\apache&lt;/code&gt;. Version 2.4.x, VC11, x86&lt;/h3&gt;

&lt;h3 id=&#34;php-path-c-php-version-5-6-x-vc11-x86&#34;&gt;PHP path &lt;code&gt;c:\php&lt;/code&gt;, Version 5.6.x, VC11, x86&lt;/h3&gt;

&lt;h3 id=&#34;use-localhost-1234-as-test-website-url&#34;&gt;Use &lt;code&gt;localhost:1234&lt;/code&gt; as test website URL&lt;/h3&gt;

&lt;h3 id=&#34;project-workspace-path-c-php-workspace&#34;&gt;Project workspace path &lt;code&gt;c:\php_workspace&lt;/code&gt;&lt;/h3&gt;

&lt;h3 id=&#34;website-root-path-c-php-workspace-phpsite-the-index-php-is-under-this-root-path&#34;&gt;Website root path &lt;code&gt;c:\php_workspace\phpsite&lt;/code&gt;, the &lt;code&gt;index.php&lt;/code&gt; is under this root path&lt;/h3&gt;

&lt;h2 id=&#34;prepare-php-for-debugging&#34;&gt;Prepare PHP for debugging&lt;/h2&gt;

&lt;h3 id=&#34;download-xdebug-and-install-it&#34;&gt;Download XDebug and install it&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Go to xdebug &lt;a href=&#34;xdebug.org&#34;&gt;site&lt;/a&gt;. Use the &lt;a href=&#34;https://xdebug.org/wizard.php&#34;&gt;wizard tool&lt;/a&gt; to find the xdebug tool.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;c:\php\php.exe -i | clip&lt;/code&gt; to copy the php info to memory. And then paste the content to the input area, and click &lt;code&gt;Analyse my phpinfo() output&lt;/code&gt;. It will show the correct file to download.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Download the dll file and put it into php folder &lt;code&gt;c:\php\ext&lt;/code&gt;. Update the &lt;code&gt;php.ini&lt;/code&gt; file by adding the following lines at the bottom of file.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[XDebug]
zend_extension=&amp;quot;c:/php/ext/php_xdebug-x.x.x-x.x-vcxx.dll&amp;quot;
xdebug.remote_enable=1
xdebug.remote_host=localhost
xdebug.remote_port=9000
xdebug.remote_autostart=1
xdebug.remote_connect_back=1
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-apache-to-load-php&#34;&gt;Setup Apache to load PHP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add php module loading inside your apache configuration file.&lt;/li&gt;
&lt;li&gt;On the file &lt;code&gt;c:\apache\conf\httpd.conf&lt;/code&gt; with nodepad and update as following setting&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;
# Update apache root
# ServerRoot &amp;quot;c:/Apache24&amp;quot;
ServerRoot &amp;quot;c:/apache&amp;quot;

# Change origin 80 to 1234
# Listen 80
Listen 1234

# Add ServerName
ServerName localhost:1234

# Add PHP directory
PHPIniDir &amp;quot;C:/php&amp;quot;

# Add PHP module and handler
LoadModule php5_module &amp;quot;c:/php/php5apache2_4.dll&amp;quot;
AddHandler application/x-httpd-php .php

&amp;lt;FilesMatch \.php$&amp;gt;
      SetHandler application/x-httpd-php
&amp;lt;/FilesMatch&amp;gt;

# Change origin doc root htdocs 
# DocumentRoot &amp;quot;c:/Apache24/htdocs&amp;quot;
DocumentRoot &amp;quot;c:/php_workspace/phpsite&amp;quot;

&amp;lt;Directory &amp;quot;c:/php_workspace/phpsite&amp;quot;&amp;gt;
    Options Indexes FollowSymLinks
    AllowOverride All
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;debug-php-with-pdt&#34;&gt;Debug PHP with PDT&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;If you have PHP 7 installed, please choose the up to PHP 5.6.x as PHP runtime.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;open-phpsite-as-php-the-project-with-eclipse-pdt&#34;&gt;Open phpsite as PHP the project with Eclipse PDT&lt;/h3&gt;

&lt;h3 id=&#34;setup-php-web-application-for-debugging&#34;&gt;Setup PHP Web Application for debugging&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Choose menu &lt;code&gt;Run&lt;/code&gt; &amp;gt; &lt;code&gt;Debug Configurations&lt;/code&gt; &amp;gt; &lt;code&gt;PHP Web Application&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add new configuration by clicking &lt;img src=&#34;https://harryho.github.io/img/php_pdt_new_debug.png&#34; alt=&#34;New&#34; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;configure-php-web-server&#34;&gt;Configure PHP Web Server&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;Default PHP Web Server&lt;/code&gt; from the dropdown list&lt;/li&gt;
&lt;li&gt;Click the button  &lt;code&gt;configuration&lt;/code&gt;, it prop up a Window dialog.&lt;/li&gt;
&lt;li&gt;On the tab &lt;code&gt;Server&lt;/code&gt;, Set the &lt;code&gt;localhost:1234&lt;/code&gt; as &lt;code&gt;Base URL&lt;/code&gt;. It should be the same as ServerName in your &lt;code&gt;httd.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;On the tab &lt;code&gt;Debugger&lt;/code&gt;, choose &lt;code&gt;XDebug&lt;/code&gt; from the dropdown list, then other setting as default.&lt;/li&gt;
&lt;li&gt;On the tab &lt;code&gt;Path Mapping&lt;/code&gt;, add new mapping. Enter &lt;code&gt;/&lt;/code&gt; as &lt;code&gt;Path on Server&lt;/code&gt;, Put &lt;code&gt;c:\php_workspace\phpsite&lt;/code&gt; as &lt;code&gt;Path in File system&lt;/code&gt;, then leave other setting as default.&lt;/li&gt;
&lt;li&gt;Close the Window dialog.&lt;/li&gt;
&lt;li&gt;Choose the File &lt;code&gt;c:\php_workspace\phpsite\index.php&lt;/code&gt; as startup page.&lt;/li&gt;
&lt;li&gt;If the &lt;code&gt;Auto Generated URL&lt;/code&gt; is not &lt;code&gt;localhost:1234/index.php&lt;/code&gt;, then manually update it.&lt;/li&gt;
&lt;li&gt;After all these done, you can debug your website now.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;debug-php-with-netbeans&#34;&gt;Debug PHP with Netbeans&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;If you have PHP 7 installed, please choose the up to PHP 5.6.x as PHP runtime.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&#34;open-phpsite-as-php-the-project-with-netbeans&#34;&gt;Open phpsite as PHP the project with Netbeans.&lt;/h3&gt;

&lt;h3 id=&#34;configure-php-web-server-1&#34;&gt;Configure PHP Web Server&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;On the &lt;code&gt;Projects&lt;/code&gt; panel, choose the project &lt;code&gt;phpsite&lt;/code&gt; , right click and choose &lt;code&gt;Properties&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Sources&lt;/code&gt; within the categories. Check the PHP version is the same as your PHP version.&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Run Configurations&lt;/code&gt; within the categories, and update the default configuration.&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Local Web Site&lt;/code&gt; from &lt;code&gt;Run As&lt;/code&gt; dropdown list.&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;localhost:1234&lt;/code&gt; as Project URL&lt;/li&gt;
&lt;li&gt;Click the button &lt;code&gt;Advanced ...&lt;/code&gt; to update web server&lt;/li&gt;
&lt;li&gt;Add a new path mapping. Enter &lt;code&gt;/&lt;/code&gt; as &lt;code&gt;Path on Server&lt;/code&gt;, Put &lt;code&gt;c:\php_workspace\phpsite&lt;/code&gt; as &lt;code&gt;Path in File system&lt;/code&gt;, then leave other setting as default.&lt;/li&gt;
&lt;li&gt;Leave other default setting and click button &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Now you can debug php site with Netbeans&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;use-nginx-instead-of-apache&#34;&gt;Use Nginx instead of Apache&lt;/h2&gt;

&lt;h3 id=&#34;download-runhiddenconsole&#34;&gt;Download &lt;code&gt;RunHiddenConsole&lt;/code&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download &lt;a href=&#34;http://redmine.lighttpd.net/attachments/660/RunHiddenConsole.zip&#34;&gt;RunHiddenConsole&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extract the file &lt;code&gt;RunHiddenConsole.exe&lt;/code&gt; to folder &lt;code&gt;c:\bin\&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-nginx-32-bit-version&#34;&gt;Install Nginx 32 bit version.&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;We assume the ngnix&amp;rsquo;s path is &lt;code&gt;c:\nginx\&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;confirm-php-cgi-exe-is-within-the-php-folder-c-php&#34;&gt;Confirm &lt;code&gt;php-cgi.exe&lt;/code&gt; is within the PHP folder &lt;code&gt;c:\php&lt;/code&gt;.&lt;/h3&gt;

&lt;h3 id=&#34;setup-nginx-fastcgi-with-php&#34;&gt;Setup Nginx FastCGI with PHP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Back the original &lt;code&gt;nginx.conf&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Create a script to launch &lt;code&gt;nginx&lt;/code&gt; and &lt;code&gt;php&lt;/code&gt; in sequence.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;@ECHO OFF
ECHO Start PHP FastCGI...
SET PATH=c:\php;%PATH%
c:\bin\RunHiddenConsole.exe c:\php\php-cgi.exe -b 127.0.0.1:9000
ECHO Start Nginx ...
c:\bin\RunHiddenConsole.exe c:\nginx\nginx.exe 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Open the &lt;code&gt;nginx.conf&lt;/code&gt; via notepad&lt;/li&gt;
&lt;li&gt;Replace the &lt;code&gt;server&lt;/code&gt; block with following setting&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
        listen       1234;
        server_name  localhost;
        root          c:/php_workspace/phpsite;
        #charset koi8-r;

        # Static
        location / {
            index  index.php;
        #    try_files $uri $uri/ @missing;
        }
        location ~ /\.ht {
            deny  all;
        }
        location ~ /\.rewrite {
            deny  all;
        }
        
        # PHP FastCGI
        location ~ \.php$ {
            root           c:/php_workspace/phpsite;
            # root  html; 
            fastcgi_pass   127.0.0.1:41234;
           fastcgi_index  index.php;
           fastcgi_param  SCRIPT_FILENAME  c:/php_workspace/phpsite/$fastcgi_script_name;
           include        fastcgi_params;
        }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;cat file | xclip -selection clipboard&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>