<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_index on Hello World</title>
    <link>https://harryho.github.io/</link>
    <description>Recent content in _index on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Mon, 06 Aug 2018 16:43:12 +1100</lastBuildDate>
    
	<atom:link href="https://harryho.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Raspberry Pi setup</title>
      <link>https://harryho.github.io/os/raspberrypi-notes/</link>
      <pubDate>Sat, 06 Jan 2018 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/raspberrypi-notes/</guid>
      <description>Prelude
 *This note is mainly to record how to setup Raspberry Pi as file server.
 Assumption  You have a Raspberry Pi with pre-installed raspbian SD card You are happy to get your hands dirty You have some basic computer concept. RPi is short for Raspberry Pi
  My Raspberry Pi is a bit old I only have the RPi 1 model B with pre-installed raspbian SD card in place.</description>
    </item>
    
    <item>
      <title>Lubuntu 16 desktop</title>
      <link>https://harryho.github.io/os/lubuntu16-desktop/</link>
      <pubDate>Thu, 04 Jan 2018 13:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/lubuntu16-desktop/</guid>
      <description>Prelude
 There is no big difference against setup between Lubuntu and Ubuntu. I just want to keep a latest version of setup for myself as reference
 Assumption  You have Lubuntu 16 in place  Things to do after installing Lubuntu 16  How to setup your server  UFW setup sudo ufw enable sudo ufw allow 80/tcp sudo ufw allow ssh sudo ufw allow 443/tcp sudo ufw allow 8000/tcp  SSH server setup !</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop setup &amp; dual boot </title>
      <link>https://harryho.github.io/os/grub-trouble-shooting/</link>
      <pubDate>Wed, 20 Sep 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/grub-trouble-shooting/</guid>
      <description>Change BIOS * Start your PC by pressing a pressing a special function key (usually F12, F10 or F2 depending on the vendor specifications). * Some PC&amp;rsquo;s BIOS has BOOT tab option, open the BOOT tab, you will find the OS Boot Manager. It is the simplest way to fix the issue. If your PC&amp;rsquo;s BIOS has no such setting feature, you need to check the next section.
Change the Windows Boot Manager * Login windows with common prompt * Restart windows, meanwhile press shift key * In the options page, choose change to other options * Troubleshooting * Command Prompt * Login in Windows with Common prompt * Use BCDEdit to change windows boot manager.</description>
    </item>
    
    <item>
      <title>FlatApi -- A handy Restful API for python developer</title>
      <link>https://harryho.github.io/project/python-flat-api/</link>
      <pubDate>Thu, 03 Aug 2017 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/python-flat-api/</guid>
      <description>FlatApi is a zero coding and zero configuration restful API server inspired by Json-Server_ and Eve_. It is designed to be used as fake restful api for development, especially for people want to use Python stack. Setup process is less than 10 seconds.
FlatApi is:
 Zero coding and configuration to setup Restful API FlatApi is designed to use without coding and configuration by default. You just need one config to setup all endpoints you need, then you can use it immediately.</description>
    </item>
    
    <item>
      <title>Angular vs React vs Vue</title>
      <link>https://harryho.github.io/article/vue-ng-react/</link>
      <pubDate>Wed, 07 Jun 2017 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/vue-ng-react/</guid>
      <description>Angular, React, Vue as most popular JavaScript frameworks at present, we just discuss Angular 1.x, Angular 2 / 4, React 15+ (Redux), and Vue 2+ here. There is no Angular 3, if you have not noticed before.
 Client side is a battle field In past 6â€“8 years, the Restful API has been accepted as one of standard web interfaces for most web applications, solution architect can simply add REST API on the top of existing web layer or business layer to provide REST API and support multiple client devices.</description>
    </item>
    
    <item>
      <title>Ubuntu 16 server note</title>
      <link>https://harryho.github.io/os/ubuntu-server-16/</link>
      <pubDate>Thu, 04 May 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-16/</guid>
      <description>Prelude
 This article is mainly to help experienced user install and setup Ubuntu 16 LTS Server. If you are looking for the information for Ubuntu 14, please go to the page Ubuntu 14 server setup
 Assumption  You are familiar with Ubuntu, at least you have some experience working on Linux system. You are familiar with basic bash/shell command  Things to do after installing Ubuntu server  How to setup your server  UFW setup sudo ufw enable sudo ufw allow 80/tcp sudo ufw allow ssh sudo ufw allow 443/tcp sudo ufw allow 8000/tcp  SSH server setup !</description>
    </item>
    
    <item>
      <title>_dummy</title>
      <link>https://harryho.github.io/index/_dummy/</link>
      <pubDate>Thu, 16 Feb 2017 11:47:59 +1100</pubDate>
      
      <guid>https://harryho.github.io/index/_dummy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create a blog site on GitHub Pages</title>
      <link>https://harryho.github.io/article/create-a-blog-on-github-pages/</link>
      <pubDate>Wed, 15 Feb 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/create-a-blog-on-github-pages/</guid>
      <description>After I setup a blog site with Hugo on my ubuntu machine, I decided to use it to create a blog to GitHub pages on my windows machine, since I use Windows machine as workstation. If you use Unix-style system, I pretty sure you can follow the Hugo Quick Start and Hosting on GitHub Pages to create a blog to GitHub pages within 5 mins, but when I try to do the same on Windows machine, it took me over 30 mins.</description>
    </item>
    
    <item>
      <title>CentOS 7 Server note</title>
      <link>https://harryho.github.io/os/centos-server-7/</link>
      <pubDate>Fri, 03 Feb 2017 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-server-7/</guid>
      <description>Prelude
 This article is mainly to help experienced user install and setup CentOS 7 Server. If you are looking for the information for CentOS 14, please install CentOS desktop version at first, and you can follow Ubuntu 14 server setup
 Assumption  You are familiar with CentOS, at least you have some experience working on Linux system. You are familiar with basic bash/shell command  Things to do after installing CentOS server  How to setup your server  Firewall setup sudo firewall-cmd --permanent --add-port=22/tcp sudo firewall-cmd --permanent --add-port=21/tcp sudo firewall-cmd --permanent --add-port=80/tcp sudo firewall-cmd --permanent --add-port=443/tcp sudo firewall-cmd --permanent --add-port=8080/tcp sudo firewall-cmd --reload  SSH server setup !</description>
    </item>
    
    <item>
      <title>JIRA Notes</title>
      <link>https://harryho.github.io/article/jira-notes/</link>
      <pubDate>Wed, 11 Jan 2017 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/jira-notes/</guid>
      <description>What is JIRA  Jira is a proprietary issue tracking product, developed by Atlassian. It provides bug tracking, issue tracking, and project management functions. Although normally styled JIRA, the product name is not an acronym, but a truncation of Gojira, the Japanese name for Godzilla,[6] itself a reference to Jira&amp;rsquo;s main competitor, Bugzilla. It has been developed since 2002.
 How to work with client within JIRA  The instruction below is only for the client who has independent JIRA instance.</description>
    </item>
    
    <item>
      <title>Angular 4 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-angular4-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-angular4-crm/</guid>
      <description>Ng4Crm is reusable CRM project for real-world business based on Angular 4, Angular-Material &amp;amp; Bootstrap 3.
This project starts from a popular starter project AngularClass/AngularStarter. The goal of this project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.
Features
 This project is built on the top of AngularClass/Angular-Starter.</description>
    </item>
    
    <item>
      <title>CNTK Notes, Part 1</title>
      <link>https://harryho.github.io/dev/cntk-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/cntk-notes-1/</guid>
      <description> Assumption  You are using Windows 7 or higher version You are using Anaconda to setup the environment  Create CNTK virtual environment # use follow command to remove existing virtual environment # conda remove -n cntk --all conda create -n cntk  Activate virtual environment and install CNTK activate cntk pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.0rc3-cp36-cp36m-win_amd64.whl  Test CNTK python &amp;gt;&amp;gt;&amp;gt; import cntk &amp;gt;&amp;gt;&amp;gt; cntk.__version__ &#39;2.0rc3&#39;  </description>
    </item>
    
    <item>
      <title>Laravel MVC Starter</title>
      <link>https://harryho.github.io/project/laravel-mvc-starter/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/laravel-mvc-starter/</guid>
      <description> This starter is the starting point of laravel 5 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with laravel.
Overview of project BDD ( Business domain design) +-------+ 0...* 0...* +--------+ 1 0...* +---------+ | tag | --------------- | post | ----- ----- | comment | +-------+ +--------+ +---------+ | 1...* | | 0...* +--------+ | like | +--------+  Structure of starter \path\to\lara-mvc-starter +---app &amp;lt;-// Customized PHP application code | +---Console | +---Exceptions | +---Http | | +---Controllers | | | \---Auth | | \---Middleware | \---Providers +---bootstrap &amp;lt;-// bootstrap the framework and configure autoloading | \---cache +---config &amp;lt;-// application configuration +---database &amp;lt;-// database migration files | +---factories | +---migrations | \---seeds +---public &amp;lt;-// Distributed website folder including Style sheet +---resources &amp;lt;-// View files, Javascripts, localization setting | +---assets | +---lang | \---views | +---admin | +---blog | +---errors | +---layouts | +---other | +---partials | \---vendor | \---pagination +---routes &amp;lt;-// Route definitions and setting +---storage &amp;lt;-//Blade templates, file based sessions, file caches | +---app | | \---public | +---framework | | +---cache | | +---sessions | | \---views | \---logs +---tests \---vendor &amp;lt;-// Laravel framework  Screenshots   Browse Repository </description>
    </item>
    
    <item>
      <title>React Redux Crm Project</title>
      <link>https://harryho.github.io/project/reetek-react-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-react-crm/</guid>
      <description>React-Crm is reusable CRM starter project for real-world business based on React 15.4, React-Redux &amp;amp; Material-UI.
The goal of this starter project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.
Features
 This project is built on the top of React/Redux. The UI part of this project uses Material-UI.</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 1</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-1/</guid>
      <description>Assumption  You are using Ubuntu 16 Your machine has Nvidia GPU card installed If you are using Ubuntu 14, the installation of CUDA and cuDNN will be a bit different. Please check Google&amp;rsquo;s instructions.  Install python3 and pip3  Please find instructions here  Install virtualenv via pip3 pip3 install virtualenv  Create two tensorflow virtualenvs. mkdir ~/.envs virtualenv --system-site-packages ~/.envs/tf # CPU only virtualenv --system-site-packages ~/.envs/tfgpu # GPU enabled  Install tensorflow for different virtualenvs source ~/.</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 2</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-2/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-2/</guid>
      <description>Assumption  You are using Windows 7 or higher version You are using Anaconda to setup the environment  Install Anaconda  Please download Anaconda from the official site   Create tensorflow virtualenv with python 3.5  Anaconda uses python 3.6 by default. Tensorflow only supports python 3.5.
cd /path/to/envs conda create -n tensorflow
  Install tensorflow activate tensorflow # For CPU pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.1.0-cp35-cp35m-win_amd64.whl # Or for GPU pip install --ignore-installed --upgrade https://storage.</description>
    </item>
    
    <item>
      <title>Vue 2 Admin Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-admin/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-admin/</guid>
      <description>Vue2Admin is a fully responsive admin template that is inspired by AdminLTE.
 This template is built-in with Vue 2 at the start. It include Vue Resource, Vuex as well. The plugins for this project are loaded with script loader.  Structure of Reetek Vue2Admin path\to\vue2admin +---build &amp;lt;-// webpack files +---config &amp;lt;-// configuration of dev or prod environment +---screenshots +---src &amp;lt;-// vue components | +---components | | +---charts | | +---dashboard | | +---forms | | +---mailbox | | +---misc | | +---pages | | +---tables | | +---ui | | \---widget | \---filters +---static &amp;lt;-// css, dump data, fonts, image files and plugins | +---css | +---data | +---fonts | +---img | | +---credit | | \---stock | \---js | \---plugins &amp;lt;-// plugins for admin dashboard | +---AdminLTE | +---bootstrap | +---bootstrap-slider | +---bootstrap-wysihtml5 | +---chartjs | +---ckeditor | + .</description>
    </item>
    
    <item>
      <title>Vue 2 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-crm/</guid>
      <description>Vue2Crm is a reusable Vue.js CRM starter project for real-world business based on Vue 2 PWA template with Vuetify.
The goal of this project is to create a reusable project for real-world business. To achieve this target, we need a solution which includes authentication process, restful API feature and simple but elegant UI design.
Features
 This starter project is built-in with Vue 2 PWA from scratch. The whole UI is built on the Vuetify It includes Vuex, Axios as well.</description>
    </item>
    
    <item>
      <title>Angularjs Webpack ES6 Starter</title>
      <link>https://harryho.github.io/project/angularjs-webpack-es6-starter/</link>
      <pubDate>Tue, 15 Nov 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/angularjs-webpack-es6-starter/</guid>
      <description>This starter was inspired by another similar angular webpack starter repository. It simply includes font-awesome, bootstrap for the people who don&amp;rsquo;t want to use boostrap-webpack, font-awesome-webpack. I find it saves us so much effort to create prototype, since we don&amp;rsquo;t need spectacular UI.
 This starter uses angular 1.5 for someone want to build component. This repo followes mvc patterns instead of component pattern. ES6, and ES7 support with babel.</description>
    </item>
    
    <item>
      <title>Git Notes</title>
      <link>https://harryho.github.io/dev/git-notes/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/git-notes/</guid>
      <description>Create a new branch with git and manage branches
 Create the branch on your local machine and switch in this branch :
$ git checkout -b [name_of_your_new_branch]  Push the branch on github :
 $ git push origin [name_of_your_new_branch]   When you want to commit something in your branch, be sure to be in your branch.
You can see all branches created by using :
$ git branch  Which will show :</description>
    </item>
    
    <item>
      <title>PHP web framework</title>
      <link>https://harryho.github.io/dev/php-web/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/php-web/</guid>
      <description>Here we are going to explore some PHP web frameworks.
 PHP development environment setup Install PHP 5.6.x  Please find the instruction from home page  Composer Linux  Use curl -s https://getcomposer.org/installer | php -- to install composer on Linux use &amp;lsquo;composer -v &amp;rsquo; to verify.  Windows  Download the composer and install php on your PC Use composer -v to verify the composer is ready.</description>
    </item>
    
    <item>
      <title>Build mobile app with web dev skills</title>
      <link>https://harryho.github.io/article/build-mobile-app/</link>
      <pubDate>Sun, 10 Jul 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/build-mobile-app/</guid>
      <description>What is mobile app  A mobile application, basically, is a computer generated program designed and developed to run on iPhone, Android Smartphone, and many other mobile devices. In a nutshell, there are three types of apps
Native apps are specific to a given mobile platform (iOS or Android) using the development tools and language that the respective platform. Usaully it looks and performs the best.
HTML5 apps use standard web technologiesâ€”typically HTML5, JavaScript and CSS.</description>
    </item>
    
    <item>
      <title>Python Notes - 6</title>
      <link>https://harryho.github.io/code/python-notes-6/</link>
      <pubDate>Thu, 12 May 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-6/</guid>
      <description>Collection Collection protocols  To implement a protocol, objects must support certain operations. Most collections implement container, sized and iterable. All except dict and set are sequences Container: membership testing using in and not in Sized: Determine number of elements with len(s) Iterable: Can produce an iterator with iter(s), e.g.
 for item in iterable: do_something(item) `len(s)`  Sequence:
 Retrieve elements by index, e.g. item = seq[index] Find items by value index = seq.</description>
    </item>
    
    <item>
      <title>Python Notes - 8</title>
      <link>https://harryho.github.io/code/python-notes-8/</link>
      <pubDate>Mon, 25 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-8/</guid>
      <description>Context managers context manager  context manager an object designed to be used in a with-statement
with context-manager: body with context-manager: context-manager.begin() body context-manager.end() with context-manager: setup() body teardown() with context-manager: context-manager.begin() body context-manager.end() with context-manager: allocation() body deallocation() with context-manager: enter() body exit()  A context-manager ensures that resources are properly and automatically managed
 enter() prepares the manager for use exit() cleans it up  Context-manager Protocol</description>
    </item>
    
    <item>
      <title>Python Notes - 7</title>
      <link>https://harryho.github.io/code/python-notes-7/</link>
      <pubDate>Sun, 17 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-7/</guid>
      <description>Exception &amp;amp; Assertion  Avoid bad practices in Python exception handling. Always specify an exception type with except, but don&amp;rsquo;t be too general.
 Don&amp;rsquo;t Use Assertions for checking arguments EXamples
 lookup exception  def lookups(): s = [1, 4, 6] try: item = s[5] except LookupError: print(&amp;quot;Handled IndexError&amp;quot;) d = dict(a=65, b=66, c=67) try: value = d[&#39;x&#39;] except LookupError: print(&amp;quot;Handled KeyError&amp;quot;) if __name__ == &#39;__main__&#39;: lookups() # test result # Handled IndexError # Handled KeyError   unicode exception  def unicode_exception(): try: b&#39;\x81&#39;.</description>
    </item>
    
    <item>
      <title>Azure notes</title>
      <link>https://harryho.github.io/article/azure-notes/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/azure-notes/</guid>
      <description>Here we are going to explore how to deploy web applications to Azure. From sep 2015, Microsoft launched new portal for Azure. To be honest, new portal is amazing, IMO, it is one of best changes from Microsoft.
 Assumption  You have experience with .net web applications. You have experience with website or web app deployment.  Getting Started  Register a Microsoft account. e.g. live.com, outlook.com, etc.</description>
    </item>
    
    <item>
      <title>Go programm language</title>
      <link>https://harryho.github.io/cache/golang/go-program-lang/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/cache/golang/go-program-lang/</guid>
      <description>We assume that you have programmed in one or more other languages, whether compiled like C, C++, and Java, or interpreted like Python, Ruby, and JavaScript, so we wonâ€™t spell out everything as if for a total beginner. Surface syntax will be familiar, as will variables and constants, expressions, control flow, and functions.
 Chapter 1 is a tutorial on the basic constructs of Go, introduced through a dozen programs for everyday tasks like reading and writing files, formatting text, creating images, and communicating with Internet clients and servers.</description>
    </item>
    
    <item>
      <title>LCTHW C Lectures 2</title>
      <link>https://harryho.github.io/code/lcthw-lectures.2/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/lcthw-lectures.2/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&amp;rsquo;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 32 Double Linked Lists The Plan
Learn about your very first data structure:
Double Linked Lists
Creating A liblcthw Project
We&amp;rsquo;ll need a project for the rest of the book called liblcthw.
Algorithms and Data Structures
A big step in going from amateur to professional is learning about data structures and algorithms.</description>
    </item>
    
    <item>
      <title>LCTHW C Lectures 4</title>
      <link>https://harryho.github.io/code/lcthw-lectures.4/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/lcthw-lectures.4/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&amp;rsquo;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 48a A Simple Network Server: Project Description
The Plan
Start your first long running project:
statserve
The Purpose
You&amp;rsquo;ll get the project started and get a minimum first hack going.
The Requirements
 Create a simple network server that accepts a connection on port 7899 from netclient or the nc command, and echoes back anything you type.</description>
    </item>
    
    <item>
      <title>Python Notes - 4</title>
      <link>https://harryho.github.io/code/python-notes-4/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-4/</guid>
      <description>Iterables &amp;amp; Iteration Comprehensions  Comprehensions can process more than one input sequence Multiple input sequences in comprehensions work like nested for-loops Comprehensions can also have multiple if-clauses interspersed with the for-clauses Later clauses in a comprehension can reference variables bound in earlier clauses Comprehension can also appear in the result expression of a comprehension, resulting in nested sequences Python provides a number of functional-style tools for working with iterators map() calls a function for each element in its input sequences map() returns an iterable object, not a fully-evaluated collection map() results are lazily evaluated, meaning that you must access them to force their calculation map() results are typically evaluated through the use of iteration constructs such as for-loops You must provide as many input sequences to map() as the callable argument has parameters map() takes one element from each input sequence for each output element it produces map() stops producing output when its shortest input sequence is exhausted map() can be used to implement the same behavior as comprehensions in some cases filter() selects values from an input sequence which match a specified criteria filter() passes each element in its input sequence to the function argument filter() returns an iterable over the input elements for which the function argument is truthy Like map(), filter() produces its output lazily If you pass None as the first argument to filter(), it yields the input values which evaluate to True in a boolean context reduce() cumulatively applies a function to the elements of an input sequence reduce() calls the input function with two arguments: the accumulated result so far, and the next element in the sequence reduce() is a generalization of summation reduce() returns the accumulated result after all of the input has been processed If you pass an empty sequence to reduce() it will raise a TypeError reduce() accepts an optional initial value argument This initial value is conceptually added to the front of the input sequence The initial value is returned if the input sequence is empty The map() and reduce() functions in Python are related to the ideas in the map-reduce algorithm Example</description>
    </item>
    
    <item>
      <title>Python Notes - 5</title>
      <link>https://harryho.github.io/code/python-notes-5/</link>
      <pubDate>Sun, 10 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-5/</guid>
      <description>Inheritance &amp;amp; Polymorphism  Specify single inheritance by putting a base class in parentheses after defining a class&amp;rsquo;s name Subclasses have all of the methods of their base class It&amp;rsquo;s often best to explicitly call a base class initializer from a subclass&amp;rsquo;s initializer If a class with a single base class doesn&amp;rsquo;t define an initializer, the base class&amp;rsquo;s initializer will be called automatically on construction Python treats __init__() like any other method Base class __init__() is not called if overridden Use super() to call base class __init__() isinstance() takes an object as its first argument and a type as its second isinstance() determines if its first argument is an instance of the second argument, or any subclass of the second argument isinstance() can accept a tuple of types as its second argument, in which it returns True if the first argument is of any of those types Checking for specific types is rare in Python and is sometimes regarded as bad design isinstance() determines if its first argument is a direct or indirect subclass of, or the same type as, the second argument Multiple inheritance means having more than one direct base class You declare multiple base classes with a comma-separated list of class names in parentheses after a class&amp;rsquo;s name in a class definition A class can have as many base classes as you want Python uses a well-defined &amp;ldquo;method resolution order&amp;rdquo; to resolve methods at runtime If a multiply-inheriting class defines no initializer, Python will automatically call the initializer of its first base class on construction __bases__ is a tuple of types on a class object which defines the base classes for the class __bases__ is in the same order as in the class definition __bases__ is populated for both single and multiple inheritance Method resolution order defines the order in which Python will search an inheritance graph for methods MRO is short for Method Resolution Order MRO is stored as a tuple of types in the __mro__ attribute of a class The mro() method on type objects returns the contents of __mro__ as a list To resolve a method, Python uses the first entry in a class&amp;rsquo;s MRO which has the requested method MRO is dependent on base class declaration order MRO is calculated by Python using the C3 algorithm MRO honors base-class ordering from class definitions MRO puts subclasses before base classes The relative order of classes in an MRO is consistent across all classes It is possible to specify an inconsistent base class ordering, in which case Python will raise a TypeError when the class definition is reached super() operates by using the elements in an MRO that come after some specified type super() returns a proxy object which forwards calls to the correct objects There are two distinct types of super() proxies, bound and unbound Unbound super() proxies are primarily used for implementing other Python features Bound proxies can be bound to either class objects or instances Calling super() with a base-class and derived-class argument returns a proxy bound to a class Calling super() with a class and an instance of that class returns a proxy bound to an instance A super() proxy takes the MRO of its second argument (or the type of its second argument), finds the first argument in that MRO, and uses everything after it in the MRO for method resolution Since class-bound proxies aren&amp;rsquo;t bound to an instance, you canâ€™t directly call instance methods that they resolve for you However, classmethods resolved by class-bound proxies can be called directly Python will raise a TypeError if the second argument is not a subclass or instance of the first argument Inappropriate use of super() can violate some design constraints * Calling super() with no arguments inside an instance method produces an instance-bound proxy Calling super() with no arguments inside a classmethod produces a class-bound proxy In both cases, the no-argument form of super() is the same as calling super() with the method&amp;rsquo;s class as the first argument and the method&amp;rsquo;s first argument as the second Since super() works on MROs and not just a class&amp;rsquo;s base classes, class can be designed to cooperate without prior knowledge of one another The class object is at the core of Python&amp;rsquo;s object model object is the ultimate base class for all other classes in Python If you don&amp;rsquo;t specify a base class for a class, Python automatically uses object as the base Because object is in every class&amp;rsquo;s inheritance graph, it shows up in every MRO.</description>
    </item>
    
    <item>
      <title>LCTHW C Lectures 3</title>
      <link>https://harryho.github.io/code/lcthw-lectures.3/</link>
      <pubDate>Fri, 08 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/lcthw-lectures.3/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&amp;rsquo;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 41 Project devpkg .\ex41\devpkg
.\ex41\devpkg\commands.c
#include &amp;lt;apr_uri.h&amp;gt; #include &amp;lt;apr_fnmatch.h&amp;gt; #include &amp;lt;unistd.h&amp;gt; #include &amp;quot;commands.h&amp;quot; #include &amp;quot;dbg.h&amp;quot; #include &amp;quot;bstrlib.h&amp;quot; #include &amp;quot;db.h&amp;quot; #include &amp;quot;shell.h&amp;quot; int Command_depends(apr_pool_t * p, const char *path) { FILE *in = NULL; bstring line = NULL; in = fopen(path, &amp;quot;r&amp;quot;); check(in != NULL, &amp;quot;Failed to open downloaded depends: %s&amp;quot;, path); for (line = bgets((bNgetc) fgetc, in, &#39;\n&#39;); line !</description>
    </item>
    
    <item>
      <title>LCTHW C Lectures 1</title>
      <link>https://harryho.github.io/code/lcthw-lectures.1/</link>
      <pubDate>Sat, 19 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/lcthw-lectures.1/</guid>
      <description>Author: Zed A. Shaw
All content comes from Zed&amp;rsquo;s Lecture Repository and Libraries Repository. All credit goes to Zed.
Exercise 0 Installing Software The Plan
 Install software on your system. Test that it works right.  Linux Install
On Debian/Ubuntu use:
$ sudo apt-get install build-essential  On RedHat/CentOS:
$ sudo yum groupinstall development-tools  Linux Testing
Test that your C compiler works with:
$ cc --version  OSX Install</description>
    </item>
    
    <item>
      <title>Python Notes - 3</title>
      <link>https://harryho.github.io/code/python-notes-3/</link>
      <pubDate>Fri, 11 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-3/</guid>
      <description>String &amp;amp; Representation str()  print() -&amp;gt; str() -&amp;gt; __str(self)__ Fallback to repr(). By default, str() simply calls repr() Produces a readable, human-friendly representation of an object It is also the string constructor  repr()  Exactness is more important than human-friendliness Suited for debugging. Unambiguous, precise, include type Includes identifying information. Generally best for logging and developers The default repr() is not very helpful As a rule, you should always write a repr() for your classes standard library reprlib.</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- server setup</title>
      <link>https://harryho.github.io/os/ubuntu-server-14/</link>
      <pubDate>Fri, 04 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-14/</guid>
      <description>Prelude
 This article is mainly to help experienced user install and setup Ubuntu server. If you are not familiar with Ubuntu system, please install Ubuntu desktop version at first, and you can follow Ubuntu deskstop setup
 Brief history  Please find it from Brief history of Linux  Assumption  You are familiar with Ubuntu, at least you have some experience working on Linux system. You are familiar with bash/shell script You are going to setup Ubuntu server for special purpose.</description>
    </item>
    
    <item>
      <title>Python Notes - 2</title>
      <link>https://harryho.github.io/code/python-notes-2/</link>
      <pubDate>Sat, 20 Feb 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-2/</guid>
      <description>Closure &amp;amp; Decorator LEGB rules  Local, Enclosing, Gloable, Built-in  Local function  Useful for specialized, one-off functions Aid in code organization and readability Similar to lambdas, but more general May contain multiple expressions May contain statements  Closure  Closure maintain references to objects from earlier scopes LEGB does not apply when making new bindings Usage of nonlocal
 Example  def make_timer(): last_called = None def elapsed(): nonlocal last_called now = time.</description>
    </item>
    
    <item>
      <title>Zendframework 2 MVC Starter</title>
      <link>https://harryho.github.io/project/zf2-mvc-starter/</link>
      <pubDate>Tue, 09 Feb 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/zf2-mvc-starter/</guid>
      <description>This starter is the starting point of zendframework 2 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with ZF2.
 This starter was built on the zendframework 2.x. This starter uses mysql as database setting by default. Include digest authentication by default. Include font-awesome files. Include Bootstrap 3 without bootstrap-loader. Include html5shiiv.js to support older IE browser.</description>
    </item>
    
    <item>
      <title>Python Notes - 1</title>
      <link>https://harryho.github.io/code/python-notes-1/</link>
      <pubDate>Sun, 07 Feb 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-1/</guid>
      <description>Package &amp;amp; Module  Packages are modules that contain other modules. Packages are generally implemented as directories containing a special __init__.py file. The __init__.py file is executed when the package is imported. Packages can contain sub packages which themselves are implemented with __init__.py files in directories. The module objects for packages have a __path__ attribute.  sys.path  List of directories which Python searches for modules.  ## list directories &amp;gt;&amp;gt;&amp;gt;import sys &amp;gt;&amp;gt;&amp;gt;sys.</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop setup &amp; dual boot </title>
      <link>https://harryho.github.io/os/ubuntu-desktop-14/</link>
      <pubDate>Sun, 10 Jan 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-desktop-14/</guid>
      <description>This article is mainly to help beginner install Ubuntu desktop at the first time. If you are looking for setup of Ubuntu server, please check out the blog &amp;ndash; Ubuntu server setup
 Brief history  Please find it from Brief history of Linux  Where to install Linux?  How to answer this quetion really depends user&amp;rsquo;s computer knowledge and skills. Basically Linux can be installed on almost any PC, laptop, embedded device or tablet.</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop, extra tools</title>
      <link>https://harryho.github.io/os/ubuntu-desktop-14-extra-tools/</link>
      <pubDate>Sun, 10 Jan 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-desktop-14-extra-tools/</guid>
      <description>How to install Ubunt 14  Please find it from Brief history of Linux  Install chrome wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb sudo dpkg -i google-chrome-stable_current_amd64.deb  Install Umake sudo add-apt-repository ppa:ubuntu-desktop/ubuntu-make sudo apt-get update sudo apt-get install ubuntu-make  Install IDEs via Umake umake ide pycharm umake web visual-studio-code umake android android-studio  General prerequest sed -i &amp;quot;/^# deb .*partner/ s/^# //&amp;quot; /etc/apt/sources.list &amp;amp;&amp;amp; apt-get update sudo apt-get install geany byobu p7zip-full gimp pdfshuffler scribus \ filezilla lftp ubuntu-restricted-extras vlc pyrenamer \ imagemagick hugin darktable skype avidemux  Remove Games sudo apt-get remove aisleriot gnome-mahjongg gnomine gnome-sudoku  Geany themes cd ~/Downloads git clone https://github.</description>
    </item>
    
    <item>
      <title>Python Web framework</title>
      <link>https://harryho.github.io/dev/python-django/</link>
      <pubDate>Mon, 28 Sep 2015 09:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/python-django/</guid>
      <description>Getting started Install Python &amp;amp; pip &amp;amp; virtualenv  Windows: Please find in from Home Page Ubuntu: Please find it from Ubuntu setup Python 3.4 (released March 2014) and Python 2.7.9 (released December 2014) ship with Pip. You can simply use pip or pip3 install any package you need.  Install Django Windows
 Install django  create a folder virtualenvs within the location of python 3 create a new virtualenv named django18 Activate the new virtual env Install Django 1.</description>
    </item>
    
    <item>
      <title>C# Notes -- Part 1</title>
      <link>https://harryho.github.io/code/csharp-notes-1/</link>
      <pubDate>Fri, 10 Apr 2015 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/csharp-notes-1/</guid>
      <description>Prelude  C# notes is the place, which I keep the good practice and solution from my projects and research.
 Create simple .net project without Visual Studio Assumption  DotNet Frameowork path c:\Windows\Microsfot.Net\Frameowork\v4.0.30319  Simple C# project Create a proejct named c#project md c#project cd c#project md bin src echo.&amp;gt;c#project.proj echo.&amp;gt;src\helloworld.cs  Open Project configuration c#project.proj with notepad &amp;lt;Project DefaultTargets = &amp;quot;Compile&amp;quot; xmlns=&amp;quot;http://schemas.microsoft.com/developer/msbuild/2003&amp;quot; &amp;gt; &amp;lt;!-- Set the application name as a property --&amp;gt; &amp;lt;PropertyGroup&amp;gt; &amp;lt;appname&amp;gt;c#app&amp;lt;/appname&amp;gt; &amp;lt;/PropertyGroup&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>C# Notes -- Part 2</title>
      <link>https://harryho.github.io/code/csharp-notes-2/</link>
      <pubDate>Fri, 10 Apr 2015 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/csharp-notes-2/</guid>
      <description>Problem  Set up the some scheduled tasks running in the backgroud to take care of data update or sync for every 15 mins, or everyday or every week
 Solution Options as scheduled backgroud service Windows Task Scheduler  Click the Start button. Click Control Panel. Click System and Maintenance. Click Administrative Tools. Double-click Task Scheduler.  Use Window Service as task scheduler Overview of design The design here is a simplified version, which I built for previous projects.</description>
    </item>
    
    <item>
      <title>Java Notes, Part 3: Date Time API </title>
      <link>https://harryho.github.io/code/java-notes-3/</link>
      <pubDate>Tue, 10 Feb 2015 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/java-notes-3/</guid>
      <description>Date-Time API Through the java.time packages, Java 8 provides a comprehensive Date-Time API to work with date, time, and datetime. By default, most of the classes are based on the ISO-8601 standards. The main classes are
 Instant  represents an instant on the timeline and it is suitable for machines, for example, as timestamps for event  LocalDate, LocalTime, LocalDateTime
 represents human readable date, time, and datetime without a time zone.</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 3</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-3/</link>
      <pubDate>Sun, 04 May 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-3/</guid>
      <description>This article will continue the topic of Windows command &amp;amp; hotkeys. Part-1 shows you common hotkeys and short command lines for Run windnow dialog. Part-2 advanced commands and how to create a batch script with all those commands. Here I am going to show you another secret weapon in Windows system-VBScript/JScript
Breif history  VBScript/JScript is an Active Scripting language developed by Microsoft that is modeled on Visual Basic. It allows Microsoft Windows system administrators to generate powerful tools for managing computers with error handling, subroutines, and other advanced programming constructs.</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 2</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</link>
      <pubDate>Mon, 24 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</guid>
      <description>This article will continue the topic of Windows command &amp;amp; hotkeys. Part-1 shows you common hotkeys and short command lines for Run windnow dialog. The rest of this topic will focus on the advanced commands and how to create a batch script with all those commands.
Let me clarify something first. Advanced command here does not mean that commands here are very complicated or much more powerful than common ones, which have been shown in the Part-1.</description>
    </item>
    
    <item>
      <title>JavaScript and Object Oriented Programming</title>
      <link>https://harryho.github.io/code/javascript-oop/</link>
      <pubDate>Thu, 20 Mar 2014 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/javascript-oop/</guid>
      <description>What is JavaScript?  Please find the answer on Home Page  What is Object Oriented Programming?  Object-oriented programming (OOP) is a programming paradigm based on the concept of &amp;ldquo;objects&amp;rdquo;, which may contain data, in the form of fields, as known as attributes or properties; and actions, in the form of functions, as known as methods.
For example, Car is an object. The color and model of the car are attributes.</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 1</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</link>
      <pubDate>Sun, 09 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</guid>
      <description>Do you want to make your friends amazed by your computer skill and praise you as genius? Or the hacker as watched in Sci-Fi movies? You don&amp;rsquo;t need Mac, Linux or other operating systems, just Windows, you can show-off and look like hacker and master of Zeroes and Ones, even you have no any idea of it. Here are some tricks by which you can make your friends&amp;rsquo; jaw drop.</description>
    </item>
    
    <item>
      <title>CentOS 6/7 Multi-Boot Setup</title>
      <link>https://harryho.github.io/os/centos-fedora-desktop/</link>
      <pubDate>Fri, 10 Jan 2014 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-fedora-desktop/</guid>
      <description>Breif History  Please find it from Brief history of Linux  Bootable usb preparation  Download dvd iso from url or torrent Use Win32 Image Writer to create usb. ( Bootice is useful tool to reformat the USB as origin )
 Install CentOS on virtual machine  Before you install, you are better to backup anything on the device which you are going to install, and chcek your internet is working properly.</description>
    </item>
    
    <item>
      <title>Java Notes, Part-2</title>
      <link>https://harryho.github.io/code/java-notes-2/</link>
      <pubDate>Mon, 08 Jul 2013 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/java-notes-2/</guid>
      <description>Thread Join  The join method allows one thread to wait for the completion of another. join responds to an interrupt by exiting with an InterruptedException.
 Demo code of thread join
  public class JoinDemo implements Runnable { private Random rand = new Random(System.currentTimeMillis()); public void run() { //simulate some CPU expensive task for (int i = 0; i &amp;lt; 100000000; i++) { rand.nextInt(); } System.out.println(&amp;quot;[&amp;quot; + Thread.</description>
    </item>
    
    <item>
      <title>Java Notes, Part-1</title>
      <link>https://harryho.github.io/code/java-notes-1/</link>
      <pubDate>Sat, 10 Dec 2011 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/java-notes-1/</guid>
      <description>Prelude  Java notes is the place, which I keep the good practice and solution from my projects and research.
 Refactor constant variables with Enum Enum was a great improvement in Java 1.5. From that more and more developer abandom the interface or abstract class as constant variable container.
Before Java 1.5 you will following coding in many Java program.
// Use interface or abstract class as constant variable container public interface Country { public static final String AU = &amp;quot;Australian&amp;quot;; public static final String UK = &amp;quot;United Kingdom&amp;quot;; public static final String US = &amp;quot;United State&amp;quot;; } public class Util { public static String getLanguageCode(String country) { String languageCode = &amp;quot;en&amp;quot;; switch (country) { case Country.</description>
    </item>
    
    <item>
      <title>Debug PHP with Eclipse PDT and Netbeans</title>
      <link>https://harryho.github.io/dev/php-debug/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://harryho.github.io/dev/php-debug/</guid>
      <description>PDT and Netbeans  PDT and Netbeans are two most popluar free PHP IDEs. We choose such IDE for productivity, so code intelligence and debug are two key factors, which let us love IDE. Because both are not created for PHP development at the start, there is no built-in server to support the PHP web debug. When we want to use it to debug, we would come across some wierd problems.</description>
    </item>
    
  </channel>
</rss>