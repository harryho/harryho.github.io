<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_index on Hello World</title>
    <link>https://harryho.github.io/index.xml</link>
    <description>Recent content in _index on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Jun 2017 16:56:21 +1100</lastBuildDate>
    <atom:link href="https://harryho.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>_dummy</title>
      <link>https://harryho.github.io/index/_dummy/</link>
      <pubDate>Thu, 16 Feb 2017 11:47:59 +1100</pubDate>
      
      <guid>https://harryho.github.io/index/_dummy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular 4 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-angular4-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-angular4-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Ng4Crm&lt;/strong&gt; is reusable CRM project for real-world business based on Angular 4, Angular-Material &amp;amp; Bootstrap 3.&lt;/p&gt;

&lt;p&gt;This project starts from a popular starter project &lt;a href=&#34;https://github.com/AngularClass/angular-starter&#34;&gt;AngularClass/AngularStarter&lt;/a&gt;. The goal of this project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This project is built on the top of AngularClass/Angular-Starter.&lt;/li&gt;
&lt;li&gt;The UI part of this project combine Angular-Material and Bootstrap 3. Because the controls from Angular-Material is very limited, there are a few extra components require Bootstrap 3 for help.&lt;/li&gt;
&lt;li&gt;This project includes ng-charts, pagination, progress-bar, confirmation dialog, etc. features.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-ng4crm&#34;&gt;Structure of Ng4Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\ng4crm
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---app
|   |   +---_gurad             &amp;lt;-// auth guard for authentication
|   |   +---_models             &amp;lt;-// common models for whole app
|   |   +---_services            &amp;lt;-// common services for whole app
|   |   +---about                &amp;lt;-// about component   
|   |   +---customer              &amp;lt;-// customer component
|   |   +---dashboard            &amp;lt;-// dashboard component  
|   |   +---notfoundpage         &amp;lt;-// notfoundpage component  
|   |   +---login                &amp;lt;-// login component  
|   |   +---order                &amp;lt;-// customer component 
|   |   +---root                &amp;lt;-// root component 
|   |   +---shared                &amp;lt;-// common component for whole app
|   |   +---app.component.ts
|   |   +---app.module.ts
|   |   +---app.routes.ts
|   |   +---app.services.ts
|   |   +---environment.ts
|   |   \---...
|   +---assets         &amp;lt;-//   images  and css from third parties
|   +---styles         &amp;lt;-//   customized css files
|   +---main.browser.aot.ts     
|   +---main.browser.ts  
|   +---polyfills.browser.ts  
|   \---...
\...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-ng4crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/ng4crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Vue.js and React. If you have interests in those technical stacks. You can find and clone those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-vue2-crm&#34;&gt;Vue2 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-react-crm&#34;&gt;React Redux Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CNTK Notes, Part 1</title>
      <link>https://harryho.github.io/dev/cntk-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/cntk-notes-1/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Windows 7 or higher version&lt;/li&gt;
&lt;li&gt;You are using Anaconda to setup the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-cntk-virtual-environment&#34;&gt;Create CNTK virtual environment&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# use follow command to remove existing virtual environment
# conda remove -n cntk --all
conda create -n cntk 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;activate-virtual-environment-and-install-cntk&#34;&gt;Activate virtual environment and install CNTK&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;activate cntk
pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.0rc3-cp36-cp36m-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test-cntk&#34;&gt;Test CNTK&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;python
&amp;gt;&amp;gt;&amp;gt; import cntk
&amp;gt;&amp;gt;&amp;gt; cntk.__version__
&#39;2.0rc3&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Laravel MVC Starter</title>
      <link>https://harryho.github.io/project/laravel-mvc-starter/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/laravel-mvc-starter/</guid>
      <description>

&lt;p&gt;This starter is the starting point of laravel 5 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with laravel.&lt;/p&gt;

&lt;h2 id=&#34;overview-of-project&#34;&gt;Overview of project&lt;/h2&gt;

&lt;h2 id=&#34;bdd-business-domain-design&#34;&gt;BDD ( Business domain design)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;+-------+ 0...*     0...* +--------+ 1     0...* +---------+ 
| tag   | --------------- |  post  | ----- ----- | comment |
+-------+                 +--------+             +---------+           
                               | 1...*
                               |
                               | 0...*
                          +--------+ 
                          |  like  |
                          +--------+

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;\path\to\lara-mvc-starter
+---app                 &amp;lt;-// Customized PHP application code
|   +---Console
|   +---Exceptions
|   +---Http
|   |   +---Controllers
|   |   |   \---Auth
|   |   \---Middleware
|   \---Providers
+---bootstrap          &amp;lt;-// bootstrap the framework and configure autoloading
|   \---cache
+---config              &amp;lt;-// application configuration
+---database            &amp;lt;-// database migration files
|   +---factories
|   +---migrations
|   \---seeds
+---public               &amp;lt;-// Distributed website folder including Style sheet
+---resources            &amp;lt;-// View files, Javascripts, localization setting
|   +---assets
|   +---lang
|   \---views
|       +---admin
|       +---blog
|       +---errors
|       +---layouts
|       +---other
|       +---partials
|       \---vendor
|           \---pagination
+---routes              &amp;lt;-// Route definitions and setting
+---storage             &amp;lt;-//Blade templates, file based sessions, file caches
|   +---app
|   |   \---public
|   +---framework
|   |   +---cache
|   |   +---sessions
|   |   \---views
|   \---logs
+---tests
\---vendor            &amp;lt;-// Laravel framework

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/lara-mvc-starter.png&#34; alt=&#34;laravel-mvc-starter&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-lara-mvc-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/lara-mvc-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>React Redux Crm Project</title>
      <link>https://harryho.github.io/project/reetek-react-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-react-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;React-Crm&lt;/strong&gt; is reusable CRM starter project for real-world business based on React 15.4, React-Redux &amp;amp; Material-UI.&lt;/p&gt;

&lt;p&gt;The goal of this starter project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This project is built on the top of React/Redux.&lt;/li&gt;
&lt;li&gt;The UI part of this project uses Material-UI.&lt;/li&gt;
&lt;li&gt;This project uses Redux-Thunk to support backend API.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-react-crm&#34;&gt;Structure of React-Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\ng4crm
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---app
|   |   +---_gurad             &amp;lt;-// auth guard for authentication
|   |   +---_models             &amp;lt;-// common models for whole app
|   |   +---_services            &amp;lt;-// common services for whole app
|   |   +---about                &amp;lt;-// about component   
|   |   +---customer              &amp;lt;-// customer component
|   |   +---dashboard            &amp;lt;-// dashboard component  
|   |   +---notfoundpage         &amp;lt;-// notfoundpage component  
|   |   +---login                &amp;lt;-// login component  
|   |   +---order                &amp;lt;-// customer component 
|   |   +---root                &amp;lt;-// root component 
|   |   +---shared                &amp;lt;-// common component for whole app
|   |   +---app.component.ts
|   |   +---app.module.ts
|   |   +---app.routes.ts
|   |   +---app.services.ts
|   |   +---environment.ts
|   |   \---...
|   +---assets         &amp;lt;-//   images  and css from third parties
|   +---styles         &amp;lt;-//   customized css files
|   +---main.browser.aot.ts     
|   +---main.browser.ts  
|   +---polyfills.browser.ts  
|   \---...
\...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-react-crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/react-crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Vue.js and Angular. If you have interests in those technical stacks. You can find and clone those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-vue2-crm/&#34;&gt;Vue2 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-angular4-crm&#34;&gt;Angular4 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 1</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-1/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Ubuntu 16&lt;/li&gt;
&lt;li&gt;Your machine has Nvidia GPU card installed&lt;/li&gt;
&lt;li&gt;If you are using Ubuntu 14, the installation of CUDA and cuDNN will be a bit different. Please check Google&amp;rsquo;s instructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-python3-and-pip3&#34;&gt;Install python3 and pip3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14&#34;&gt;Please find instructions here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-virtualenv-via-pip3&#34;&gt;Install virtualenv via pip3&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-two-tensorflow-virtualenvs&#34;&gt;Create two tensorflow virtualenvs.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/.envs
virtualenv --system-site-packages ~/.envs/tf  # CPU only
virtualenv --system-site-packages ~/.envs/tfgpu   # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tensorflow-for-different-virtualenvs&#34;&gt;Install tensorflow for different virtualenvs&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tf/bin/activate
source ~/.envs/tfgpu/bin/activate

pip3 install tensorflow # CPU only
pip3 install tensorflow-gpu # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-cuda-and-cudnn-for-tensorflow-gpu&#34;&gt;Install CUDA and cuDNN for tensorflow-gpu&lt;/h3&gt;

&lt;h4 id=&#34;use-following-command-to-check-you-gpu-information&#34;&gt;Use following command to check you GPU information&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lspic -nn | grep &#39;\[03&#39; ]
lshw -numeric -C display

# GPU info sample
# NVIDIA Corporation GM107M [GeForce GTX 850M]
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-nvidia-driver-based-on-above-gpu-info-http-www-geforce-com-drivers&#34;&gt;Download and install Nvidia driver based on above GPU info &lt;a href=&#34;http://www.geforce.com/drivers&#34;&gt;http://www.geforce.com/drivers&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;chmod +x NVIDIA-Linux-xxxx.run
sudo ./NVIDIA-Linux-xxxx.run   
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cuda-from-nvidia-https-developer-nvidia-com-cuda-downloads&#34;&gt;Download and install  CUDA from NVIDIA &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;https://developer.nvidia.com/cuda-downloads&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i cuda-repo-xxxxx.deb
sudo apt-get udpate
sudo apt-get install cuda
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-cuda-home&#34;&gt;Setup CUDA_HOME&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# CUDA
export CUDA_HOME=/usr/local/cuda-8.0 
export LD_LIBRARY_PATH=${CUDA_HOME}/lib64 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cudnn-for-cuda-https-developer-nvidia-com-cudnn&#34;&gt;Download and install cuDNN for CUDA &lt;a href=&#34;https://developer.nvidia.com/cudnn&#34;&gt;https://developer.nvidia.com/cudnn&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# extra the cuDNN tar ball
tar -xvf cudnn-8.0
cd cuda 
sudo cp lib64/* /usr/local/cuda-8.0/lib64
sudo cp include/* /usr/local/cuda-8.0/include
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-sample-code-to-test-tensorflow&#34;&gt;Use sample code to test Tensorflow&lt;/h3&gt;

&lt;h4 id=&#34;save-code-below-to-file-test-py&#34;&gt;Save code below to file test.py&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import tensorflow as tf

# Model parameters
W = tf.Variable([.3], tf.float32)
b = tf.Variable([-.3], tf.float32)
# Model input and output
x = tf.placeholder(tf.float32)
linear_model = W * x + b
y = tf.placeholder(tf.float32)
# loss
loss = tf.reduce_sum(tf.square(linear_model - y)) # sum of the squares
# optimizer
optimizer = tf.train.GradientDescentOptimizer(0.01)
train = optimizer.minimize(loss)
# training data
x_train = [1,2,3,4]
y_train = [0,-1,-2,-3]
# training loop
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init) # reset values to wrong
for i in range(1000):
sess.run(train, {x:x_train, y:y_train})

# evaluate training accuracy
curr_W, curr_b, curr_loss  = sess.run([W, b, loss], {x:x_train, y:y_train})
print(&amp;quot;W: %s b: %s loss: %s&amp;quot;%(curr_W, curr_b, curr_loss))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-with-tensorflow-gpu-gpu-enabled&#34;&gt;Test with tensorflow-gpu (GPU enabled)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tfgpu/bin/activate
python3 test.py

# You will probably see the result as follow 
# ....
# name: GeForce GTX 850M
# major: 5 minor: 0 memoryClockRate (GHz) 0.9015
# pciBusID 0000:0a:00.0
# Total memory: 3.95GiB
# Free memory: 3.58GiB
# 2017-04-25 10:25:59.640621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 
# 2017-04-25 10:25:59.640626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y 
# 2017-04-25 10:25:59.640640: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&amp;gt; (device: 0, name: GeForce GTX 850M, pci # bus id: 0000:0a:00.0)
# W: [-0.9999969] b: [ 0.99999082] loss: 5.69997e-11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 2</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-2/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-2/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Windows 7 or higher version&lt;/li&gt;
&lt;li&gt;You are using Anaconda to setup the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-anaconda&#34;&gt;Install Anaconda&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.continuum.io/downloads&#34;&gt;Please download Anaconda from the official site&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-tensorflow-virtualenv-with-python-3-5&#34;&gt;Create tensorflow virtualenv with python 3.5&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Anaconda uses python 3.6 by default. Tensorflow only supports python 3.5.&lt;/p&gt;

&lt;p&gt;cd /path/to/envs
conda create -n tensorflow&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-tensorflow&#34;&gt;Install tensorflow&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;activate tensorflow
# For CPU
pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.1.0-cp35-cp35m-win_amd64.whl

# Or for GPU
pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-1.1.0-cp35-cp35m-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-sample-code-to-test-tensorflow&#34;&gt;Use sample code to test Tensorflow&lt;/h3&gt;

&lt;h4 id=&#34;save-code-below-to-file-test-py&#34;&gt;Save code below to file test.py&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import tensorflow as tf

# Model parameters
W = tf.Variable([.3], tf.float32)
b = tf.Variable([-.3], tf.float32)
# Model input and output
x = tf.placeholder(tf.float32)
linear_model = W * x + b
y = tf.placeholder(tf.float32)
# loss
loss = tf.reduce_sum(tf.square(linear_model - y)) # sum of the squares
# optimizer
optimizer = tf.train.GradientDescentOptimizer(0.01)
train = optimizer.minimize(loss)
# training data
x_train = [1,2,3,4]
y_train = [0,-1,-2,-3]
# training loop
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init) # reset values to wrong
for i in range(1000):
sess.run(train, {x:x_train, y:y_train})

# evaluate training accuracy
curr_W, curr_b, curr_loss  = sess.run([W, b, loss], {x:x_train, y:y_train})
print(&amp;quot;W: %s b: %s loss: %s&amp;quot;%(curr_W, curr_b, curr_loss))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-with-tensorflow-gpu-gpu-enabled&#34;&gt;Test with tensorflow-gpu (GPU enabled)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;activate tensorflow
cd /ws/python/tf
python3 test.py

# You will probably see the result as follow 
# ....
# name: GeForce GTX 850M
# major: 5 minor: 0 memoryClockRate (GHz) 0.9015
# pciBusID 0000:0a:00.0
# Total memory: 3.95GiB
# Free memory: 3.58GiB
# 2017-04-25 10:25:59.640621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 
# 2017-04-25 10:25:59.640626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y 
# 2017-04-25 10:25:59.640640: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&amp;gt; (device: 0, name: GeForce GTX 850M, pci # bus id: 0000:0a:00.0)
# W: [-0.9999969] b: [ 0.99999082] loss: 5.69997e-11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Vue 2 Admin Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-admin/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-admin/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Vue2Admin&lt;/strong&gt; is a fully responsive admin template that is inspired by &lt;a href=&#34;https://almsaeedstudio.com&#34;&gt;AdminLTE&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This template is built-in with Vue 2 at the start.&lt;/li&gt;
&lt;li&gt;It include Vue Resource, Vuex as well.&lt;/li&gt;
&lt;li&gt;The plugins for this project are loaded with script loader.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-reetek-vue2admin&#34;&gt;Structure of Reetek Vue2Admin&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\vue2admin
+---build              &amp;lt;-// webpack files
+---config             &amp;lt;-// configuration of dev or prod environment
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---components
|   |   +---charts
|   |   +---dashboard
|   |   +---forms
|   |   +---mailbox
|   |   +---misc
|   |   +---pages
|   |   +---tables
|   |   +---ui
|   |   \---widget
|   \---filters
+---static              &amp;lt;-// css, dump data, fonts, image files and plugins
|   +---css
|   +---data
|   +---fonts
|   +---img
|   |   +---credit
|   |   \---stock
|   \---js
|       \---plugins         &amp;lt;-// plugins for admin dashboard 
|           +---AdminLTE
|           +---bootstrap
|           +---bootstrap-slider
|           +---bootstrap-wysihtml5
|           +---chartjs
|           +---ckeditor
|           + ...
\---test
    +---e2e
    \---unit
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/vue2admin_screenshot1_sm.png&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/vue2admin_screenshot2_sm.png&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-vue2admin-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/vue2admin.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Vue 2 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Vue2Crm&lt;/strong&gt; is a reusable Vue.js CRM starter project for real-world business based on Vue 2 PWA template with Vuetify.&lt;/p&gt;

&lt;p&gt;The goal of this project is to create a reusable project for real-world business. To achieve this target, we need a solution which includes authentication process, restful API feature and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter project is built-in with Vue 2 PWA from scratch.&lt;/li&gt;
&lt;li&gt;The whole UI is built on the Vuetify&lt;/li&gt;
&lt;li&gt;It includes Vuex, Axios as well.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-vue2crm&#34;&gt;Structure of Vue2Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\vue2crm
+---build              &amp;lt;-// webpack files
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---components
|   |   +---404.vue
|   |   +---About.vue
|   |   +---Customers.vue
|   |   +---Customer.vue
|   |   +---Orders.vue
|   |   +---Order.vue
|   |   +---Login.vue
|   |   \---...
|   +---router         &amp;lt;-// vue-router
|   +---utils
|   |   +---auth.js    &amp;lt;-// auth service
|   |   +---backend-api.js  &amp;lt;-// Axios instance 
|   |   +---store.js   &amp;lt;-//  Vuex
|   \---stylus         &amp;lt;-// Customize stylus
+---static              &amp;lt;-// css, fonts, image files
|   +---img
|   \---manifest.json   &amp;lt;-// PWA manifest file
\---test
    +---e2e
    \---unit

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-vue2crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/vue2crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Angular and React. If you have interests in those technical stacks. You can find those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-angular4-crm&#34;&gt;Angular4 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-react-crm&#34;&gt;React Redux Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Angularjs Webpack ES6 Starter</title>
      <link>https://harryho.github.io/project/angularjs-webpack-es6-starter/</link>
      <pubDate>Tue, 15 Nov 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/angularjs-webpack-es6-starter/</guid>
      <description>

&lt;p&gt;This starter was inspired by another similar angular webpack starter repository. It simply includes font-awesome, bootstrap for the people who don&amp;rsquo;t want to use boostrap-webpack, font-awesome-webpack. I find it saves us so much effort to create prototype, since we don&amp;rsquo;t need spectacular UI.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter uses angular 1.5 for someone want to build component.&lt;/li&gt;
&lt;li&gt;This repo followes mvc patterns instead of component pattern.&lt;/li&gt;
&lt;li&gt;ES6, and ES7 support with babel.&lt;/li&gt;
&lt;li&gt;Development server with live reload.&lt;/li&gt;
&lt;li&gt;Production builds with cache busting.&lt;/li&gt;
&lt;li&gt;Testing environment using karma to run tests and jasmine as the framework.&lt;/li&gt;
&lt;li&gt;Code coverage when tests are run.&lt;/li&gt;
&lt;li&gt;Include font-awesome without font-awesome-loader.&lt;/li&gt;
&lt;li&gt;Include Bootstrap 3 without bootstrap-loader.&lt;/li&gt;
&lt;li&gt;No gulp and no grunt, just npm scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
\path\to\angularjs-webpack-es6-starter
|   .babelrc                                    &amp;lt;-// default setting es2015.
|   karma.conf.js                               &amp;lt;-// tests and report setup 
|   webpack.config.js                           &amp;lt;-// webpack config
\---src
    |   tests.webpack.js
    |   
    +---app
    |   |   app.html                            &amp;lt;-// app view
    |   |   app.js                              &amp;lt;-// app module
    |   |   app.routes.js                       &amp;lt;-// app route to manage all routes 
    |   |   app.runner.js                       &amp;lt;-// app runner for state change enhancement  
    |   |   app.spec.js                         &amp;lt;-// app spec file for testing 
    |   |   
    |   +---common                              &amp;lt;-// common module for whole app
    |   |   |   common.js
    |   |   |   common.spec.js
    |   |   +---directives                      &amp;lt;-// common directives for whole app
    |   |   |       appUiDirectives.js
    |   |   |       appUiDirectives.spec.js
    |   |   |       commonDirectives.js
    |   |   |       commonDirectives.spec.js
    |   |   +---services                        &amp;lt;-// common views for whole app
    |   |   |       ApiService.js
    |   |   |       ApiService.spec.js
    |   |   |       UtilService.js
    |   |   |       UtilService.spec.js
    |   |   \---views                           &amp;lt;-// contains common views
    |   |           footer-view.html
    |   |           header-view.html
    |   |           sidebar-view.html
    |   |           topbar-view.html
    |   \---main                                &amp;lt;-// built-in fonts, css, images 
    |       \---dashboard
    |           +---controllers
    |           |       dashboardController.js
    |           |       dashboardController.spec.js
    |           \---views
    |                   dashboard-view.html
    |                   
    +---public                                  &amp;lt;-// built-in fonts, css, images 
    |   |   index.html
    |   +---fonts
    |   |   +--- ...
    |   \---img
    |       +--- favicon.ico
    \---style                                  &amp;lt;-// css files including customized css
           
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;browse-repository-https-github-com-harryho-angularjs-webpack-es6-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/angularjs-webpack-es6-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Git Notes</title>
      <link>https://harryho.github.io/dev/git-notes/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/git-notes/</guid>
      <description>&lt;p&gt;Create a new branch with git and manage branches&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create the branch on your local machine and switch in this branch :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b [name_of_your_new_branch]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Push the branch on github :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  $ git push origin [name_of_your_new_branch]
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you want to commit something in your branch, be sure to be in your branch.&lt;/p&gt;

&lt;p&gt;You can see all branches created by using :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which will show :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* approval_messages
  master
  master_clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add a new remote for your branch :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git remote add [name_of_your_remote]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Push changes from your commit into your branch :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push [name_of_your_new_remote] [name_of_your_branch]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Update your branch when the original branch from official repository has been updated :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git fetch [name_of_your_remote]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then you need to apply to merge changes, if your branch is derivated from develop you need to do :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git merge [name_of_your_remote]/develop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete a branch on your local filesystem :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -d [name_of_your_new_branch]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To force the deletion of local branch on your filesystem :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -D [name_of_your_new_branch]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Delete the branch on github :&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push origin :[name_of_your_new_branch]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Compare two branch:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git diff [name_of_branch1]..[name_of_branch2]
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;p&gt;Branch merge&lt;/p&gt;

&lt;p&gt;Example&lt;/p&gt;

&lt;p&gt;Fast-Forward Merge&lt;/p&gt;

&lt;p&gt;Our first example demonstrates a fast-forward merge. The code below creates a new branch, adds two commits to it, then integrates it into the main line with a fast-forward merge.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Start a new feature
git checkout -b new-feature master
# Edit some files
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Start a feature&amp;quot;
# Edit some files
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Finish a feature&amp;quot;
# Merge in the new-feature branch
git checkout master
git merge new-feature
git branch -d new-feature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is a common workflow for short-lived topic branches that are used more as an isolated development than an organizational tool for longer-running features.&lt;/p&gt;

&lt;p&gt;Also note that Git should not complain about the git branch -d, since new-feature is now accessible from the master branch.&lt;/p&gt;

&lt;p&gt;3-Way Merge&lt;/p&gt;

&lt;p&gt;The next example is very similar, but requires a 3-way merge because master progresses while the feature is in-progress. This is a common scenario for large features or when several developers are working on a project simultaneously.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Start a new feature
git checkout -b new-feature master
# Edit some files
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Start a feature&amp;quot;
# Edit some files
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Finish a feature&amp;quot;
# Develop the master branch
git checkout master
# Edit some files
git add &amp;lt;file&amp;gt;
git commit -m &amp;quot;Make some super-stable changes to master&amp;quot;
# Merge in the new-feature branch
git merge new-feature
git branch -d new-feature
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>PHP web framework</title>
      <link>https://harryho.github.io/dev/php-web/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/php-web/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Here we are going to explore some PHP web frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;php-development-environment-setup&#34;&gt;PHP development environment setup&lt;/h1&gt;

&lt;h2 id=&#34;install-php-5-6-x&#34;&gt;Install PHP 5.6.x&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find the instruction from &lt;a href=&#34;https://harryho.github.io/#php&#34;&gt;home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;composer&#34;&gt;Composer&lt;/h2&gt;

&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;curl -s https://getcomposer.org/installer | php --&lt;/code&gt; to install composer on Linux&lt;/li&gt;
&lt;li&gt;use &amp;lsquo;composer -v &amp;rsquo; to verify.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;composer&lt;/a&gt; and install php on your PC&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;composer -v&lt;/code&gt; to verify the composer is ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;zendframework&#34;&gt;Zendframework&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Zend Framework is a collection of 60+ packages for professional PHP development. It can be used to develop web applications and services using PHP 5.6+, and provides 100% object-oriented code using a broad spectrum of language features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;zendframework-2-x&#34;&gt;Zendframework 2.x&lt;/h2&gt;

&lt;h3 id=&#34;create-zendframework-2-project-from-scratch&#34;&gt;Create Zendframework 2 project from scratch&lt;/h3&gt;

&lt;h4 id=&#34;clone-zendframework-skeleton-project-as-new-project&#34;&gt;* Clone Zendframework skeleton project as new project.&lt;/h4&gt;

&lt;h4 id=&#34;install-zendframework-with-composer&#34;&gt;* Install zendframework with composer&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    cd  /path/to/newproject
    git clone git://github.com/zendframework/ZendSkeletonApplication.git
    cd ZendSkeletonApplication
    php composer.phar self-update
    php composer.phar install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;start-app-with-php-built-in-server&#34;&gt;* Start app with php built-in server&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public/ public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;use-apache-server&#34;&gt;* Use apache server&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt; &amp;lt;VirtualHost *:80&amp;gt;
     ServerName zf2-tutorial.localhost
     DocumentRoot /path/to/newproject/ZendSkeletonApplication/public
     SetEnv APPLICATION_ENV &amp;quot;development&amp;quot;
     &amp;lt;Directory /path/to/newproject/ZendSkeletonApplication/public&amp;gt;
         DirectoryIndex index.php
         AllowOverride All
         Require all granted
     &amp;lt;/Directory&amp;gt;
 &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-zf2-mvc-starter-project&#34;&gt;Use Zf2-MVC-Starter project&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Please find the project introduction &lt;a href=&#34;https://harryho.github.io/project/zf2-mvc-starter/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;laravel&#34;&gt;Laravel&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Laravel is a free, open-source PHP web framework, created by Taylor Otwell and intended for the development of web applications following the model–view–controller (MVC) architectural pattern. Some of the features of Laravel are a modular packaging system with a dedicated dependency manager, different ways for accessing relational databases, utilities that aid in application deployment and maintenance, and its orientation toward syntactic sugar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;laravel-5-x&#34;&gt;Laravel 5.x&lt;/h2&gt;

&lt;h3 id=&#34;install-laravel-global&#34;&gt;Install laravel global&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Use `composer global laravel/installer`
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;enable-the-mbs-string-extension&#34;&gt;Enable the &lt;code&gt;mbs-string&lt;/code&gt; extension&lt;/h3&gt;

&lt;h4 id=&#34;update-php-ini-config&#34;&gt;update &lt;code&gt;php.ini&lt;/code&gt; config&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Open &lt;code&gt;php.ini&lt;/code&gt; with notepad&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;;extension=php_mbstring.dll&lt;/code&gt; to &lt;code&gt;extension=php_mbstring.dll&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-new-project-from-scratch&#34;&gt;Create new project from scratch&lt;/h3&gt;

&lt;h4 id=&#34;create-new-project&#34;&gt;Create new project&lt;/h4&gt;

&lt;h4 id=&#34;migrate-database-and-seed-dummy-data&#34;&gt;Migrate database and seed dummy data&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Create data model&lt;/li&gt;
&lt;li&gt;Following is the sample code&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php

namespace App;
use Illuminate\Database\Eloquent\Model;

class Article extends Model
{
    protected $fillable = [&#39;title&#39;, &#39;content&#39;];

    public function getTitleAttribute($value) {
        return strtoupper($value);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Use artisan to create the table&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
php artisan migrate -VVV 

# Use following command to seek dump or initial data
php artisan db:seed
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fix the error of Specified key was too long&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Schema;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        //
        Schema::defaultStringLength(191);
    }

    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-lavarel-mvc-starter-project&#34;&gt;Use Lavarel MVC Starter project&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;* Please find the project introduction [here](/project/lara-mvc-starter/). 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-laravel-rest-starter-project&#34;&gt;Use Laravel Rest Starter project&lt;/h3&gt;

&lt;h2 id=&#34;prestashop&#34;&gt;PrestaShop&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PrestaShop is a free, open source e-commerce solution. The software is published under the Open Software License (OSL). It is written in the PHP programming language with support for the MySQL database management system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;prestashop-1-5-4&#34;&gt;Prestashop 1.5.4&lt;/h2&gt;

&lt;h3 id=&#34;download-the-zip-file-from-download-page-https-www-prestashop-com-en-developers-versions&#34;&gt;Download the zip file from &lt;a href=&#34;https://www.prestashop.com/en/developers-versions&#34;&gt;download page&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&#34;install-prestashop&#34;&gt;Install Prestashop&lt;/h3&gt;

&lt;p&gt;There is a instruction page inside the zip file. You can follow the instructions to complete the installation. There is no EasyPHP, Wamp, XAMPP, or any similar AMP (Apache+MySQL+PHP) package installed on my PC, but I have PHP, Apache, MySQL installed. Actually EasyPHP, Wamp are just the bundle of PHP development tools, which include PHP, Apache, MySQL. I don&amp;rsquo;t want to install too many duplicate softwares and packages on my PC, so I prefer to install Prestashop with what I have on my PC. Which strategy is up to you.&lt;/p&gt;

&lt;h3 id=&#34;install-prestashop-with-amp-package&#34;&gt;Install Prestashop with AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Follow the instruction page within zip file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-prestashop-without-amp-package&#34;&gt;Install Prestashop without AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unzip file to &lt;code&gt;path\to\prestashop_workspace&lt;/code&gt;. Your folder structure will look like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\prestashop_workspace
\---prestashop
    +---admin 
    +---cache 
    +---classes  
    +---config 
    +---controllers 
    +---css
    +---docs
    +---download
    +---img 
    +---install    
    +---js   
    +---localization
    +---log
    +---mails
    +---modules  
    +---override
    +---pdf
    +---themes
    +---tools 
    +---translations
    +---upload
    \---webservice
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start your MySQL or check the status of MySQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use your MySQL client tool to connect to your MySQL server.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Launch installer page with php server&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start a command prompt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/prestashop_workspace
php -S 0.0.0.0:1234 -t prestashop
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Open the link &lt;code&gt;http://localhost:1234/install/index.php&lt;/code&gt; with browser, then you can start installation process.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Choose language and click &lt;code&gt;Next&lt;/code&gt;, and then select the checkbox &amp;ldquo;I agree bah lah bah lah &amp;hellip;. &amp;rdquo; and click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If there is an error &lt;code&gt;GD Library is not installed&lt;/code&gt; prompt, you just need to enable the library on &lt;code&gt;php.ini&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DO NOT close your browser.&lt;/li&gt;
&lt;li&gt;Stop the php server by &lt;code&gt;Ctrl + C&lt;/code&gt; in the command prompt.&lt;/li&gt;
&lt;li&gt;Use notepad to open the file &lt;code&gt;php.ini&lt;/code&gt; under the &lt;code&gt;\path\to\php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Uncomment the config &lt;code&gt;;extension=php_gd2.dll&lt;/code&gt; =&amp;gt; &lt;code&gt;extension=php_gd2.dll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start the php server again
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click the &lt;code&gt;Refresh this settings&lt;/code&gt;, and click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Fill the login user and password. If your MySQL port is not 3306, please attach your port to the server address input field. Click &lt;code&gt;Test your database connection&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you got error &lt;code&gt;prestashop database not found&lt;/code&gt;, you need to create a database on mysql server.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I simply create a new database immediately with one command line&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;CREATE DATABASE prestashop CHAR SET utf8 COLLATE &#39;utf8_unicode_ci&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test the connection again. You will get the green light
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Click &lt;code&gt;Next&lt;/code&gt; and you can start to setup your store informaiton, such as, store name, admin account, etc. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Setup your sample store. Click &lt;code&gt;Next&lt;/code&gt;. Then the installer will help you finish the initialization.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After the store setup, you can access the website by clicking &lt;code&gt;Font site&lt;/code&gt;, but you can not access back office, as known as admin panel.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Don&amp;rsquo;t panic. It is easy to fix. Stop the php server by clicking &lt;code&gt;Ctrl+C&lt;/code&gt;, and delete the folder &lt;code&gt;install&lt;/code&gt; under the root, and then start the server again. Open the folder with prestashop, you will find something interesting. The original folder &lt;code&gt;admin&lt;/code&gt; under &lt;code&gt;prestashop&lt;/code&gt; has been renamed to &lt;code&gt;adminXXXX&lt;/code&gt;. X is a number. It is Prestashop special trick to secure your admin folder. Now you need to use this new name as path to acces back office. Your new back office link will be &lt;code&gt;http://localhost:1234/adminXXXX&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Open the new link in browser and type in your admin id and password. Now you can start managing your Prestashop site. Enjoy it.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;forgot-admin-s-password&#34;&gt;Forgot admin&amp;rsquo;s password&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Forgot admin&amp;rsquo;s password or somehow you have to reset password and you cannot get admin&amp;rsquo;s password from previous adminstrator. For such case, there is a simple way to update admin&amp;rsquo;s password from database.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tailor the SQL below. Then you should be able to use new password to login.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;UPDATE ps_employee SET passwd = MD5(&#39;&amp;lt;_COOKIE_KEY_&amp;gt;password&#39;) 
WHERE ps_employee.id_employee = &amp;lt;ID_EMPLOYEE&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting-1&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;h4 id=&#34;innodb-error&#34;&gt;InnoDB error&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Error : InnoDB is not supported by your MySQL server&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;You got error because Prestashop 1.5 is not working properly with MySQL 5.4 and later.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;Update files &lt;code&gt;DbPDO.php&lt;/code&gt; , &lt;code&gt;MySQL.php&lt;/code&gt; and &lt;code&gt;DbMySQLi.php&lt;/code&gt; as follow.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;    // $sql = &#39;SHOW VARIABLES WHERE Variable_name = \&#39;have_innodb\&#39;&#39;;
    $sql = &amp;quot;SELECT SUPPORT FROM INFORMATION_SCHEMA.ENGINES WHERE ENGINE LIKE &#39;INNO%&#39;&amp;quot;;

    ...
    
    // if (!$row || strtolower($row[&#39;Value&#39;]) != &#39;yes&#39;)
    if (!$row || strtolower($row[&#39;Value&#39;]) === &#39;no&#39;) 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Restart the server and the proble will be fixed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;cors&#34;&gt;CORS&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Enable module header in &lt;code&gt;httpd.conf&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Add header settings&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt;Header always set Access-Control-Max-Age &amp;quot;1000&amp;quot;
Header always set Access-Control-Allow-Headers &amp;quot;X-Requested-With, Content-Type, Origin, Authorization, Accept, Client-Security-Token, Accept-Encoding&amp;quot;
Header always set Access-Control-Allow-Methods &amp;quot;POST, GET, OPTIONS, DELETE, PUT&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;too-big-header-file&#34;&gt;Too big header file&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Add this to your &lt;code&gt;http {}&lt;/code&gt; of the nginx.conf file normally located at &lt;code&gt;/etc/nginx/nginx.conf&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;proxy_buffer_size   128k;
proxy_buffers   4 256k;
proxy_busy_buffers_size   256k;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Then add this to your php location block, this will be located in your vhost file look for the block that begins with &lt;code&gt;location ~ .php$ {&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;fastcgi_buffer_size 128k;
fastcgi_buffers 4 256k;
fastcgi_busy_buffers_size 256k;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Notes - 6</title>
      <link>https://harryho.github.io/code/python-notes-6/</link>
      <pubDate>Thu, 12 May 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-6/</guid>
      <description>

&lt;h2 id=&#34;collection&#34;&gt;Collection&lt;/h2&gt;

&lt;h3 id=&#34;collection-protocols&#34;&gt;Collection protocols&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;To implement a protocol, objects must support certain operations.&lt;/li&gt;
&lt;li&gt;Most collections implement container, sized and iterable.&lt;/li&gt;
&lt;li&gt;All except dict and set are sequences&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Container&lt;/strong&gt;: membership testing using &lt;code&gt;in&lt;/code&gt; and &lt;code&gt;not in&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sized&lt;/strong&gt;: Determine number of elements with &lt;code&gt;len(s)&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Iterable&lt;/strong&gt;: Can produce an iterator with &lt;code&gt;iter(s)&lt;/code&gt;, e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    for item in iterable:
        do_something(item) `len(s)`
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Sequence&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Retrieve elements by index, e.g. &lt;code&gt;item = seq[index]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Find items by value &lt;code&gt;index = seq.index(item)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Count items &lt;code&gt;num = seq.count(item)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Produce a reversed sequence &lt;code&gt;r = reversed(seq)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Set&lt;/strong&gt;: set algebra operations, including method and infix operators . e.g.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;subset&lt;/li&gt;
&lt;li&gt;proper subset&lt;/li&gt;
&lt;li&gt;equal&lt;/li&gt;
&lt;li&gt;not equal&lt;/li&gt;
&lt;li&gt;proper superset&lt;/li&gt;
&lt;li&gt;superset&lt;/li&gt;
&lt;li&gt;intersections&lt;/li&gt;
&lt;li&gt;union&lt;/li&gt;
&lt;li&gt;symmetric difference&lt;/li&gt;
&lt;li&gt;difference&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Built-in collections&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Protocol&lt;/th&gt;
&lt;th&gt;Implementing Collections&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Container&lt;/td&gt;
&lt;td&gt;str, list, range, tuple, set, bytes, dict&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sized&lt;/td&gt;
&lt;td&gt;str, list, range, tuple, set, bytes, dict&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Iterable&lt;/td&gt;
&lt;td&gt;str, list, range, tuple, set, bytes, dict&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sequence&lt;/td&gt;
&lt;td&gt;str, list, range, tuple, bytes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Set&lt;/td&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Mutable Sequence&lt;/td&gt;
&lt;td&gt;list&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Mutable Set&lt;/td&gt;
&lt;td&gt;set&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Mutable Mapping&lt;/td&gt;
&lt;td&gt;dict&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;sortedset&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from bisect import bisect_left
from collections.abc import Sequence, Set
from itertools import chain


class SortedSet(Sequence, Set):

    def __init__(self, items=None):
        self._items = sorted(set(items)) if items is not None else []

    def __contains__(self, item):
        try:
            self.index(item)
            return True
        except ValueError:
            return False

    def __len__(self):
        return len(self._items)

    def __iter__(self):
        return iter(self._items)

    def __getitem__(self, index):
        result = self._items[index]
        return SortedSet(result) if isinstance(index, slice) else result

    def __repr__(self):
        return &amp;quot;SortedSet({})&amp;quot;.format(repr(self._items) if self._items else &#39;&#39;)

    def __eq__(self, rhs):
        if not isinstance(rhs, SortedSet):
            return False
        return self._items == rhs._items

    def _is_unique_and_sorted(self):
        return all(self[i] &amp;lt; self[i + 1] for i in range(len(self) - 1))

    def index(self, item):
        assert self._is_unique_and_sorted()
        index = bisect_left(self._items, item)
        if (index != len(self._items)) and self._items[index] == item:
            return index
        raise ValueError(&amp;quot;{} not found&amp;quot;.format(repr(item)))

    def count(self, item):
        assert self._is_unique_and_sorted()
        return int(item in self._items)

    def __add__(self, rhs):
        return SortedSet(chain(self._items, rhs._items))

    def __mul__(self, rhs):
        return SortedSet(self) if rhs &amp;gt; 0 else SortedSet()

    def __rmul__(self, lhs):
        return self * lhs

    def issubset(self, iterable):
        return self &amp;lt;= SortedSet(iterable)

    def issuperset(self, iterable):
        return self &amp;gt;= SortedSet(iterable)

    def intersection(self, iterable):
        return self &amp;amp; SortedSet(iterable)

    def union(self, iterable):
        return self | SortedSet(iterable)

    def symmetric_difference(self, iterable):
        return self ^ SortedSet(iterable)

    def difference(self, iterable):
        return self - SortedSet(iterable)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;test case&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import unittest
from sorted_set import SortedSet


class TestConstruction(unittest.TestCase):

    def test_empty(self):
        s = SortedSet([])

    def test_from_sequence(self):
        s = SortedSet([7, 8, 3, 1])

    def test_with_duplicates(self):
        s = SortedSet([8, 8, 8])

    def test_from_iterable(self):
        def gen6842():
            yield 6
            yield 8
            yield 4
            yield 2
        g = gen6842()
        s = SortedSet(g)

    def test_default_empty(self):
        s = SortedSet()


class TestContainerProtocol(unittest.TestCase):

    def setUp(self):
        self.s = SortedSet([6, 7, 3, 9])

    def test_positive_contained(self):
        self.assertTrue(6 in self.s)

    def test_negative_contained(self):
        self.assertFalse(2 in self.s)

    def test_positive_not_contained(self):
        self.assertTrue(5 not in self.s)

    def test_negative_not_contained(self):
        self.assertFalse(9 not in self.s)


class TestSizedProtocol(unittest.TestCase):

    def test_empty(self):
        s = SortedSet()
        self.assertEqual(len(s), 0)

    def test_one(self):
        s = SortedSet([42])
        self.assertEqual(len(s), 1)

    def test_ten(self):
        s = SortedSet(range(10))
        self.assertEqual(len(s), 10)

    def test_with_duplicates(self):
        s = SortedSet([5, 5, 5])
        self.assertEqual(len(s), 1)


class TestIterableProtocol(unittest.TestCase):

    def setUp(self):
        self.s = SortedSet([7, 2, 1, 1, 9])

    def test_iter(self):
        i = iter(self.s)
        self.assertEqual(next(i), 1)
        self.assertEqual(next(i), 2)
        self.assertEqual(next(i), 7)
        self.assertEqual(next(i), 9)
        self.assertRaises(StopIteration, lambda: next(i))

    def test_for_loop(self):
        index = 0
        expected = [1, 2, 7, 9]
        for item in self.s:
            self.assertEqual(item, expected[index])
            index += 1


class TestSequenceProtocol(unittest.TestCase):

    def setUp(self):
        self.s = SortedSet([1, 4, 9, 13, 15])

    def test_index_zero(self):
        self.assertEqual(self.s[0], 1)

    def test_index_four(self):
        self.assertEqual(self.s[4], 15)

    def test_index_one_beyond_the_end(self):
        with self.assertRaises(IndexError):
            self.s[5]

    def test_index_minus_one(self):
        self.assertEqual(self.s[-1], 15)

    def test_index_minus_five(self):
        self.assertEqual(self.s[-5], 1)

    def test_index_one_before_the_beginning(self):
        with self.assertRaises(IndexError):
            self.s[-6]

    def test_slice_from_start(self):
        self.assertEqual(self.s[:3], SortedSet([1, 4, 9]))

    def test_slice_to_end(self):
        self.assertEqual(self.s[3:], SortedSet([13, 15]))

    def test_slice_empty(self):
        self.assertEqual(self.s[10:], SortedSet())

    def test_slice_arbitrary(self):
        self.assertEqual(self.s[2:4], SortedSet([9, 13]))

    def test_slice_full(self):
        self.assertEqual(self.s[:], self.s)


class TestReprProtocol(unittest.TestCase):

    def test_repr_empty(self):
        s = SortedSet()
        self.assertEqual(repr(s), &amp;quot;SortedSet()&amp;quot;)

    def test_repr_some(self):
        s = SortedSet([42, 40, 19])
        self.assertEqual(repr(s), &amp;quot;SortedSet([19, 40, 42])&amp;quot;)


if __name__ == &#39;__main__&#39;:
    unittest.main()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Notes - 8</title>
      <link>https://harryho.github.io/code/python-notes-8/</link>
      <pubDate>Mon, 25 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-8/</guid>
      <description>

&lt;h2 id=&#34;context-managers&#34;&gt;Context managers&lt;/h2&gt;

&lt;h3 id=&#34;context-manager&#34;&gt;context manager&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;context manager an object designed to be used in a with-statement&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;with context-manager:
    body


with context-manager:
    context-manager.begin()
    body
    context-manager.end()
    
with context-manager:
    setup()
    body
    teardown()

with context-manager:
    context-manager.begin()
    body
    context-manager.end()        

with context-manager:
    allocation()
    body
    deallocation()

with context-manager:
    enter()
    body
    exit()

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;A context-manager ensures that resources are properly and automatically managed&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;enter() prepares the manager for use&lt;/li&gt;
&lt;li&gt;exit() cleans it up&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Context-manager Protocol&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;__enter__(self)

__exit__(self,
        exc_type, # exception type 
        exc_val,  # exception object
        exc_tb)    # exception traceback
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;__enter__()&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;called before entering with-statement body&lt;/li&gt;
&lt;li&gt;return value bound to as variable&lt;/li&gt;
&lt;li&gt;can return value of any type&lt;/li&gt;
&lt;li&gt;commonly returns context-manager itself&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;__exit__()&lt;/code&gt; called when with-statement body exits&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;By default &lt;code&gt;__exit__()&lt;/code&gt; propagates exceptions thrown from the with-statement’s code block&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;__exit__()&lt;/code&gt; should never explicitly re-raise exceptions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;__exit__()&lt;/code&gt; should only raise exceptions if it fails itself&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;contextlib&#34;&gt;contextlib&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;contextlib&lt;/code&gt; : standard library module for working with context managers&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;contextmanager&lt;/code&gt; is a decorator you can use to create new context managers&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;@contextlib.contextmanager
def my_context_manager():
# &amp;lt;ENTER&amp;gt;
try:
yield [value]
# &amp;lt;NORMAL EXIT&amp;gt;
except:
# &amp;lt;EXCEPTIONAL EXIT&amp;gt;
raise
with my_context_manager() as x:
# . . .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;contextmanager&lt;/code&gt; lets you define context-managers with simple control flow It allows you to leverage the statefulness of generators&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;contextmanager&lt;/code&gt; uses standard exception handling to propagate exceptions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;contextmanager&lt;/code&gt; explicitly re-raises – or doesn’t catch – to propagate exceptions&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;contextmanager&lt;/code&gt; swallows exceptions by not re-raising them&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Exceptions propagated from &lt;strong&gt;inner&lt;/strong&gt; context managers will be seen by &lt;strong&gt;outer&lt;/strong&gt; context managers&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;multiple context managers with-statements can use as many context-managers as you need&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Never pass list&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Example &amp;ndash; The code below is the same
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;with cm1() as a, cm2() as b:
    BODY

with cm1() as a:
    with cm2() as b:
        BODY
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Examples&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;simple sample&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import contextlib

class LoggingContextManager:
    def __enter__(self):
        print(&#39;LoggingContextManager.__enter__()&#39;)
        return &amp;quot;You&#39;re in a with-block!&amp;quot;

    def __exit__(self, exc_type, exc_val, exc_tb):
        if exc_type is None:
            print(&#39;LoggingContextManager.__exit__: &#39;
                &#39;normal exit detected&#39;)
        else:
            print(&#39;LoggingContextManager.__exit__: &#39;
                &#39;Exception detected! &#39;
                &#39;type={}, value={}, traceback={}&#39;.format(
                    exc_type, exc_val, exc_tb))                     

@contextlib.contextmanager
def logging_context_manager():
    print(&#39;logging_context_manager: enter&#39;)
    try:
        yield &amp;quot;You&#39;re in a with-block!&amp;quot;
        print(&#39;logging_context_manager: normal exit&#39;)
    except Exception:
        print(&#39;logging_context_manager: exceptional exit&#39;,
            sys.exc_info())
        raise


if __name__ == &amp;quot;__main__&amp;quot;:
    with LoggingContextManager() as log:
        pass

    with logging_context_manager() as clog:
        pass

# test result
# LoggingContextManager.__enter__()
# LoggingContextManager.__exit__: normal exit detected
# logging_context_manager: enter
# logging_context_manager: normal exit


&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;nested&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;            
@contextlib.contextmanager
def nest_test(name):
    print(&#39;Entering&#39;, name)
    yield name
    print(&#39;Exiting&#39;, name)




if __name__ == &amp;quot;__main__&amp;quot;:
    with nest_test(&#39;outer&#39;) as n1, nest_test(&#39;inner nested in &#39; + n1):
        pass

# test result
# Entering outer
# Entering inner nested in outer
# Exiting inner nested in outer
# Exiting outer
            
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;db &amp;amp; transaction&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import contextlib

class Connection:
    def __init__(self):
        self.xid = 0

    def _start_transaction(self, read_only=True):
        print(&#39;starting transaction&#39;, self.xid)
        rslt = self.xid
        self.xid = self.xid + 1
        return rslt

    def _commit_transaction(self, xid):
        print(&#39;committing transaction&#39;, xid)

    def _rollback_transaction(self, xid):
        print(&#39;rolling back transaction&#39;, xid)

class Transaction:
    def __init__(self, conn, read_only=True):
        self.conn = conn
        self.xid = conn._start_transaction(read_only=read_only)

    def commit(self):
        self.conn._commit_transaction(self.xid)

    def rollback(self):
        self.conn._rollback_transaction(self.xid)

@contextlib.contextmanager
def start_transaction(connection):
    tx = Transaction(connection)

    try:
        yield tx
    except Exception:
        tx.rollback()
        raise

    tx.commit()
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;introspection&#34;&gt;Introspection&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;type of object is type&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Example&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;introspector&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import inspect
import reprlib
import itertools
# from sorted_set import SortedSet

from bisect import bisect_left
from collections.abc import Sequence, Set
from itertools import chain


class SortedSet(Sequence, Set):

    def __init__(self, items=None):
        self._items = sorted(set(items)) if items is not None else []

    def __contains__(self, item):
        try:
            self.index(item)
            return True
        except ValueError:
            return False

    def __len__(self):
        return len(self._items)

    def __iter__(self):
        return iter(self._items)

    def __getitem__(self, index):
        result = self._items[index]
        return SortedSet(result) if isinstance(index, slice) else result

    def __repr__(self):
        return &amp;quot;SortedSet({})&amp;quot;.format(
            repr(self._items) if self._items else &#39;&#39;
        )

    def __eq__(self, rhs):
        if not isinstance(rhs, SortedSet):
            return NotImplemented
        return self._items == rhs._items

    def __ne__(self, rhs):
        if not isinstance(rhs, SortedSet):
            return NotImplemented
        return self._items != rhs._items

    def _is_unique_and_sorted(self):
        return all(self[i] &amp;lt; self[i + 1] for i in range(len(self) - 1))

    def index(self, item):
        assert self._is_unique_and_sorted()
        index = bisect_left(self._items, item)
        if (index != len(self._items)) and (self._items[index] == item):
            return index
        raise ValueError(&amp;quot;{} not found&amp;quot;.format(repr(item)))

    def count(self, item):
        assert self._is_unique_and_sorted()
        return int(item in self)

    def __add__(self, rhs):
        return SortedSet(chain(self._items, rhs._items))

    def __mul__(self, rhs):
        return self if rhs &amp;gt; 0 else SortedSet()

    def __rmul__(self, lhs):
        return self * lhs

    def issubset(self, iterable):
        return self &amp;lt;= SortedSet(iterable)

    def issuperset(self, iterable):
        return self &amp;gt;= SortedSet(iterable)

    def intersection(self, iterable):
        return self &amp;amp; SortedSet(iterable)

    def union(self, iterable):
        return self | SortedSet(iterable)

    def symmetric_difference(self, iterable):
        return self ^ SortedSet(iterable)

    def difference(self, iterable):
        return self - SortedSet(iterable)

def full_sig(method):
    try:
        return method.__name__ + str(inspect.signature(method))
    except ValueError:
        return method.__name__ + &#39;(...)&#39;


def brief_doc(obj):
    doc = obj.__doc__
    if doc is not None:
        lines = doc.splitlines()
        if len(lines) &amp;gt; 0:
            return lines[0]
    return &#39;&#39;


def print_table(rows_of_columns, *headers):
    num_columns = len(rows_of_columns[0])
    num_headers = len(headers)
    if len(headers) != num_columns:
        raise TypeError(&amp;quot;Expected {} header arguments, &amp;quot;
                        &amp;quot;got {}&amp;quot;.format(num_columns, num_headers))
    rows_of_columns_with_header = itertools.chain([headers], rows_of_columns)
    columns_of_rows = list(zip(*rows_of_columns_with_header))
    column_widths = [max(map(len, column)) for column in columns_of_rows]
    column_specs = (&#39;{{:{w}}}&#39;.format(w=width) for width in column_widths)
    format_spec = &#39; &#39;.join(column_specs)
    print(format_spec.format(*headers))
    rules = (&#39;-&#39; * width for width in column_widths)
    print(format_spec.format(*rules))
    for row in rows_of_columns:
        print(format_spec.format(*row))


def dump(obj):
    print(&amp;quot;Type&amp;quot;)
    print(&amp;quot;====&amp;quot;)
    print(type(obj))
    print()

    print(&amp;quot;Documentation&amp;quot;)
    print(&amp;quot;=============&amp;quot;)
    print(inspect.getdoc(obj))
    print()

    print(&amp;quot;Attributes&amp;quot;)
    print(&amp;quot;==========&amp;quot;)
    all_attr_names = SortedSet(dir(obj))
    method_names = SortedSet(
        filter(lambda attr_name: callable(getattr(obj, attr_name)),
            all_attr_names))
    assert method_names &amp;lt;= all_attr_names
    attr_names = all_attr_names - method_names
    attr_names_and_values = [(name, reprlib.repr(getattr(obj, name)))
                            for name in attr_names]
    print_table(attr_names_and_values, &amp;quot;Name&amp;quot;, &amp;quot;Value&amp;quot;)
    print()

    print(&amp;quot;Methods&amp;quot;)
    print(&amp;quot;=======&amp;quot;)
    methods = (getattr(obj, method_name) for method_name in method_names)
    method_names_and_doc = [(full_sig(method), brief_doc(method))
                            for method in methods]
    print_table(method_names_and_doc, &amp;quot;Name&amp;quot;, &amp;quot;Description&amp;quot;)
    print()

if __name__ == &amp;quot;__main__&amp;quot;:
    dump(&#39;a&#39;)

# test result
# Type
# ====
# &amp;lt;class &#39;str&#39;&amp;gt;
#
# Documentation
# =============
# str(object=&#39;&#39;) -&amp;gt; str
# str(bytes_or_buffer[, encoding[, errors]]) -&amp;gt; str
# Create a new string object from the given object. If encoding or
# errors is specified, then the object must expose a data buffer
# that will be decoded using the given encoding and error handler.
# Otherwise, returns the result of object.__str__() (if defined)
# or repr(object).
# encoding defaults to sys.getdefaultencoding().
# errors defaults to &#39;strict&#39;.
#
# Attributes
# ==========
# Name    Value                         
# ------- ------------------------------
# __doc__ &amp;quot;str(object=&#39;... to &#39;strict&#39;.&amp;quot;
#
# Methods
# =======
# Name              Description                                                            
# ----------------- -----------------------------------------------------------------------
# __add__(value, /)               Return self+value.                                                     
# str(...)                        str(object=&#39;&#39;) -&amp;gt; str                                                  
# __contains__(key, /)            Return key in self.                                                    
# __delattr__(name, /)            Implement delattr(self, name).                                         
# __dir__(...)                    __dir__() -&amp;gt; list                                                      
# __eq__(value, /)                Return self==value.                                                    
# __format__(...)                 S.__format__(format_spec) -&amp;gt; str                                       
# __ge__(value, /)                Return self&amp;gt;=value.                                                    
# __getattribute__(name, /)       Return getattr(self, name).                                            
# __getitem__(key, /)             Return self[key].                                                      
# __getnewargs__(...)                                                                                    
# __gt__(value, /)                Return self&amp;gt;value.                                                     
# __hash__()                      Return hash(self).                                                     
# __init__(*args, **kwargs)       Initialize self.  See help(type(self)) for accurate signature.         
# __init_subclass__(...)          This method is called when a class is subclassed.                      
# __iter__()                      Implement iter(self).                                                  
# __le__(value, /)                Return self&amp;lt;=value.                                                    
# __len__()                       Return len(self).                                                      
# __lt__(value, /)                Return self&amp;lt;value.                                                     
# __mod__(value, /)               Return self%value.                                                     
# __mul__(value, /)               Return self*value.n                                                    
# __ne__(value, /)                Return self!=value.                                                    
# __new__(*args, **kwargs)        Create and return a new object.  See help(type) for accurate signature.
# __reduce__(...)                 helper for pickle                                                      
# __reduce_ex__(...)              helper for pickle                                                      
# __repr__()                      Return repr(self).                                                     
# __rmod__(value, /)              Return value%self.                                                     
# __rmul__(value, /)              Return self*value.                                                     
# __setattr__(name, value, /)     Implement setattr(self, name, value).                                  
# __sizeof__(...)                 S.__sizeof__() -&amp;gt; size of S in memory, in bytes                        
# __str__()                       Return str(self).                                                      
# __subclasshook__(...)           Abstract classes can override this to customize issubclass().          
# capitalize(...)                 S.capitalize() -&amp;gt; str                                                  
# casefold(...)                   S.casefold() -&amp;gt; str                                                    
# center(...)                     S.center(width[, fillchar]) -&amp;gt; str                                     
# count(...)                      S.count(sub[, start[, end]]) -&amp;gt; int                                    
# encode(...)                     S.encode(encoding=&#39;utf-8&#39;, errors=&#39;strict&#39;) -&amp;gt; bytes                   
# endswith(...)                   S.endswith(suffix[, start[, end]]) -&amp;gt; bool                             
# expandtabs(...)                 S.expandtabs(tabsize=8) -&amp;gt; str                                         
# find(...)                       S.find(sub[, start[, end]]) -&amp;gt; int                                     
# format(...)                     S.format(*args, **kwargs) -&amp;gt; str      
# format_map(...)                 S.format_map(mapping) -&amp;gt; str                                           
# index(...)                      S.index(sub[, start[, end]]) -&amp;gt; int                                    
# isalnum(...)                    S.isalnum() -&amp;gt; bool                                                    
# isalpha(...)                    S.isalpha() -&amp;gt; bool                                                    
# isdecimal(...)                  S.isdecimal() -&amp;gt; bool                                                  
# isdigit(...)                    S.isdigit() -&amp;gt; bool                                                    
# isidentifier(...)               S.isidentifier() -&amp;gt; bool                                               
# islower(...)                    S.islower() -&amp;gt; bool                                                    
# isnumeric(...)                  S.isnumeric() -&amp;gt; bool                                                  
# isprintable(...)                S.isprintable() -&amp;gt; bool                                                
# isspace(...)                    S.isspace() -&amp;gt; bool                                                    
# istitle(...)                    S.istitle() -&amp;gt; bool                                                    
# isupper(...)                    S.isupper() -&amp;gt; bool                                                    
# join(...)                       S.join(iterable) -&amp;gt; str                                                
# ljust(...)                      S.ljust(width[, fillchar]) -&amp;gt; str                                      
# lower(...)                      S.lower() -&amp;gt; str                                                       
# lstrip(...)                     S.lstrip([chars]) -&amp;gt; str                                               
# maketrans(x, y=None, z=None, /) Return a translation table usable for str.translate().                 
# partition(...)                  S.partition(sep) -&amp;gt; (head, sep, tail)                                  
# replace(...)                    S.replace(old, new[, count]) -&amp;gt; str                                    
# rfind(...)                      S.rfind(sub[, start[, end]]) -&amp;gt; int                                    
# rindex(...)                     S.rindex(sub[, start[, end]]) -&amp;gt; int                                   
# rjust(...)                      S.rjust(width[, fillchar]) -&amp;gt; str                                      
# rpartition(...)                 S.rpartition(sep) -&amp;gt; (head, sep, tail)                                 
# rsplit(...)                     S.rsplit(sep=None, maxsplit=-1) -&amp;gt; list of strings                     
# rstrip(...)                     S.rstrip([chars]) -&amp;gt; str                                               
# split(...)                      S.split(sep=None, maxsplit=-1) -&amp;gt; list of strings                      
# splitlines(...)                 S.splitlines([keepends]) -&amp;gt; list of strings                            
# startswith(...)                 S.startswith(prefix[, start[, end]]) -&amp;gt; bool                           
# strip(...)                      S.strip([chars]) -&amp;gt; str                                                
# swapcase(...)                   S.swapcase() -&amp;gt; str                                                    
# title(...)                      S.title() -&amp;gt; str                                                       
# translate(...)                  S.translate(table) -&amp;gt; str                                              
# upper(...)                      S.upper() -&amp;gt; str                                                       
# zfill(...)                      S.zfill(width) -&amp;gt; str   

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python Notes - 7</title>
      <link>https://harryho.github.io/code/python-notes-7/</link>
      <pubDate>Sun, 17 Apr 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/python-notes-7/</guid>
      <description>

&lt;h2 id=&#34;exception-assertion&#34;&gt;Exception &amp;amp; Assertion&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Avoid bad practices in Python exception handling.&lt;/li&gt;
&lt;li&gt;Always specify an exception type with except, but don&amp;rsquo;t be too general.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t Use Assertions for checking arguments&lt;/li&gt;

&lt;li&gt;&lt;p&gt;EXamples&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;lookup exception&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def lookups():
    s = [1, 4, 6]
    try:
        item = s[5]
    except LookupError:
        print(&amp;quot;Handled IndexError&amp;quot;)

    d = dict(a=65, b=66, c=67)
    try:
        value = d[&#39;x&#39;]
    except LookupError:
        print(&amp;quot;Handled KeyError&amp;quot;)

if __name__ == &#39;__main__&#39;:
    lookups()
    
# test result 
# Handled IndexError
# Handled KeyError
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;unicode exception&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def unicode_exception():
try:
    b&#39;\x81&#39;.decode(&#39;utf-8&#39;)
except UnicodeError as e:
    print(e)
    print(&amp;quot;encoding:&amp;quot;, e.encoding)
    print(&amp;quot;reason:&amp;quot;, e.reason)
    print(&amp;quot;object:&amp;quot;, e.object)
    print(&amp;quot;start:&amp;quot;, e.start)
    print(&amp;quot;end&amp;quot;, e.end)

if __name__ == &#39;__main__&#39;:
    unicode_exception()

# test result
# &#39;utf-8&#39; codec can&#39;t decode byte 0x81 in position 0: invalid start byte
# encoding: utf-8
# reason: invalid start byte
# object: b&#39;\x81&#39;
# start: 0
# end 1        
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;customized exception with parameters&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys
import io


class TriangleError(Exception):

    def __init__(self, text, sides):
        super().__init__(text)
        self._sides = tuple(sides)

    @property
    def sides(self):
        return self._sides

    def __str__(self):
        return &amp;quot;&#39;{}&#39; for sides {}&amp;quot;.format(self.args[0], self._sides)

    def __repr__(self):
        return &amp;quot;TriangleError({!r}, {!r}&amp;quot;.format(self.args[0], self._sides)


def triangle_area(a, b, c):
    sides = sorted((a, b, c))
    if sides[2] &amp;gt; sides[0] + sides[1]:
        raise TriangleError(&amp;quot;Illegal triangle&amp;quot;, sides)
    p = (a + b + c) / 2
    a = math.sqrt(p * (p - a) * (p - b) * (p - c))
    return a


def triangle_exception():
    try:
        a = triangle_area(3, 4, 10)
        print(a)
    except TriangleError as e:
        try:
            print(e, file=sys.stdin)
        except io.UnsupportedOperation as f:
            print(e)
            print(f)
            print(f.__context__ is e)

if __name__ == &#39;__main__&#39;:
    triangle_exception()

# test result
# &#39;Illegal triangle&#39; for sides (3, 4, 10)
# not writable
# True        
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;chaining &amp;amp; trackback&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import math
import traceback

class InclinationError(Exception):
    pass


def inclination(dx, dy):
    try:
        return math.degrees(math.atan(dy / dx))
    except ZeroDivisionError as e:
        raise InclinationError(&amp;quot;Slope cannot be vertical&amp;quot;) from e


def traceback_inclination():
    try:
        inclination(0, 5)
    except InclinationError as e:
        print(e.__traceback__)
        traceback.print_tb(e.__traceback__)
        s = traceback.format_tb(e.__traceback__)
        print(s)

if __name__ == &#39;__main__&#39;:
    traceback_inclination()
    print(&amp;quot;Done.&amp;quot;)

# test result

#&amp;lt;traceback object at 0x000000BE3B4F5108&amp;gt;
#  File &amp;quot;/path/to/your_project/__main__.py&amp;quot;, line 190, in traceback_inclination
#    inclination(0, 5)
#  File &amp;quot;/path/to/your_project/__main__.py&amp;quot;, line 185, in inclination
#    raise InclinationError(&amp;quot;Slope cannot be vertical&amp;quot;) from e
#[&#39;  File &amp;quot;/path/to/your_project/__main__.py&amp;quot;, line 190, 
# in traceback_inclination\n    
# inclination(0,# 5)\n&#39;,
#  &#39;  File &amp;quot;/path/to/your_project/__main__.py&amp;quot;, line 185, 
#  in inclination\n    
#  raise 
# InclinationError(&amp;quot;Slope cannot be vertical&amp;quot;) from e\n&#39;]

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;assertion &amp;amp; exception&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from pprint import pprint as pp

def wrap(text, line_length):
    &amp;quot;&amp;quot;&amp;quot;Wrap a string to a specified line length.

    Args:
        text: The string to wrap.
        line_length: The line length in characters.

    Returns:
        A wrapped string.

    Raises:
        ValueError: If line_length is not positive.
    &amp;quot;&amp;quot;&amp;quot;
    if line_length &amp;lt; 1:
        raise ValueError(&amp;quot;line_length {} is not positive&amp;quot;.format(line_length))

    words = text.split()

    if max(map(len, words)) &amp;gt; line_length:
        raise ValueError(&amp;quot;line_length must be at least as long as the longest word&amp;quot;)

    lines_of_words = []
    current_line_length = line_length
    for word in words:
        if current_line_length + len(word) &amp;gt; line_length:
            lines_of_words.append([])  # new line
            current_line_length = 0
        lines_of_words[-1].append(word)
        current_line_length += len(word) + len(&#39; &#39;)
    lines = [&#39; &#39;.join(line_of_words) for line_of_words in lines_of_words]
    result = &#39;\n&#39;.join(lines)
    assert all(len(line) &amp;lt;= line_length for line in result.splitlines())
    return result

wealth_of_nations = &amp;quot;The annual labour of every nation is the fund which or&amp;quot; \
&amp;quot;iginally supplies it with all the necessaries and conveniencies of life wh&amp;quot; \
&amp;quot;ich it annually consumes, and which consist always either in the immediate&amp;quot; \
&amp;quot; produce of that labour, or in what is purchased with that produce from ot&amp;quot; \
&amp;quot;her nations. According, therefore, as this produce, or what is purchased w&amp;quot; \
&amp;quot;ith it, bears a greater or smaller proportion to the number of those who a&amp;quot; \
&amp;quot;re to consume it, the nation will be better or worse supplied with all the&amp;quot; \
&amp;quot; necessaries and conveniencies for which it has occasion.&amp;quot;

if __name__ == &amp;quot;__main__&amp;quot;:
    pp(wrap( wealth_of_nations, 40))

# test result
# (&#39;The annual labour of every nation is the\n&#39;
#  &#39;fund which originally supplies it with\n&#39;
#  &#39;all the necessaries and conveniencies of\n&#39;
#  &#39;life which it annually consumes, and\n&#39;
#  &#39;which consist always either in the\n&#39;
#  &#39;immediate produce of that labour, or in\n&#39;
#  &#39;what is purchased with that produce from\n&#39;
#  &#39;other nations. According, therefore, as\n&#39;
#  &#39;this produce, or what is purchased with\n&#39;
#  &#39;it, bears a greater or smaller\n&#39;
#  &#39;proportion to the number of those who\n&#39;
#  &#39;are to consume it, the nation will be\n&#39;
#  &#39;better or worse supplied with all the\n&#39;
#  &#39;necessaries and conveniencies for which\n&#39;
#  &#39;it has occasion.&#39;)


&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>