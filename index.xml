<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_index on Hello World</title>
    <link>https://harryho.github.io/index.xml</link>
    <description>Recent content in _index on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Sun, 06 Mar 2016 16:43:12 +1100</lastBuildDate>
    <atom:link href="https://harryho.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>_dummy</title>
      <link>https://harryho.github.io/index/_dummy/</link>
      <pubDate>Thu, 16 Feb 2017 11:47:59 +1100</pubDate>
      
      <guid>https://harryho.github.io/index/_dummy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create a blog site on GitHub Pages within Windows environment</title>
      <link>https://harryho.github.io/blog/create-a-blog-on-github-pages/</link>
      <pubDate>Wed, 15 Feb 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/blog/create-a-blog-on-github-pages/</guid>
      <description>

&lt;p&gt;&lt;em&gt;After I setup a blog site with Hugo on my ubuntu machine, I decided to use it to create a blog to GitHub pages on my windows machine, since I use Windows machine as workstation. If you use Unix-style system, I pretty sure you can follow the &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo Quick Start&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog&#34;&gt;Hosting on GitHub Pages&lt;/a&gt; to create a blog to GitHub pages within 5 mins, but when I try to do the same on Windows machine, it took me over 30 mins. I hope this blog can help someone want to do sth similar within Windows environment.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You already have &lt;em&gt;Hugo&lt;/em&gt; on your computer. If not, please follow the instruction to &lt;a href=&#34;https://gohugo.io/tutorials/installing-on-windows&#34;&gt;install hugo on Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You will have two repositories &lt;code&gt;blog-hugo&lt;/code&gt; and &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repositories to hold your hugo content and blog site respectively.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;blog-hugo&lt;/code&gt; repository will host actual Hugo’s blog content.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;.github.io repository&lt;/code&gt; repository will host the static website.&lt;/li&gt;
&lt;li&gt;Your &lt;em&gt;Hugo&lt;/em&gt; blog folder will be &amp;ldquo;C:\git\blog-hugo&amp;rdquo; in this example.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Your blog site will finally sit in C driver and map to repositories as follow&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\&amp;gt;
|--git 
    |--blog-hugo (https://github.com/&amp;lt;yourname&amp;gt;/blog-hugo.git
        |--archetypes
        |--content
        |--data
        |--layouts
        |--public (https://github.com/&amp;lt;yourname&amp;gt;/&amp;lt;yourname&amp;gt;.github.io.git)
        |--themes
        |--

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;create-a-blog-site-on-github-pages&#34;&gt;Create a blog site on GitHub pages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create on GitHub blog-hugo and &lt;username&gt;.github.io repositories  repository via GitHub website&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clone blog-hugo via Windows command prompt&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;c:\&amp;gt;
c:\&amp;gt;cd git
c:\git&amp;gt;git clone &amp;lt;&amp;lt;your-project&amp;gt;-hugo-url&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;your-project&amp;gt;-hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create hugo site and setup the theme you like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\git&amp;gt;hugo new site blog-hugo
C:\git&amp;gt;hugo server -t &amp;lt;yourtheme&amp;gt; -D
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clean up the &lt;code&gt;public&lt;/code&gt; folder&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set submodule inside the blog-hugo and map to folder &lt;code&gt;public&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\&amp;gt;cd git
C:\git&amp;gt;rm -rf public
C:\git&amp;gt;git submodule add -b master https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deploy the blog site to GitHub page with the script &lt;code&gt;deploy.bat&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;deploy.bat &amp;quot;Your optional commit message&amp;quot;&lt;/code&gt; will commit the changes to &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;. You can use and tailor the script below as your &lt;code&gt;deploy.bat&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@echo OFF

echo  Deploying updates to GitHub...

REM Build the project. 
hugo -t &amp;lt;yourtheme&amp;gt; -D

REM Go To Public folder
cd public

REM Add changes to git.
git add -A

REM Commit changes.
set msg=&amp;quot;rebuilding site %date%&amp;quot;
if  NOT &amp;quot;%1&amp;quot;==&amp;quot;&amp;quot;    set msg=%1
git commit -m &#39;%msg%&#39;

REM Push source and build repos.
git push origin master

REM Come Back
cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You might want to commit the changes to &lt;code&gt;blog-hugo&lt;/code&gt; repository. Please don&amp;rsquo;t forget to add &lt;code&gt;public&lt;/code&gt; into the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Laravel MVC Starter</title>
      <link>https://harryho.github.io/project/laravel-mvc-starter/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/laravel-mvc-starter/</guid>
      <description>

&lt;p&gt;This starter is the starting point of laravel 5 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with laravel.&lt;/p&gt;

&lt;h2 id=&#34;overview-of-project&#34;&gt;Overview of project&lt;/h2&gt;

&lt;h2 id=&#34;bdd-business-domain-design&#34;&gt;BDD ( Business domain design)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;+-------+ 0...*     0...* +--------+ 1     0...* +---------+ 
| tag   | --------------- |  blog  | ----- ----- | comment |
+-------+                 +--------+             +---------+           
                               | 1...*
                               |
                               | 0...*
                          +--------+ 
                          |  like  |
                          +--------+

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/lara-mvc-starter.png&#34; alt=&#34;laravel-mvc-starter&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-lara-mvc-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/lara-mvc-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Angularjs Webpack ES6 Starter</title>
      <link>https://harryho.github.io/project/angularjs-webpack-es6-starter/</link>
      <pubDate>Tue, 15 Nov 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/angularjs-webpack-es6-starter/</guid>
      <description>

&lt;p&gt;This starter was inspired by another similar angular webpack starter repository. It simply includes font-awesome, bootstrap for the people who don&amp;rsquo;t want to use boostrap-webpack, font-awesome-webpack. I find it saves us so much effort to create prototype, since we don&amp;rsquo;t need spectacular UI.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter uses angular 1.5 for someone want to build component.&lt;/li&gt;
&lt;li&gt;This repo followes mvc patterns instead of component pattern.&lt;/li&gt;
&lt;li&gt;ES6, and ES7 support with babel.&lt;/li&gt;
&lt;li&gt;Development server with live reload.&lt;/li&gt;
&lt;li&gt;Production builds with cache busting.&lt;/li&gt;
&lt;li&gt;Testing environment using karma to run tests and jasmine as the framework.&lt;/li&gt;
&lt;li&gt;Code coverage when tests are run.&lt;/li&gt;
&lt;li&gt;Include font-awesome without font-awesome-loader.&lt;/li&gt;
&lt;li&gt;Include Bootstrap 3 without bootstrap-loader.&lt;/li&gt;
&lt;li&gt;No gulp and no grunt, just npm scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
\path\to\angularjs-webpack-es6-starter
|   .babelrc                                    &amp;lt;-// default setting es2015.
|   karma.conf.js                               &amp;lt;-// tests and report setup 
|   webpack.config.js                           &amp;lt;-// webpack config
\---src
    |   tests.webpack.js
    |   
    +---app
    |   |   app.html                            &amp;lt;-// app view
    |   |   app.js                              &amp;lt;-// app module
    |   |   app.routes.js                       &amp;lt;-// app route to manage all routes 
    |   |   app.runner.js                       &amp;lt;-// app runner for state change enhancement  
    |   |   app.spec.js                         &amp;lt;-// app spec file for testing 
    |   |   
    |   +---common                              &amp;lt;-// common module for whole app
    |   |   |   common.js
    |   |   |   common.spec.js
    |   |   +---directives                      &amp;lt;-// common directives for whole app
    |   |   |       appUiDirectives.js
    |   |   |       appUiDirectives.spec.js
    |   |   |       commonDirectives.js
    |   |   |       commonDirectives.spec.js
    |   |   +---services                        &amp;lt;-// common views for whole app
    |   |   |       ApiService.js
    |   |   |       ApiService.spec.js
    |   |   |       UtilService.js
    |   |   |       UtilService.spec.js
    |   |   \---views                           &amp;lt;-// contains common views
    |   |           footer-view.html
    |   |           header-view.html
    |   |           sidebar-view.html
    |   |           topbar-view.html
    |   \---main                                &amp;lt;-// built-in fonts, css, images 
    |       \---dashboard
    |           +---controllers
    |           |       dashboardController.js
    |           |       dashboardController.spec.js
    |           \---views
    |                   dashboard-view.html
    |                   
    +---public                                  &amp;lt;-// built-in fonts, css, images 
    |   |   index.html
    |   +---fonts
    |   |   +--- ...
    |   \---img
    |       +--- favicon.ico
    \---style                                  &amp;lt;-// css files including customized css
           
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;browse-repository-https-github-com-harryho-angularjs-webpack-es6-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/angularjs-webpack-es6-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>PHP web framework</title>
      <link>https://harryho.github.io/dev/php-web/</link>
      <pubDate>Thu, 11 Aug 2016 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/php-web/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Here we are going to explore some PHP web frameworks.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;php-development-environment-setup&#34;&gt;PHP development environment setup&lt;/h1&gt;

&lt;h2 id=&#34;install-php-5-6-x&#34;&gt;Install PHP 5.6.x&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find the instruction from &lt;a href=&#34;https://harryho.github.io/#php&#34;&gt;home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;composer&#34;&gt;Composer&lt;/h2&gt;

&lt;h3 id=&#34;linux&#34;&gt;Linux&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;curl -s https://getcomposer.org/installer | php --&lt;/code&gt; to install composer on Linux&lt;/li&gt;
&lt;li&gt;use &amp;lsquo;composer -v &amp;rsquo; to verify.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;windows&#34;&gt;Windows&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Download the &lt;a href=&#34;https://getcomposer.org/download/&#34;&gt;composer&lt;/a&gt; and install php on your PC&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;composer -v&lt;/code&gt; to verify the composer is ready.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;zendframework&#34;&gt;Zendframework&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Zend Framework is a collection of 60+ packages for professional PHP development. It can be used to develop web applications and services using PHP 5.6+, and provides 100% object-oriented code using a broad spectrum of language features.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;zendframework-2-x&#34;&gt;Zendframework 2.x&lt;/h3&gt;

&lt;h4 id=&#34;create-zendframework-2-project-from-scratch&#34;&gt;Create Zendframework 2 project from scratch&lt;/h4&gt;

&lt;h4 id=&#34;clone-zendframework-skeleton-project-as-new-project&#34;&gt;* Clone Zendframework skeleton project as new project.&lt;/h4&gt;

&lt;h4 id=&#34;install-zendframework-with-composer&#34;&gt;* Install zendframework with composer&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    cd  /path/to/newproject
    git clone git://github.com/zendframework/ZendSkeletonApplication.git
    cd ZendSkeletonApplication
    php composer.phar self-update
    php composer.phar install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;start-app-with-php-built-in-server&#34;&gt;* Start app with php built-in server&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public/ public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S 0.0.0.0:8080 -t public public/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;use-apache-server&#34;&gt;* Use apache server&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-apache&#34;&gt; &amp;lt;VirtualHost *:80&amp;gt;
     ServerName zf2-tutorial.localhost
     DocumentRoot /path/to/newproject/ZendSkeletonApplication/public
     SetEnv APPLICATION_ENV &amp;quot;development&amp;quot;
     &amp;lt;Directory /path/to/newproject/ZendSkeletonApplication/public&amp;gt;
         DirectoryIndex index.php
         AllowOverride All
         Require all granted
     &amp;lt;/Directory&amp;gt;
 &amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-zf2-mvc-starter-project&#34;&gt;Use Zf2-MVC-Starter project&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Please find the project introduction &lt;a href=&#34;https://harryho.github.io/project/zf2-mvc-starter/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;laravel&#34;&gt;Laravel&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Laravel is a free, open-source PHP web framework, created by Taylor Otwell and intended for the development of web applications following the model–view–controller (MVC) architectural pattern. Some of the features of Laravel are a modular packaging system with a dedicated dependency manager, different ways for accessing relational databases, utilities that aid in application deployment and maintenance, and its orientation toward syntactic sugar.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;laravel-5-x&#34;&gt;Laravel 5.x&lt;/h2&gt;

&lt;h3 id=&#34;install-laravel-global-composer-global-laravel-installer&#34;&gt;install laravel global &lt;code&gt;composer global laravel/installer&lt;/code&gt;&lt;/h3&gt;

&lt;h3 id=&#34;change-php-ini-config&#34;&gt;Change &lt;code&gt;php.ini&lt;/code&gt; config&lt;/h3&gt;

&lt;h4 id=&#34;enable-the-mbs-string-extension-inside-php-ini-change-the-extension-php-mbstring-dll-as-follow&#34;&gt;* enable the &lt;code&gt;mbs-string&lt;/code&gt; extension inside &lt;code&gt;php.ini&lt;/code&gt;. Change the &lt;code&gt;;extension=php_mbstring.dll&lt;/code&gt; as follow.&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;extension=php_mbstring.dll
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-new-project-from-scratch&#34;&gt;Create new project from scratch&lt;/h3&gt;

&lt;h4 id=&#34;create-new-project&#34;&gt;* create new project&lt;/h4&gt;

&lt;h4 id=&#34;migrate-database-and-seed-dummy-data&#34;&gt;* migrate database and seed dummy data&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php artisan migrate -VVV 
php artisan db:seed
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;* Troubleshooting&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Fix the error of Specified key was too long&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;namespace App\Providers;

use Illuminate\Support\ServiceProvider;
use Illuminate\Support\Facades\Schema;

class AppServiceProvider extends ServiceProvider
{
    /**
     * Bootstrap any application services.
     *
     * @return void
     */
    public function boot()
    {
        //
        Schema::defaultStringLength(191);
    }

    /**
     * Register any application services.
     *
     * @return void
     */
    public function register()
    {
        //
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-laravel-mvc-starter-project&#34;&gt;Use laravel-mvc-starter project&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Please find the project introduction &lt;a href=&#34;https://harryho.github.io/project/lara-mvc-starter/&#34;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;use-laravel-rest-starter-project&#34;&gt;Use laravel-rest-starter project&lt;/h3&gt;

&lt;h2 id=&#34;prestashop&#34;&gt;PrestaShop&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;PrestaShop is a free, open source e-commerce solution. The software is published under the Open Software License (OSL). It is written in the PHP programming language with support for the MySQL database management system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;prestashop-1-5-4&#34;&gt;Prestashop 1.5.4&lt;/h2&gt;

&lt;h3 id=&#34;download-the-zip-file-from-download-page-https-www-prestashop-com-en-developers-versions&#34;&gt;Download the zip file from &lt;a href=&#34;https://www.prestashop.com/en/developers-versions&#34;&gt;download page&lt;/a&gt;&lt;/h3&gt;

&lt;h3 id=&#34;install-prestashop&#34;&gt;Install Prestashop&lt;/h3&gt;

&lt;p&gt;There is a instruction page inside the zip file. You can follow the instructions to complete the installation. There is no EasyPHP, Wamp, XAMPP, or any similar AMP (Apache+MySQL+PHP) package installed on my PC, but I have PHP, Apache, MySQL installed. Actually EasyPHP, Wamp are just the bundle of PHP development tools, which include PHP, Apache, MySQL. I don&amp;rsquo;t install too many duplicate softwares and packages on my PC, so I prefer to install Prestashop with what I have on my PC. It is up to you which way you choose to install it.&lt;/p&gt;

&lt;h3 id=&#34;install-prestashop-without-amp-package&#34;&gt;Install Prestashop without AMP package&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Unzip file to &lt;code&gt;path\to\prestashop_workspace&lt;/code&gt;. Your folder structure will look like this.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\prestashop_workspace
\---prestashop
    +---admin 
    +---cache 
    +---classes  
    +---config 
    +---controllers 
    +---css
    +---docs
    +---download
    +---img 
    +---install    
    +---js   
    +---localization
    +---log
    +---mails
    +---modules  
    +---override
    +---pdf
    +---themes
    +---tools 
    +---translations
    +---upload
    \---webservice
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Start your MySQL or check the status of MySQL&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use your MySQL client tool to connect to your MySQL server.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Launch installer page with php server&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start a command prompt&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/prestashop_workspace
php -S 0.0.0.0:1234 -t prestashop
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Open the link &lt;code&gt;http://localhost:1234&lt;/code&gt; with browser&lt;/li&gt;
&lt;li&gt;Choose language and click &lt;code&gt;Next&lt;/code&gt;, and then select the checkbox &amp;ldquo;I agree bah lah bah lah &amp;hellip;. &amp;rdquo; and click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;If there is an error &lt;code&gt;GD Library is not installed&lt;/code&gt; prompt, you just need to enable the library on &lt;code&gt;php.ini&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;DO NOT close your browser.&lt;/li&gt;
&lt;li&gt;Stop the php server by &lt;code&gt;Ctrl + C&lt;/code&gt; in the command prompt.&lt;/li&gt;
&lt;li&gt;Use notepad to open the file &lt;code&gt;php.ini&lt;/code&gt; under the &lt;code&gt;\path\to\php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Uncomment the config &lt;code&gt;;extension=php_gd2.dll&lt;/code&gt; =&amp;gt; &lt;code&gt;extension=php_gd2.dll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start the php server again&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Click the &lt;code&gt;Refresh this settings&lt;/code&gt;, and click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fill the login user and password. If your MySQL port is not 3306, please attach your port to the server address input field. Click &lt;code&gt;Test your database connection&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;If you got error &lt;code&gt;prestashop database not found&lt;/code&gt;, you need to create a database on mysql server.

&lt;ul&gt;
&lt;li&gt;I simply create a new database immediately with one command line
&lt;code&gt;bash
CREATE DATABASE prestashop CHAR SET utf8 COLLATE &#39;utf8_unicode_ci&#39;;
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Test the connection again. You will get the green light&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Click &lt;code&gt;Next&lt;/code&gt; and you can start to setup your store informaiton, such as, store name, admin account, etc. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Setup your sample store. Click &lt;code&gt;Next&lt;/code&gt;. Then the installer will help you finish the initialization.&lt;/li&gt;
&lt;li&gt;After the store setup, you can access the website by clicking &lt;code&gt;Font site&lt;/code&gt;, but you can not access back office, as known as admin panel.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t panic. It is easy to fix. Stop the php server by clicking &lt;code&gt;Ctrl+C&lt;/code&gt;. and then start the server again. Open the folder with prestashop, you will find something interesting. The original folder &lt;code&gt;admin&lt;/code&gt; under &lt;code&gt;prestashop&lt;/code&gt; has been renamed to &lt;code&gt;adminXXXX&lt;/code&gt;. X is a number. It is Prestashop special trick to secure your admin folder. Now you need to use this new name as path to acces back office. Your new back office link will be &lt;code&gt;http://localhost:1234/adminXXXX&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Open the new link in browser and type in your admin id and password. You can start playing on site.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- server setup</title>
      <link>https://harryho.github.io/os/ubuntu-server-14/</link>
      <pubDate>Fri, 04 Mar 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-14/</guid>
      <description>

&lt;h2 id=&#34;prelude&#34;&gt;Prelude&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup Ubuntu server. If you are not familiar with Ubuntu system, please install Ubuntu desktop version at first, and you can follow &lt;a href=&#34;https://harryho.github.io/blog/ubuntu-desktop-14/&#34;&gt;Ubuntu deskstop setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;brief-history&#34;&gt;Brief history&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with Ubuntu, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with bash/shell script&lt;/li&gt;
&lt;li&gt;You are going to setup Ubuntu server for special purpose. e.g. Web server, file server, or data center.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-server&#34;&gt;Things to do after installing Ubuntu server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ufw-setup&#34;&gt;&lt;strong&gt;&lt;em&gt;UFW setup&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ufw enable
sudo ufw allow 80/tcp
sudo ufw allow ssh
sudo ufw allow 443/tcp
sudo ufw allow 8000/tcp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;&lt;strong&gt;&lt;em&gt;SSH server setup&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install openssh-server 

# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.factory-defaults
sudo chmod a-w /etc/ssh/sshd_config.factory-defaults

# use any editor to update sshd_config 
sudo nano /etc/ssh/sshd_config

# uncomment  PasswordAuthentication yes to allow remote password login
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;time-zone-setup&#34;&gt;&lt;strong&gt;&lt;em&gt;Time Zone setup&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg-reconfigure tzdata
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-software-properties-common-package&#34;&gt;&lt;strong&gt;&lt;em&gt;install software-properties-common Package&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;software-properties-common python-software-properties
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Install byobu screen&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install byobu screen 

# Launch byobu
byobu
# F9 for help 
# change the keyboard for putty &amp;gt; Termianl &amp;gt; Keyboard &amp;gt; Function keys and keyboard &amp;gt; Xterm R6
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ubuntu-14-04-lts&#34;&gt;&lt;strong&gt;&lt;em&gt;install docker (Ubuntu 14.04 LTS)&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# add GBG Key
sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D

# add docker.list
sudo touch /etc/apt/sources.list.d/docker.list
#  repo 
sudo vi /etc/apt/sources.list.d/docker.list
#  add following repo ath the end of file 
deb https://apt.dockerproject.org/repo ubuntu-trusty main

# apt update 
sudo apt-get update
# verify 
apt-cache policy docker-engine
# install docker engine

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;build-vim&#34;&gt;&lt;strong&gt;&lt;em&gt;build vim&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I am not &lt;code&gt;vi&lt;/code&gt; fans, but if you really want to use &lt;code&gt;vi&lt;/code&gt;. I wiil suggest spend some time to dig into &lt;a href=&#34;http://vimawesome.com&#34;&gt;&lt;code&gt;vimawesome&lt;/code&gt;&lt;/a&gt; and play around with those plugins. Some are pretty cool, e.g. &lt;code&gt;NERD Tree&lt;/code&gt;, &amp;lsquo;youcompleteme&lt;code&gt;,&lt;/code&gt;syntastic`, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get build-dep vim
git clone https://github.com/vim/vim.git ~/forks/vim
cd ~/forks/vim
## make distclean &amp;amp;&amp;amp; make clean
## build script from this repo
make VIMRUNTIMEDIR=/usr/share/vim/vim74
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;&lt;strong&gt;&lt;em&gt;Install JDK 8&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;If you are going to run Java Web Application on server, or you are going to setup Hadoop environment.&lt;/li&gt;
&lt;li&gt;Setup oracle jdk ppa and install oracle jdk from ppa.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo apt-get install oracle-java8-set-default     
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-openjdk&#34;&gt;&lt;strong&gt;&lt;em&gt;Install OpenJdk&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Setup OpenJdk ppa and install it from ppa&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:openjdk-r/ppa
sudo apt-get update 
sudo apt-get install openjdk-8-jdk
sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Type in a number to select a Java version.&lt;/li&gt;
&lt;li&gt;set default Java Compiler&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo update-alternatives --config javac
java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to stop mysql auto startup&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Comment out the line below in the config file ( /etc/init/mysql.conf )&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Start on (net-device-up&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;&lt;strong&gt;&lt;em&gt;Install nodejs&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -sL https://deb.nodesource.com/setup | sudo bash -
sudo apt-get install nodejs
sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Setup NPM&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use default &lt;code&gt;npm&lt;/code&gt; on your server after you install nodejs, but there is a better way to manage your &lt;code&gt;npm&lt;/code&gt;. It allows you easily to control your packages.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd 
mkdir .node_modules
npm config list
npm config get prefix
# /usr or  /usr/share
npm config set prefix $HOME/.node_modules
cat .npmrc
# /home/hho/.node_modules
npm install -g npm
which npm
# /usr/bin/npm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Open .profile add following to end of file&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export PATH=&amp;quot;$HOME/.node_modules_global/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nvm&#34;&gt;&lt;strong&gt;&lt;em&gt;Install nvm&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Using &lt;code&gt;nvm&lt;/code&gt; is no longer popular and best option. I will recommand you just use &lt;code&gt;npm&lt;/code&gt; to manage eveything you need.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update
sudo apt-get install build-essential libssl-dev
curl https://raw.githubusercontent.com/creationix/nvm/v0.16.1/install.sh | sh
source ~/.profile
nvm ls-remote
nvm install 0.11.13
nvm use 0.11.13
nvm alias default 0.11.13
nvm use default
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php-compser&#34;&gt;&lt;strong&gt;&lt;em&gt;Install PHP &amp;amp; Compser&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install curl php5-cli git
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-python2-python3&#34;&gt;&lt;strong&gt;&lt;em&gt;Install Python2, Python3&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu has python instaleld by default&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get python pip 
sudo apt-get install python3 pip3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;&lt;strong&gt;&lt;em&gt;Install Go&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://storage.googleapis.com/golang/go1.4.linux-amd64.tar.gz
sudo tar -xzf go1.4.linux-amd64.tar.gz -C /usr/local

sudo vi /etc/profile
GOPATH=&amp;quot;/YOUR/USER/HOME/go&amp;quot;
GOROOT=&amp;quot;/usr/local/go&amp;quot;
PATH=$GOROOT/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-r&#34;&gt;&lt;strong&gt;&lt;em&gt;Install R&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-key adv –keyserver keyserver.ubuntu.com –recv-keys E084DAB9
sudo add-apt-repository ‘deb http://star-www.st-andrews.ac.uk/cran/bin/linux/ubuntu trusty/’
sudo apt-get update
sudo apt-get install r-base
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;&lt;strong&gt;&lt;em&gt;Install Rust&lt;/em&gt;&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -sf -L https://static.rust-lang.org/rustup.sh | sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Uninstall Rust&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /usr/local/lib/rustlib/uninstall.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Zendframework 2 MVC Starter</title>
      <link>https://harryho.github.io/project/zf2-mvc-starter/</link>
      <pubDate>Tue, 09 Feb 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/zf2-mvc-starter/</guid>
      <description>

&lt;p&gt;This starter is the starting point of zendframework 2 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with ZF2.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter was built on the zendframework 2.x.&lt;/li&gt;
&lt;li&gt;This starter uses mysql as database setting by default.&lt;/li&gt;
&lt;li&gt;Include digest authentication by default.&lt;/li&gt;
&lt;li&gt;Include font-awesome files.&lt;/li&gt;
&lt;li&gt;Include Bootstrap 3 without bootstrap-loader.&lt;/li&gt;
&lt;li&gt;Include html5shiiv.js to support older IE browser.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
\path\to\zf2-mvc-starter
+---config                            // Database, authorizaion, authentication setting
+---data          
+---module                            // Customized application sources
|   +---Application                   // Global module used by whole application
|   |   +---config
|   |   |   \---module.config.php     // Register all modules 
|   |   +---language
|   |   +---src
|   |   |   \---Application
|   |   |       +---Controller
|   |   |       \---Factory
|   |   |           \---AuthenticationAdapterFactory.php
|   |   \---view                      // Contains common master, basic layout files 
|   |       +---application
|   |       |   \---index
|   |       +---error
|   |       +---layout
|   |       \---partial
|   +---BookList                      // Customized module for business purpose
|   |   +---config
|   |   +---src
|   |   |   \---BookList
|   |   |       +---Controller
|   |   |       +---Form
|   |   |       \---Model
|   |   \---view
|   |       \---book-list
|   |           \---book
|   \---Test
|       \---config
+---public                          // Contains all fonts, css, images, and js files
|   +---css
|   +---fonts
|   +---img
|   \---js
\---vendor                          // Contains Zendframework 2 source code
          
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshot-of-home-page&#34;&gt;Screenshot of home page&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/zf2-mvc-starter.png&#34; alt=&#34;zf2-mvc-starter&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-zf2-mvc-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/zf2-mvc-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 14 -- desktop setup including Windows dual boot </title>
      <link>https://harryho.github.io/os/ubuntu-desktop-14/</link>
      <pubDate>Sun, 10 Jan 2016 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-desktop-14/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help beginner install Ubuntu desktop at the first time. If you are looking for setup of Ubuntu server, please check out the blog &amp;ndash; &lt;a href=&#34;https://harryho.github.io/blog/ubuntu-server-14/&#34;&gt;Ubuntu server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;brief-history&#34;&gt;Brief history&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;where-to-install-linux&#34;&gt;Where to install Linux?&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;How to answer this quetion really depends user&amp;rsquo;s computer knowledge and skills. Basically Linux can be installed on almost any PC, laptop, embedded device or tablet. So there are some suggestions for people with different level skills.*&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Beginner &amp;ndash; If you never install any operating system, or you never use &lt;code&gt;Unix/Linux&lt;/code&gt; system, but still want to try something new. You should consider to install virtual machine on your computer and then install ubuntu on the virtual machine. &lt;a href=&#34;http://www.vmware.com&#34;&gt;VMware&lt;/a&gt; and &lt;a href=&#34;https://www.virtualbox.org&#34;&gt;VirtualBox&lt;/a&gt; are both very good products.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Intermediate &amp;ndash; If you have installed operating system, or you have used &lt;code&gt;Unix/Linux&lt;/code&gt; system, you can install it on your old machine. or for safe side try it on virtual machine at first.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Expert &amp;ndash; You can try dual boot or multiple boot operating systems on your PC. Install 10-20 operating systems on a PC with 400GB harddisk should be alright. The only problem I encountered before some operating system can not find all proper drivers to support the all devices on your PC/laptop, such as the drivers for camera, touchpad, wifi, etc. It would take you so much time to research and try.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-virtual-machine&#34;&gt;Install virtual machine&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Let&amp;rsquo;s get our hands dirty&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install VirtualBox/VMWare on your computer. IMO, use VirtualBox is quite handy and save you much effort, even it is free. Because in the real environment, you will use remote tool to do your admin task instead of really handling a phyiscal machine. And you can try another Liunx OS on VirtualBox.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you lean to commercial product, you can choose VMWare. There is free trial option for you.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;which-version-to-choose&#34;&gt;Which version to choose&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Ubuntu has variant versions for you to download and play. I will suggest you always pick LTS (Long Term Support) version to download. As beginner, desktop version is the best option for you to start.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;After downlaod the &lt;a href=&#34;https://www.ubuntu.com/download/desktop&#34;&gt;Ubuntu Desktop&lt;/a&gt; from the internet. You will get a &lt;code&gt;ISO&lt;/code&gt; file like this: ubuntu-xx.xx.x-desktop-amd64.iso, if your OS is 64 bits, or something like ubuntu-xx.xx.x-desktop-x86.iso for 32 bits.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;install-unbuntu&#34;&gt;Install Unbuntu&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Before you install, you had better to backup anything on the device which you are going to install, and chcek your internet is working properly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a new virtual machine within VMWare or VirtualBox. The processes on both softwares are almost the same.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Assume your new virtual machine will sit in &lt;code&gt;C:\vbox&lt;/code&gt; for VirtualBox or &lt;code&gt;C:\vm&lt;/code&gt; for VMware&lt;/li&gt;
&lt;li&gt;Create a new machine from menu. Type in the name of vm. e.g. Unbuntu&lt;/li&gt;
&lt;li&gt;Select the type of operating system: Linux&lt;/li&gt;
&lt;li&gt;You can choose Ubuntu(&lt;sup&gt;32&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt; bit ) or something else. It doesn&amp;rsquo;t matter. We don&amp;rsquo;t use any built-in xxx.iso files from VirtualBox or VMware. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the memory size for the Unbuntu. 2G RAM is minimal requirement. I prefer up to 30% of total memory size. And then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Create a virtual hard drive now&amp;rdquo;, and then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select defaut VDI, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Dynamically allocated&amp;rdquo;, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Choose the location of Unbuntu. e.g. c:\vbox\ubuntu\ubuntu.vdi or c:\vm\ubuntu\ubuntu.vmdk. Select the size of VDI\VMDK file. At least 8G. I&amp;rsquo;d like to select 16 or more. Then a Unbuntu virtual machine has been created.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Config the Unbuntu hardware setting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VirtualBox toolbar, there is a &lt;code&gt;Start&lt;/code&gt; button. Click &lt;code&gt;Start&lt;/code&gt;, then go the Storage item.&lt;/li&gt;
&lt;li&gt;Under the Storage Tree section, there is Empty CD icon. Click the Empty icon.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Under the Attributes section, click the CD icon at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Start&lt;/code&gt;button on the toolbar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VMWare&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VMware, you can find CD/DVD button on the tab page of new virtual machine.&lt;/li&gt;
&lt;li&gt;Click the CD button at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Power on this virtual machine&lt;/code&gt; option on the tab page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ubuntu provides a friendly and beautiful UI to complete installation instead of ugly and terrified terminal, as geek&amp;rsquo;s computer shown on sci-fi movie. If you choose VMWare or VirtulBox as machine, you can open the page of &lt;a href=&#34;https://www.ubuntu.com/download/desktop/install-ubuntu-desktop&#34;&gt;installation steps&lt;/a&gt; on your browser. You just need to follow the instruction step by step, it will take you around 1-2 hours to complete.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-desktop&#34;&gt;Things to do after installing Ubuntu desktop&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu desktop is very nice and friendly, even it is different from your Windows. Basically you don&amp;rsquo;t need any geek&amp;rsquo;s skill to play around on Uubuntu desktop and use it as your Windows. There are tons of free software you can download from Ubuntu Software Center, so you don&amp;rsquo;t worry where to find the softwre you need. Considering you are the beginner, some suggestions and caveats will be highlighted below, but none of these needs command line and terminal.

&lt;ul&gt;
&lt;li&gt;Disable the system upgrade automatically to new LTS version.&lt;/li&gt;
&lt;li&gt;Disable the system power manager to suspend your PC.&lt;/li&gt;
&lt;li&gt;Disable the system problem report service.&lt;/li&gt;
&lt;li&gt;Enbale the third party packages.&lt;/li&gt;
&lt;li&gt;Install &lt;code&gt;Utity Tweek&lt;/code&gt; to help you customize your UI.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-don-t-do&#34;&gt;Things don&amp;rsquo;t do&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Something below is suggested not to do, because I assume you are Ubuntu or Linux beginner. I don&amp;rsquo;t wnat you to feel frustrated at the beginning of your Ubuntu desktop journey. It is the same that 99.9999% of Windows user should not delete cache files &lt;code&gt;C:\Windows&lt;/code&gt; or change the system registry, expect they really understand what they are doing.&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;rsquo;t optimzie your memory setting. It is really not a big deal.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t try to change your &lt;code&gt;Utity&lt;/code&gt; to other Ubuntu desktop, e.g. Ubuntu MATE, Ubuntu Xface, etc.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t follow the tips online to use &lt;code&gt;root&lt;/code&gt; in terminal before you fully understand what the commands do.&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t try to mount other drives on your computer, if it is mounted automatically.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;dual-boot-or-multiple-boot-with-windows&#34;&gt;Dual boot or multiple boot with Windows&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;For dual or multiple boot, you need to make sure your disk is formatted as GPT. It will save you so much effort later to install other operating systems.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;I suggest Windows first approach for multiple boot systems, because that is easier than the other way around. After install Windows on your PC, you need to shrink Windows disk space for other operating systems with &lt;code&gt;Disk Management&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Now you need to prepare Ubuntu USB installer or DVD. Place the USB stick or DVD in the appropriate drive, reboot the machine and instruct the BIOS/UEFI to boot-up from the DVD/USB by pressing a special function key (usually F12, F10 or F2 depending on the vendor specifications).&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;When you install Ubuntu, you need to select a separate &lt;code&gt;boot&lt;/code&gt; drive for dual boot systems. Usually you just need to pick the drive &lt;code&gt;efi&lt;/code&gt; as &lt;code&gt;boot&lt;/code&gt; drive. Your drives will be supposed to format with GPT as following structure.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;sda
  +----sda1        nfts               500M         Windows recovery
  +----sda2        efi       /boot    100M         grub2 , Windows boot manager
  +----sda3                  /        10M            
  +----sda4        ntfs      /      40000M         Window 7/8/10
  +----sda5                  swap   &amp;lt;Double size of your RAM size&amp;gt;   
  +----sda6        ext4      /      20000M         Ubuntu 14 desktop
  +----sda7        ext4      /      20000M         Fedora 20 desktop           
  +----sda8        ext4      /      20000M         CentOS 6 desktop
  +----sda9        ext4      /      20000M         OpenSuse desktop
  + ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting-windows-always-boots-first&#34;&gt;Troubleshooting: Windows always boots first&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Change BIOS&lt;/strong&gt;
* Start your PC by pressing a pressing a special function key (usually F12, F10 or F2 depending on the vendor specifications).
* Some PC&amp;rsquo;s BIOS has &lt;code&gt;BOOT&lt;/code&gt; tab option, open the &lt;code&gt;BOOT&lt;/code&gt; tab, you will find the &lt;code&gt;OS Boot Manager&lt;/code&gt;. It is the simplest way to fix the issue. If your PC&amp;rsquo;s BIOS has no such setting feature, you need to check the next section.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Change the Windows Boot Manager&lt;/strong&gt;
* Login windows with common prompt
* Restart windows, meanwhile press shift key
* In the options page, choose change to other options
* Troubleshooting
* Command Prompt
* Login in Windows with Common prompt
* Use BCDEdit to change windows boot manager. Change to boot ubuntu at first&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM backup
bcdedit /enum &amp;gt; X:\Users\public\documents\bcdedit.txt
REM change the bootmgr 
bcdedit /set {bootmgr} path \EFI\ubuntu\grubx64.efi
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;After you reboot system, you will see the Grub 2 menu as follow.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;                             GNU GRUB version 2.0
---------------------------------------------------------------------------------- 
| Ubuntu 
| Advanced options for Unbuntu
| Windows Boot Manager ( on /dev/sda2 )
| Fedora 20
| Advanced options for Fedora 20
| OpenSuse 
| Advanced options for OpenSuse
| ....

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 2</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</link>
      <pubDate>Mon, 24 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-2/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This article will continue the topic of Windows command &amp;amp; hotkeys. Part-1 shows you common hotkeys and short command lines for &lt;code&gt;Run&lt;/code&gt; windnow dialog. The rest of this topic will focus on the advanced commands and how to create a batch script with all those commands.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Let me clarify something first. Advanced command here does not mean that commands here are very complicated or much more powerful than common ones, which have been shown in the Part-1. Here we call them advanced, because they are used by experienced users to complete their given tasks, and those commands are used seldom by majority people. Comparing with Part-1, advanced commands have some specific features which allow them to do some special jobs, which usually are done by system admin. Advanced command is known as Admin command as well.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;advanced-commands-and-usages&#34;&gt;Advanced commands and usages&lt;/h2&gt;

&lt;h3 id=&#34;attrib&#34;&gt;attrib&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;attrib +h a.txt&lt;/code&gt; to hide file and use &lt;code&gt;attrib -h a.txt&lt;/code&gt; to unhide it.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;attrib +r a.txt&lt;/code&gt; to change file to read-only and reverse the action by &lt;code&gt;-r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;env&#34;&gt;env&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;env&amp;gt;env.txt &amp;amp; notepad env.txt&lt;/code&gt; Display all environment variable in text file&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;set&#34;&gt;set&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;set path&lt;/code&gt; to display &lt;strong&gt;PATH&lt;/strong&gt; environment variable, which is useful to check if your &lt;strong&gt;PATH&lt;/strong&gt; has been setup properly.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;set /P a=b&lt;/code&gt; to set b as value to variable a. It will be used in bat/cmd script.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;net&#34;&gt;net&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;get sub-commands&lt;/strong&gt; &amp;ndash; type &lt;code&gt;net /?&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    [ ACCOUNTS | COMPUTER | CONFIG | CONTINUE | FILE | GROUP | HELP |
     HELPMSG | LOCALGROUP | PAUSE | SESSION | SHARE | START | 
     STATISTICS | STOP | TIME | USE | USER | VIEW ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;get sub-command&amp;rsquo;s help&lt;/strong&gt; &amp;ndash; type &lt;code&gt;net [sub-command] /?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;net view&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net view&lt;/code&gt; to show a list of computers and network devices on the network.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net statistics&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net statistics workstation(/server)&lt;/code&gt; to show the network statistics log for the Server or Workstation service&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net localgroup&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net localgroup&lt;/code&gt; to show a list of local user group on your computer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net user&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;net user %username%&lt;/code&gt; to retrieve your user information&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;net user adminstrator&lt;/code&gt; to check the status of administrator&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;net user administrator /active:yes&lt;/code&gt; to activate adminstrator and inactivate by replacing &lt;code&gt;yes&lt;/code&gt; with&lt;code&gt;no&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;net accounts&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt;&lt;/code&gt; to show current user&amp;rsquo;s password and login requirement.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt; /minpwlen:6&lt;/code&gt; to set password minimum length requirement for user.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;net accounts &amp;lt;user&amp;gt; /maxpwage:30&lt;/code&gt; to force user to reset password every 30 days, or use &lt;code&gt;unlimited&lt;/code&gt; to replace the number &lt;code&gt;30&lt;/code&gt;, then user&amp;rsquo;s password will never expire.&lt;/li&gt;
&lt;li&gt;User &lt;code&gt;net accounts /unique:5&lt;/code&gt; to prevent user reuse previous passwords, and default value is 5.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;runas&#34;&gt;runas&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM start command prompt as administrator
runas /user:yourpc\administrator &amp;quot;cmd&amp;quot;

REM ##BE CAREFUL When you try the command below ##  
REM it shows how to create, delete files as admin under C drive root.  
runas /user:yourpc\administrator &amp;quot;cmd /C type \&amp;quot;\&amp;quot;&amp;gt;c:\z.txt &amp;amp; dir c:\z.txt &amp;amp; pause &amp;amp; del c:\z.txt &amp;quot; 

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sc&#34;&gt;sc&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;sc command usage: &lt;code&gt;sc &amp;lt;server&amp;gt; [command] [service name] &amp;lt;option1&amp;gt; &amp;lt;option2&amp;gt;...&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;sc query&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Basic usage&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM query all service on the PC -- &amp;lt;yourpcname&amp;gt;
sc \\&amp;lt;yourpcname&amp;gt; query

REM query status of given service 
sc query &amp;lt;servicename&amp;gt;
sc query state= all | find &amp;quot;SERVICE_NAME&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Retrieve service name and state. type parameter can be used twice in some case.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;state = {active | inactive | all}&lt;/li&gt;
&lt;li&gt;type = {driver | service | all}&lt;/li&gt;
&lt;li&gt;type= {own | share | interact | kernel | filesys | rec | adapt}&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The command options for SC are case sensitive.&lt;/li&gt;
&lt;li&gt;If you run this inside a batch file, the percent signs (e.g. at %s) need to be doubled.&lt;/li&gt;
&lt;li&gt;Extra space within option is necessary. e.g. &lt;code&gt;state= all&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM query all services which are inactive and type are driver and kernel
sc query state= inactive type= driver type= kernel

REM get all services name
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc query state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @echo %s 

REM get all services name and state
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc query state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=4&amp;quot; %t in (&#39;sc query %s ^| find &amp;quot;STATE&amp;quot; &#39;) 
        do @echo %s -- %t
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc queryex&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM get all services name and pid
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=3&amp;quot; %t in (&#39;sc queryex %s ^| find &amp;quot;PID&amp;quot; &#39;) 
        do @echo %s -- %t
)

REM get all services name and pid
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(
    for /f &amp;quot;tokens=3&amp;quot; %t in (&#39;sc queryex %s ^| find &amp;quot;BINARY_PATH_NAME&amp;quot; &#39;) 
        do @echo %s -- %t
) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc qc&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM get all services name and path
for /f &amp;quot;tokens=2&amp;quot; %s in (&#39;sc queryex state^= all ^| find &amp;quot;SERVICE_NAME&amp;quot;&#39;) do @(     
    for /f &amp;quot;tokens=3 delims==:&amp;quot; %t in (&#39;sc qc %s ^| find &amp;quot;BINARY_PATH_NAME&amp;quot; &#39;) 
    do @echo %s -- C:%t
)   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;sc start/stop&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM start and stop service
sc start  &amp;lt;servicename&amp;gt;

REM query service state
sc query &amp;lt;servicename&amp;gt;

REM stop service
sc stop  &amp;lt;servicename&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ipconfig&#34;&gt;ipconfig&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;ipconfig /all&lt;/code&gt; to display full configuration information.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;ipconfig /flushdns&lt;/code&gt;    to purge the DNS Resolver cache.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tasklist&#34;&gt;tasklist&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;syntax&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;tasklist[.exe] [/s computer] [/u domain\user [/p password]] [/fo {TABLE|LIST|CSV}] [/nh] [/fi FilterName [/fi FilterName2 [ &amp;hellip; ]]] [/m [ModuleName] | /svc | /v&lt;/li&gt;
&lt;li&gt;FilterName: Status, Imagename,&lt;/li&gt;
&lt;li&gt;Find process by pid&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM get the mysqld process info
tasklist /v /fo list /fi &amp;quot;imagename eq mysqld.exe&amp;quot;

REM get the mongod process info
tasklist /v /fo list /fi &amp;quot;imagename eq mongod.exe&amp;quot;

REM get list of running processes under given user  
tasklist /fi &amp;quot;USERNAME ne NT AUTHORITY\SYSTEM&amp;quot; /fi &amp;quot;STATUS eq running&amp;quot;

REM get list of non-responding processes under given user   
tasklist /fi &amp;quot;USERNAME ne NT AUTHORITY\SYSTEM&amp;quot; /fi &amp;quot;STATUS eq not responding&amp;quot; 

REM get process by PID
tasklist /fi &amp;quot;pid eq 4444&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;netstat&#34;&gt;netstat&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;netstat&lt;/code&gt; to get all ports and IP addresses, which are connected or listening&lt;/li&gt;
&lt;li&gt;Type PID of process which is using some given port, such as 80, 443, 22, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;netstat -ano | find &amp;quot;:80&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Type the application which is using given port.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;for /f &amp;quot;tokens=5&amp;quot; %p in ( &#39;netstat -ano ^| find &amp;quot;:80&amp;quot;&#39;) do @(     
    for /f &amp;quot;tokens=1&amp;quot; %s in ( &#39;tasklist /fi &amp;quot;pid eq %p&amp;quot; ^| find &amp;quot;%p&amp;quot;&#39;) do @(
        echo PID:%p -- APP: %s
    ) 
)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;taskkill&#34;&gt;taskkill&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;syntax&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;taskkill [/S system [/U username [/P [password]]]]
         { [/FI filter] [/PID processid | /IM imagename] } [/F] [/T]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;samples&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM force to stop notepad application and any children processes
taskkill /F /IM notepad.exe /

REM stop process by PID and any children processes
taskkill /PID 1230 /PID 1241 /PID 1253 /T

REM force to stop applications which PID is equal or greater than 10000
REM and windows title of app is not starts with untitle
taskkill /F /FI &amp;quot;PID ge 1000&amp;quot; /FI &amp;quot;WINDOWTITLE ne untitle*&amp;quot;
taskkill /F /FI &amp;quot;USERNAME eq NT AUTHORITY\SYSTEM&amp;quot; /IM notepad.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;schtasks&#34;&gt;schtasks&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Syntax &amp;ndash; &lt;code&gt;schtasks /parameter [arguments]&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;parameters include &amp;ndash; Change, Create, Delete, End, Query, Run, ShowSid&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;schtasks&lt;/code&gt; to list all scheduled tasks&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;schtasks /Query&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM get help info                                                                 
SCHTASKS /Query /?

REM query tasks which are scheduled on given system
SCHTASKS /Query /S system /U user /P

REM get list of tasks in details
SCHTASKS /Query /FO LIST /V     

REM get table of running tasks in details and output to csv file 
SCHTASKS /Query /FO TABLE /NH /V | find &amp;quot;Running&amp;quot;&amp;gt;running_tasks.csv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;combination-of-multiple-commands&#34;&gt;Combination of multiple commands&lt;/h2&gt;

&lt;p&gt;As we know, usually each command is designed to complete some specific actions, but sometimes we have to combine different commands together to achieve what we want. There are a few ways to put the commands together.&lt;/p&gt;

&lt;h3 id=&#34;use-to-simply-connect-to-commands&#34;&gt;Use &lt;code&gt;&amp;amp;&lt;/code&gt; to simply connect to commands&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Delete a folder with non-empty subdirectries &lt;code&gt;test&lt;/code&gt; we need to combine &lt;code&gt;del&lt;/code&gt; and &lt;code&gt;rd&lt;/code&gt; together. Actually we can two commands one by one, but we can put it together and just execute once.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;REM show the folder with non-empty subdirectries
tree test

\path\to\TEST
+---subdir1
|       file1
|       file2
|       
\---subdir2
        file1
        file2

del /s/q test &amp;amp; rd /s/q
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-pipeline-to-setup-a-channel-between-commands-pass-the-data-through-the-commands&#34;&gt;Use pipeline &lt;code&gt;|&lt;/code&gt; to setup a channel between commands pass the data through the commands.&lt;/h3&gt;

&lt;p&gt;Actually you have seen many samples from above advanced commands. I just use a very simple one to show you how it works.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-dos&#34;&gt;REM write some content to a text file all.txt
echo aaa&amp;gt;all.txt &amp;amp; echo mark aaa &amp;gt;&amp;gt;all.txt &amp;amp; echo mark bbb&amp;gt;&amp;gt;all.txt

REM retrive lines start with mark and write them to mark.txt
cat all.txt | find &amp;quot;mark&amp;quot;&amp;gt;mark.txt
cat mark.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-for-loop-to-combine-commands-please-check-the-samples-above&#34;&gt;Use &lt;code&gt;for&lt;/code&gt; loop to combine commands. Please check the samples above.&lt;/h3&gt;

&lt;h2 id=&#34;script&#34;&gt;script&lt;/h2&gt;

&lt;h3 id=&#34;basic-hello-world-script&#34;&gt;Basic hello world script&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You can find it on the &lt;a href=&#34;https://harryho.github.io&#34;&gt;home page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;customized-script&#34;&gt;Customized script&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This sample script is used to query temp folders and clean up log files within the folder.&lt;/li&gt;
&lt;li&gt;We assume you have multiple temp folders in different drives and You want to delete log files inside temp folder and its subdirectries from time to time. Before you delete them, you want to list all files first. You can confirm if you want to delete them or not.&lt;/li&gt;
&lt;li&gt;Create a file named clean-logs.bat&lt;/li&gt;
&lt;li&gt;Copy the sample code and tailor anything you want.&lt;/li&gt;
&lt;li&gt;The sample shows you how to create interative command script and how to combine commands together with the condition statement and loop statement.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
@echo off

@echo.&amp;quot;Assumption: You have multiple temp folders in different drives. You want to delete log files inside temp folder and its subdirectries. Before you delete them, you want to list all files first, file list should be sorted by time&amp;quot;

:again 
   echo &amp;quot;Checking all Recycle bins for each drive ...&amp;quot;
   echo.-----------------------
   for /f  %%x in (&#39;wmic logicaldisk get caption  ^| find &amp;quot;:&amp;quot;&#39;) do @(
        for /f &amp;quot;tokens=*&amp;quot; %%s in (&#39;tree /f /a %%x\temp ^| find  &amp;quot;log&amp;quot; &#39;  ) do @(
            echo.%%x\temp\%%s
        )
   )

   set /p answer=Do you want to clean up log files (Y/N)?
   if /i &amp;quot;%answer:~,1%&amp;quot; EQU &amp;quot;Y&amp;quot; ( 
       @echo.Y
       goto clean
   )
   if /i &amp;quot;%answer:~,1%&amp;quot; EQU &amp;quot;N&amp;quot; ( 
       @echo.N 
       goto end 
   )  
   echo Please type Y for Yes or N for No
   goto again

:clean
    echo.&#39;deleting logs&#39;
    for /f  %%x in (&#39;wmic logicaldisk get caption  ^| find &amp;quot;:&amp;quot;&#39;) do @(
        for /f &amp;quot;tokens=*&amp;quot; %%s in (&#39;tree /f /a %%x\temp ^| find  &amp;quot;log&amp;quot; &#39;  ) do @(
            del &amp;quot;%%x\temp\%%s&amp;quot;
        )
    )

:end
    echo.&#39;exiting program&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript and Object Oriented Programming</title>
      <link>https://harryho.github.io/code/javascript-oop/</link>
      <pubDate>Thu, 20 Mar 2014 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/javascript-oop/</guid>
      <description>

&lt;h2 id=&#34;brief-history&#34;&gt;Brief history&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Brief history of JavaScript can be found on &lt;a href=&#34;https://harryho.github.io/&#34;&gt;Home Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You should have basic knowledge of Javascript.&lt;/li&gt;
&lt;li&gt;You should know how to test sample code on Chrome or Firefox. It is simple, just open your browser and enter &lt;code&gt;F12&lt;/code&gt;, copy the code to console and then press &lt;code&gt;Enter&lt;/code&gt;.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;data-types&#34;&gt;Data types&lt;/h2&gt;

&lt;p&gt;The JavaScript (ECMAScript) standard defines six data types. Five are primitives, including Boolean, Null, Undefined, Number, String, and Object. In JavaScript, most things are objects, from core JavaScript features like strings and arrays to the browser APIs built on top of JavaScript. You can even create your own objects to encapsulate related functions and variables into efficient packages, and act as handy data containers. The object-oriented nature of JavaScript is important to understand if you want to go further with your knowledge of the language, therefore we&amp;rsquo;ve provided this module to help you. Here we teach object theory and syntax in detail, then look at how to create your own objects.&lt;/p&gt;

&lt;h2 id=&#34;object-and-prototype&#34;&gt;Object and prototype&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;How to define a object&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are a couple ways to create variable as object.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
var obj1 = {};
var obj2 = new Object();
var obj3 = Object.create(null);
console.log( obj );
console.log( obj2 );
console.log( obj3 );

/*
output: 
object {}
object {}
object {}
*/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Object type gives developers so much power and flexibility to customize their own data type. All JavaScript objects inherit the properties and methods from their prototype. The Object.prototype is on the top of the prototype chain. All JavaScript objects (Date, Array, RegExp, Function, &amp;hellip;.) inherit from the Object.prototype.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Object has properties and method. Object&amp;rsquo;s method are the actions that can be performed on objects, they are one of most powerful feature for developers. Let&amp;rsquo;s see how we can create object with properties and methods.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create three cars with basic object usage.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
var car1 = { color: &#39;red&#39;, make:&#39;Toyota&#39;, model:&#39;Sedan&#39;, getInfo: function (){
        console.log( this );
}};
var car2 = { color: &#39;black&#39;, make:&#39;BMW&#39;, model:&#39;Coupe&#39;, getInfo: function (){
        console.log( this );
}};
var car3 = { color: &#39;white&#39;, make:&#39;Subaru&#39;, model:&#39;SUV&#39;, getInfo:function (){
        console.log( this );
}};
car1.getInfo();
car2.getInfo(); 
car3.getInfo();

/*
Output:
Object {color: &amp;quot;red&amp;quot;, make: &amp;quot;Toyota&amp;quot;, model: &amp;quot;Sedan&amp;quot;} 
Object {color: &amp;quot;black&amp;quot;, make: &amp;quot;BMW&amp;quot;, model: &amp;quot;Coupe&amp;quot;} 
Object {color: &amp;quot;white&amp;quot;, make: &amp;quot;Subaru&amp;quot;, model: &amp;quot;SUV&amp;quot;}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;You will find the same method defined in every object. Can we make it better to just define the method once? The answer is Yes. Use an object constructor to create an object prototype. Any new object inherit the same propotype will have the same properties and methods.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
var Car = function(color, make, model, getInfo ) {
    this.color=&#39;&#39;;
    this.make=&#39;&#39;;
    this.model=&#39;&#39;;
    this.getInfo= function( time ){
            console.log( this );
    };
};

var car1 = new Car(&#39;red&#39;,&#39;Toyota&#39;,&#39;Sedan&#39;);
var car2 = new Car(&#39;black&#39;,&#39;BMW&#39;, &#39;Coupe&#39;);
var car3 = new Car(&#39;white&#39;,&#39;Subaru&#39;,&#39;SUV&#39;);
car1.getInfo();
car2.getInfo(); 
car3.getInfo();
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;You will get same result as before. If you compare two blocks of code, you may think the second way has more code than the first one. Let&amp;rsquo;s image if you need to create 20 objects and every object with 20 methods, then you totaly need to write 20 X 20 = 400 methods. Object&amp;rsquo;s prototype is powerful, but we need to be careful when we want to use it, especially the &lt;code&gt;this&lt;/code&gt; prototype. We need discuss this more in detail.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Other sample of prototype&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var Car = function(color, make, model ) {
    this.color=&#39;&#39;;
    this.make=&#39;&#39;;
    this.model=&#39;&#39;;
};
Car.prototype = {        
    getInfo : function( ){
            console.log( this );
    }
};
var car1 = new Car(&#39;red&#39;,&#39;Toyota&#39;,&#39;Sedan&#39;);
var car2 = new Car(&#39;black&#39;,&#39;BMW&#39;, &#39;Coupe&#39;);
var car3 = new Car(&#39;white&#39;,&#39;Subaru&#39;,&#39;SUV&#39;);
car1.getInfo();
car2.getInfo(); 
car3.getInfo();
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;The last way to use prototype is kind of verbose. The second one is more concise and nice is most popular paradigm.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;class-and-inheritance&#34;&gt;Class and inheritance&lt;/h2&gt;

&lt;p&gt;JavaScript has no built-in way of creating or implementing interfaces.
It also lacks built-in methods for determining whether an object implements the same set of
methods as another object, making it difficult to use objects interchangeably. Luckily, JavaScript
is extremely flexible, making it easy to add these features.&lt;/p&gt;

&lt;p&gt;JavaScript has no built-in way of creating or implementing interfaces.
It also lacks built-in methods for determining whether an object implements the same set of
methods as another object, making it difficult to use objects interchangeably. Luckily, JavaScript
is extremely flexible, making it easy to add these features.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Inheritance issue in Javascript&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;function Pet() {
    this.name =  &amp;quot;&amp;quot;;
    this.species =  &amp;quot;&amp;quot;;
    this.offsprings = [];
    this.setName = function ( name ) { this.name = name ;};
    this.deliverBaby = function( obj ){
        this.offsprings.push( obj );
    }
    this.getInfo = function (){
        console.log( &amp;quot; species: &amp;quot;,this.species, &amp;quot; name: &amp;quot; ,this.name );
        console.log( &amp;quot; has &amp;quot;, this.offsprings.length ,&amp;quot; offsprings &amp;quot;);
    }
};

function Dog()  {
};

Dog.prototype = new Pet();
Dog.prototype.species = &amp;quot;Dog&amp;quot;;

var dog1 = Object.create(new Dog());
dog1.setName ( &amp;quot;Polly&amp;quot;);

var dog2 = new Dog();
dog2.setName ( &amp;quot;Lulu&amp;quot;);

dog1.deliverBaby( new Dog());
dog2.deliverBaby( new Dog());

dog1.getInfo();
dog2.getInfo();

/*
output :
    species:  Dog  name:  Polly 
    has  2  offsprings              &amp;lt;- It is wrong. It should be 1 only.
    species:  Dog  name:  Lulu 
    has  2  offsprings              &amp;lt;- It is wrong. It should be 1 only.
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can tell there is something wrong with the prototype and constructor at a glance. It really confused many developers with C++/Java OOP backgroud. The sample code looks fine, but it doesn&amp;rsquo;t work as other OOP programming language. It is your and Brendan Eich&amp;rsquo;s problem, because he was told to make JavaScript look like Java, even there is no built-in OO mechanism at the beginning. This just looks like an odd way of doing class-based OOP without real classes, and leaves the programmer wondering why they didn’t implement proper class-based OOP. JavaScript keeps using constructor, which obscured JavaScript’s true prototypal nature. It turns out most developers don&amp;rsquo;t know how to use it properly and efficiently, including myself at the early stage.&lt;/p&gt;

&lt;p&gt;Function is first-class citizen in JavaScript world, but it’s not really a class. We need to understand the constructor creates an empty object, then sets the prototype of empty object to the prototype property of the constructor, then set constructor function with &lt;code&gt;this&lt;/code&gt; pointing to the newly-created object, and finally returns the object. You will get more confused after you see this definition. Let&amp;rsquo;s us create a simple sample and take a close look why the constructor and prototype will cause this problem.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
var MyClass = function(){
    this.name = &#39;MyClass&#39;;
    this.getInfo = function ( ){
        console.log( this );
    }
}
MyClass.prototype.propObject = { id: 0, property: &#39;property&#39; }

var objectA = new MyClass();
var objectB = new MyClass();

console.log( &#39;object A:&#39;, objectA.name ,  &#39;object B:&#39;, objectB.name  );
console.log( &#39;MyClass.prototype  === objectA.constructor.prototype ? &#39;, MyClass.prototype === objectA.constructor.prototype );
console.log( &#39;MyClass.prototype  === objectB.constructor.prototype ? &#39;, MyClass.prototype  === objectB.constructor.prototype );

console.log( &amp;quot; objectA.propObject : &amp;quot;, objectA.propObject , &amp;quot; objectB.propObject : &amp;quot;,  objectB.propObject  );

objectA.propObject.id = 1; 
objectA.propObject.property = &#39;AAA&#39;; 

console.log( &amp;quot; objectA.propObject : &amp;quot;, objectA.propObject,  &amp;quot; objectB.propObject : &amp;quot;,  objectB.propObject  );
/*
output :

MyClass object B: MyClass
MyClass.prototype  === objectA.constructor.prototype ?  true
MyClass.prototype  === objectB.constructor.prototype ?  true
objectA.propObject :  Object {id: 0, property: &amp;quot;property&amp;quot;}  objectB.propObject :  Object {id: 0, property: &amp;quot;property&amp;quot;}
objectA.propObject :  Object {id: 1, property: &amp;quot;AAA&amp;quot;}  objectB.propObject :  Object {id: 1, property: &amp;quot;AAA&amp;quot;}  
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we draw a diagram of above sample, you will see what is happening behind the scene. Since the prototype property is a reference, changing the prototype object’s properties at runtime will affect all objects using the prototype.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;
+------------+             
|  MyClass   |        +---- objectA.prototype
| prototype&amp;lt;----------|
|            |        +---- objectB.prototype
+------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we figure out the root cause. You will say it is easy to fix. We just need to create new prototype for each object, and clone the properties and methods from supper class. Yes, you are right, but it is not I want to recommand to you. First, we need to see if we really inheritance, secondly, if it is better to maintain if use inheritance.&lt;/p&gt;

&lt;p&gt;If we still want to use inheritance, I will suggest not to just inherit the properties, instead of methods. In my opinion, there is very rare of scenario, we really need to inherit method. So we just need to find to proper way to solve the problem of properties inheritance.&lt;/p&gt;

&lt;h3 id=&#34;object-based-inheritance&#34;&gt;Object-based Inheritance&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
function Pet(name, master) {
    this.name = name || &amp;quot;&amp;quot;;
    this.species = &amp;quot;&amp;quot;;
    this.master = master || {
        name: &#39;&#39;,
        gender: &#39;&#39;
    };
    this.offsprings = [];
    this.deliverBaby= function ( obj) {
        this.offsprings.push(obj);
    },
    this.getInfo = function () {
        console.log(&amp;quot; species: &amp;quot;, this.species, &amp;quot; name: &amp;quot;, this.name, &amp;quot; master : &amp;quot;, this.master.name, &amp;quot; &amp;quot;, this.master.gender);
        this.offsprings.forEach(function (e) {
            console.log(&amp;quot; has baby :  &amp;quot;, e.name, &amp;quot; &amp;quot;, e.species);
        });
    }
}

function Dog(name, master) {
    Pet.call(this, name, master);
    this.mother = null;
    this.species = &amp;quot;Dog&amp;quot;;
}

var dog1 = new Dog(&#39;Polly&#39;);
dog1.master = {
    name: &#39;John&#39;,
    gender: &#39;M&#39;
};

var dog2 = new Dog(&#39;Lulu&#39;, {
    name: &#39;Ada&#39;,
    gender: &#39;F&#39;
});

dog1.deliverBaby(new Dog(&#39;Polly-Baby-Dog&#39;));
dog2.deliverBaby(new Dog(&#39;Lulu-Baby-Dog&#39;));
dog2.deliverBaby(new Dog(&#39;Lulu-Baby-Dog-2&#39;));

dog1.getInfo();
dog2.getInfo();

/*
output:

Dog  name:  Polly  master :  John   M
has baby :   Polly-Baby-Dog   Dog
species:  Dog  name:  Lulu  master :  Ada   F
has baby :   Lulu-Baby-Dog   Dog
has baby :   Lulu-Baby-Dog-2   Dog
*/

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you test, would you ask: &amp;ldquo;what? how this works? It looks share the same prototype with &lt;code&gt;this&lt;/code&gt;&amp;rdquo;? Actually the problem is the special object &lt;code&gt;this&lt;/code&gt; in Javascript, which is one of the most misunderstood parts of JavaScript. Today it still confuses many other JS developers. If you have experience with other JavaScript framework. You will find many samples which use &lt;code&gt;that&lt;/code&gt; , &lt;code&gt;self&lt;/code&gt;, &lt;code&gt;vm&lt;/code&gt; to replace the built-in &lt;code&gt;this&lt;/code&gt;. e.g. &lt;code&gt;var that = {}&lt;/code&gt;, &lt;code&gt;var self = {}&lt;/code&gt;,etc. Let&amp;rsquo;s see the new version of above sample code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
function Pet(name, master) {
    var self = {};
    self.name = name || &amp;quot;&amp;quot;;
    self.species = &amp;quot;&amp;quot;;
    self.master = master || {
        name: &#39;&#39;,
        gender: &#39;&#39;
    };
    self.offsprings = [];
    return self;
}

function Dog(name, master) {
    var self = {};
    Pet.call(self, name, master);
    self.species = &amp;quot;Dog&amp;quot;;
    self.prototype = this.constructor.prototype;
    return self;
}

Dog.prototype = {    
    deliverBaby: function ( self, obj) {
        self.offsprings.push(obj);
    },
    getInfo: function (self) {
        console.log(&amp;quot; species: &amp;quot;, self.species, &amp;quot; name: &amp;quot;, self.name, &amp;quot; master : &amp;quot;, self.master.name, &amp;quot; &amp;quot;, this.master.gender);
        self.offsprings.forEach(function (e) {
            console.log(&amp;quot; has baby :  &amp;quot;, e.name, &amp;quot; &amp;quot;, e.species);
        });
    }
};

var dog1 = new Dog(&#39;Polly&#39;);
dog1.master = {
    name: &#39;John&#39;,
    gender: &#39;M&#39;
};
var dog2 = new Dog(&#39;Lulu&#39;, {
    name: &#39;Ada&#39;,
    gender: &#39;F&#39;
});

dog1.deliverBaby(dog1, new Dog(&#39;Polly-Baby-Dog&#39;));
dog2.deliverBaby(dog2, new Dog(&#39;Lulu-Baby-Dog&#39;));
dog2.deliverBaby(dog2, new Dog(&#39;Lulu-Baby-Dog-2&#39;));

dog1.getInfo();
dog2.getInfo();

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I rewrite above sample a few lines of code, then you will figour out why it is working, but maybe you still want to implement inheritance as other OOP lanuage C++, Java. Then let&amp;rsquo;s take a look the classical inheritance, which is much more close to other OOP language. In classical inheritance it&amp;rsquo;s impossible (or at least very difficult) to choose which properties you want to inherit. They use virtual base classes and interfaces to solve the diamond problem. It is much more complicated.&lt;/p&gt;

&lt;h3 id=&#34;classical-inheritance&#34;&gt;Classical inheritance&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
function extend(subClass, superClass) {
    var F = function () {};
    F.prototype = superClass.prototype;
    subClass.prototype = new F();
    subClass.prototype.constructor = subClass;
    subClass.superclass = superClass.prototype;

    if (superClass.prototype.constructor == Object.prototype.constructor) {
        superClass.prototype.constructor = superClass;
    }
}

function Pet(name, master) {
    this.name = name || &amp;quot;&amp;quot;;
    this.species = &amp;quot;&amp;quot;;
    this.master = master || {
        name: &#39;&#39;,
        gender: &#39;&#39;
    };
    this.offsprings = [];
}

Pet.prototype.deliverBaby = function (obj) {
    this.offsprings.push(obj);
};

Pet.prototype.getInfo = function () {
    console.log(&amp;quot; species: &amp;quot;, this.species, &amp;quot; name: &amp;quot;, this.name, &amp;quot; master : &amp;quot;, (this.master?this.master.name:&#39;&#39;), &amp;quot; &amp;quot;,  (this.master?this.master.gender:&#39;&#39;));
    this.offsprings.forEach(function (e) {
        console.log(&amp;quot; has baby :  &amp;quot;, e.name, &amp;quot; &amp;quot;, e.species);
    });
}


function Dog(name, master) {
    Dog.superclass.constructor.call(this, name, master);
    this.species = &amp;quot;Dog&amp;quot;;
}

extend(Dog, Pet);

Dog.prototype.getInfo = function () {     
    console.log(&amp;quot; Override --- &amp;quot; );
    Dog.superclass.getInfo.call(this) ;
};

var dog1 = new Dog(&#39;Polly&#39;);
dog1.master = {
    name: &#39;John&#39;,
    gender: &#39;M&#39;
};

var dog2 = new Dog(&#39;Lulu&#39;, {
    name: &#39;Ada&#39;,
    gender: &#39;F&#39;
});

dog1.deliverBaby(new Dog(&#39;Polly-Baby-Dog&#39;));
dog2.deliverBaby(new Dog(&#39;Lulu-Baby-Dog&#39;));
dog2.deliverBaby(new Dog(&#39;Lulu-Baby-Dog-2&#39;));

dog1.getInfo();
dog2.getInfo();


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Most programmers who come from a classical background argue that classical inheritance is more powerful than prototypal inheritance. The truth is that prototypal inheritance supports inheriting from multiple prototypes. Prototypal inheritance simply means one object inheriting from another object.&lt;/p&gt;

&lt;p&gt;Whether classical or prototypal, is used to reduce the redundancy in code. Since prototypal inheritance allows for multiple inheritance, code which requires multiple inheritance is less redundant if written using prototypal inheritance rather than in a language which has classical inheritance but no multiple inheritance.&lt;/p&gt;

&lt;h3 id=&#34;prototypal-inheritance&#34;&gt;Prototypal inheritance&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
function clone(obj) {
    if (obj === null || typeof obj !== &#39;object&#39;) {
        return obj;
    }

    var temp = obj.constructor(); // give temp the original obj&#39;s constructor
    for (var key in obj) {
        temp[key] = clone(obj[key]);
    } 
    return temp;
}

var Pet = {
    name: &amp;quot;&amp;quot;,
    species: &amp;quot;&amp;quot;,
    master: {
        name: &#39;&#39;,
        gender: &#39;&#39;
    },
    offsprings: [],
    deliverBaby: function (obj) {
        this.offsprings.push(obj);
    },
    getInfo: function () {
        console.log(&amp;quot; species: &amp;quot;, this.species, &amp;quot; name: &amp;quot;, name, &amp;quot; master : &amp;quot;, this.master.name, &amp;quot; &amp;quot;, this.master.gender);
        this.offsprings.forEach(function (e) {
            console.log(&amp;quot; has baby :  &amp;quot;, e.name, &amp;quot; &amp;quot;, e.species);
        });
    }
};

var Dog = clone(Pet);
Dog.species = &#39;Dog&#39;;

Dog.getInfo = function () {
    console.log(&amp;quot; Override -- species: &amp;quot;, this.species, &amp;quot; name: &amp;quot;, this.name, &amp;quot; master : &amp;quot;, this.master.name, &amp;quot; &amp;quot;, this.master.gender);
    this.offsprings.forEach(function (e) {
        console.log(&amp;quot; has baby :  &amp;quot;, e.name, &amp;quot; &amp;quot;, e.species);
    });
};

var dog1 = clone(Dog);
var dog2 = clone(Dog);

dog1.name = &#39;Polly&#39;;
dog1.master = {
    name: &#39;John&#39;,
    gender: &#39;M&#39;
};
dog2.name = &#39;Lulu&#39;;
dog2.master = {
    name: &#39;Ada&#39;,
    gender: &#39;F&#39;
};

var dog11 = clone(Dog);
dog11.name = &#39;Polly-Baby-Dog&#39;;
var dog21 = clone(Dog);
var dog22 = clone(Dog);
dog21.name = &#39;Lulu-Baby-Dog&#39;;
dog22.name = &#39;Lulu-Baby-Dog-2&#39;;

dog1.deliverBaby(dog11);
dog2.deliverBaby(dog21);
dog2.deliverBaby(dog22);

dog1.getInfo();
dog2.getInfo();

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;One of the most important advantages of prototypal inheritance is that you can add new properties to prototypes after they are created. This allows you to add new methods to a prototype which will be automatically made available to all the objects which delegate to that prototype.
This allows you to add new methods to a prototype which will be automatically made available to all the objects which delegate to that prototype.This is not possible in classical inheritance because once a class is created you can&amp;rsquo;t modify it at runtime. This is probably the single biggest advantage of prototypal inheritance over classical inheritance, and it should have been at the top.&lt;/p&gt;

&lt;h2 id=&#34;module-and-namespace&#34;&gt;Module and namespace&lt;/h2&gt;

&lt;p&gt;There are quite a lot of benefits from module and namespace, especially when you are going to build some special common api shared within the whole application, even multiple systems across your whole entire enterprise. First thing first, we should not pollute the context, since it will potentially break existing functions or other third party frameworks which have been introduced in your applicatio, vice versa.&lt;/p&gt;

&lt;p&gt;On the other hand, it is a good way to create reusable component, and it is easily for further enhancement, or maybe maintenance. JavaScript is very easy to create a module. One of the most widely used design patterns in JavaScript is the module pattern.&lt;/p&gt;

&lt;h3 id=&#34;closure&#34;&gt;Closure&lt;/h3&gt;

&lt;p&gt;The module pattern makes use of one of the nicer features of JavaScript – closures – in order to give you some control of the privacy of your methods so that third party applications cannot access private data or override it.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple closure&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var closureObject = (function() {
    var _privateProperty = &#39;private&#39;;
    var _privateMethod = function () {
        console.log( &#39; private method &#39;);
    };
    return {
        publicProperty: &#39;Public Property&#39;,
        publicMethod: function() {
            console.log( &#39; Call &#39;, _privateMethod() , &#39; from public method &#39;);
        },
        setPrivateProperty: function ( newValue ){
            _privateProperty= newValue;
        },
        getPrivateProperty: function( ){
            return _privateProperty;
        }
    }
}());

console.log(  closureObject.publicProperty );
console.log(  closureObject._privateProperty ); 
// console.log(  closureObject._privateMethod() ); // This will cause Uncaught TypeError
console.log(  closureObject.getPrivateProperty() );

closureObject.setPrivateProperty( &#39;public&#39;);
console.log(  closureObject.getPrivateProperty() );

/* 
output:

Public Property
undefined             // privateProperty can not be accessed directly
private               
public                // privateProperty can be updated by public method
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From above sample code, you can the JavaScript can easily implement the encapsulation as OOP language. Closure is the base the module pattern, and module is the base of namespace. Maybe you will wonder why we need module and namespace,just closure is good enough for us control the API. If we take a second thought we will realize if some application has the same object called closureObject, both will crash at run time. As a simple solution, we can make a very long, different and ridiculous name to avoid the conflict, but it is not a nice solution. Then module turns out as a better way to solve this problem.&lt;/p&gt;

&lt;h3 id=&#34;module&#34;&gt;Module&lt;/h3&gt;

&lt;p&gt;Module is not rock science. Actually it is quite easy to implement.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple module sample&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var myModule = (function(undefined) {
    var _privateProperty = &#39;private&#39;;
    var _privateMethod = function () {
        console.log( &#39; private method &#39;);
    };
    return {
        publicProperty: &#39;Public Property&#39;,
        publicMethod: function() {
            console.log( &#39; Call &#39;, _privateMethod() , &#39; from public method &#39;);
        },
        setPrivateProperty: function ( newValue ){
            _privateProperty= newValue;
        },
        getPrivateProperty: function( ){
            return _privateProperty;
        }
    }
}());
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You may say &amp;ldquo;What? closure is module.&amp;rdquo; Yes, you can say that. The little difference is the auguements during auto initialization. By having an function argument undefined (the name actually does not matter) which you don&amp;rsquo;t pass a parameter to, you could make sure you have a variable which really is undefined. This technique ensures that it will work as expected, in case it will be excluded to unintential amendment by other script.&lt;/p&gt;

&lt;p&gt;Once we create our module, we can simply extend the module with the same technique.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Module&amp;rsquo;s extension with override or new api&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var myModule = (function() {
    ....
}());

var extendModule = (function( m){
     m.publicMethod = function ( newArgument ) { // overload publicMethod 
          //   TODO
     };

     m.newApi = function () {  // 
         // TODO
     };

}(myModule));

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;namespace&#34;&gt;Namespace&lt;/h3&gt;

&lt;p&gt;Now we will go further to namespace, which is based on module technique. Namespace gives you the ability to have public and private properties and methods.
The code inside doesn’t use the Object Literal notation. Allows you to use $ inside your code without worrying about clashing with other libraries
Allows your library to grow across files using the “window.rtkns = window.rtkns || {}” technique
A common pattern that you will see in many libraries, widgets, and plugins&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;
(function (rtkns, $, undefined) {

    rtkns.createNS = function (namespace) {
        var nsparts = namespace.split(&amp;quot;.&amp;quot;);
        var parent = rtkns;

        if (nsparts[0] === &amp;quot;rtkns&amp;quot;) {
            nsparts = nsparts.slice(1);
        }

        for (var i = 0; i &amp;lt; nsparts.length; i++) {
            var partname = nsparts[i];

            if (typeof parent[partname] === &amp;quot;undefined&amp;quot;) {
                parent[partname] = {};
            }
            parent = parent[partname];
        }
        return parent;
    };

    var clone = function(obj) {
        if (obj === null || typeof obj !== &#39;object&#39;) {
            return obj;
        }

        var temp = obj.constructor(); // give temp the original obj&#39;s constructor
        for (var key in obj) {
            temp[key] = clone(obj[key]);
        } 
        return temp;
    };

    rtkns.clone = clone;

    rtkns.createNS(&amp;quot;rtkns&amp;quot;);


    rtkns.utils = rtkns.createNS(&amp;quot;rtkns.utils&amp;quot;);

    rtkns.model = rtkns.createNS(&amp;quot;rtkns.model&amp;quot;);


    rtkns.model.entity = {
        id: 0,
        createdBy:&#39;&#39;,
        modifiedBy:&#39;&#39;,
        created: null,
        modified: null,
    };
    var entity = rtkns.model.entity;
    
    rtkns.model.order = clone ( entity);
    var order = rtkns.model.order ;
    order.amount = 0;
    order.description = &#39;&#39;;


    rtkns.model.client = clone( entity);
    var client =  rtkns.model.client ;
    client.name = &#39;&#39;;
    client.email = &#39;&#39;;
    client.orders = [];
    client.purchase = function ( order ){
        this.orders.push( order );
    };

    rtkns.utils.toString = function (entity) {
        return entity?JSON.stringify(entity):entity;
    };


}(window.rtkns = window.rtkns || {}));

var rtkns = window.rtkns;

var client1 = rtkns.clone( rtkns.model.client );
client1.name = &#39;client 1&#39;;
client1.email = &#39;client1.email@test.com&#39;;
var client2 = rtkns.clone( rtkns.model.client );
client2.name = &#39;client 2&#39;;
client2.email = &#39;client2.email@test.com&#39;;

var order1 = rtkns.clone( rtkns.model.order );
order1.amount = 100;
order1.description = &#39;order 1&#39;;

var order2 = rtkns.clone( rtkns.model.order );
order2.amount = 600;
order2.description = &#39;order 2&#39;;

client1.purchase( order1 );
client2.purchase( order2 );

console.log(rtkns.utils.toString( client1));
console.log(rtkns.utils.toString( client2));

/*

output:
{&amp;quot;id&amp;quot;:0,&amp;quot;createdBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;modifiedBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created&amp;quot;:null,&amp;quot;modified&amp;quot;:null,&amp;quot;name&amp;quot;:&amp;quot;client 1&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;client1.email@test.com&amp;quot;,&amp;quot;orders&amp;quot;:[{&amp;quot;id&amp;quot;:0,&amp;quot;createdBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;modifiedBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created&amp;quot;:null,&amp;quot;modified&amp;quot;:null,&amp;quot;amount&amp;quot;:100,&amp;quot;description&amp;quot;:&amp;quot;order 1&amp;quot;}]}
VM95:2 {&amp;quot;id&amp;quot;:0,&amp;quot;createdBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;modifiedBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created&amp;quot;:null,&amp;quot;modified&amp;quot;:null,&amp;quot;name&amp;quot;:&amp;quot;client 2&amp;quot;,&amp;quot;email&amp;quot;:&amp;quot;client2.email@test.com&amp;quot;,&amp;quot;orders&amp;quot;:[{&amp;quot;id&amp;quot;:0,&amp;quot;createdBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;modifiedBy&amp;quot;:&amp;quot;&amp;quot;,&amp;quot;created&amp;quot;:null,&amp;quot;modified&amp;quot;:null,&amp;quot;amount&amp;quot;:600,&amp;quot;description&amp;quot;:&amp;quot;order 2&amp;quot;}]}
*/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The sample above combine namespace and prototypal inheritance. Namespace allows you to add new module for enhancement, and it allows you to organize your API better.  On the other hand, through the globle namespace you can inject customized service, or you can replace it. The disadvantage of namespace, when the source code blows up, it will be a bit more complicated, especially you break different into different files. Mock test or unit test will needs a bit more work to do as well. There is no pattern that is a Silver Bullet, but rather you should assess where you are at and examine the pros and cons of each pattern to address your situation.&lt;/p&gt;

&lt;h2 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h2&gt;

&lt;p&gt;An interface tells programmers what methods a given class implements, which makes it easier to use. Interfaces also stabilize the ways in which different classes can communicate.&lt;/p&gt;

&lt;p&gt;Using any interface implementation in JavaScript will create a small performance hit, due in part to the overhead of having another method invocation.&lt;/p&gt;

&lt;p&gt;The biggest drawback is that there is no way to force other programmers to respect the interfaces you have created. In JavaScript, you must manually ensure that a given class implements an interface. You can mitigate this problem by using coding conventions and helper classes, but it will never entirely go away. Everyone on your project must agree to use them and check for them; otherwise much of their value is lost.&lt;/p&gt;

&lt;p&gt;JavaScript does not come with built-in support for interfaces, and there is no Interface keyword, so any method you use to implement this will be very different from what languages such as C++, Java, and making it a little more difficult. JavaScript uses what&amp;rsquo;s called duck typing. (If it walks like a duck, and quacks like a duck, as far as JS cares, it&amp;rsquo;s a duck.) If your object has quack(), walk(), and fly() methods, code can use it wherever it expects an object that can walk, quack, and fly, without requiring the implementation of some &amp;ldquo;Duckable&amp;rdquo; interface.&lt;/p&gt;

&lt;p&gt;JavaScript will use Interface object to ensure if the new instance implements the same action as Interface object.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;

var Interface = function(interfaceName, interfaceMembers) {
    if (!(this instanceof Interface)) {
        return new Interface(interfaceName, interfaceMembers);
    }

    var interfaceObj = this;

    Object.keys(interfaceMembers).forEach(function(memberName) {
        interfaceObj[memberName] = function() {
            Interface.errorDetect(interfaceName, memberName);
        };
    });

    interfaceObj.name = interfaceName;

    return interfaceObj;
};

Interface.errorDetect = function(interfaceName, interfaceMember) {
    throw Error(&#39;errorDetect: Class does not implement interface member &#39; + interfaceName + &#39;.&#39; + interfaceMember + &#39;()&#39;);
};

Interface.ensureImplement = function(obj /*, interfaces */ ) {
    var interfaces = [].slice.call(arguments, 1);

    interfaces.forEach(function(_interface) {
        Object.keys(_interface).forEach(function(interfaceMember) {
            var isFunction = typeof _interface[interfaceMember] === &#39;function&#39;;

            if (isFunction &amp;amp;&amp;amp; !obj[interfaceMember]) {
                Interface.errorDetect(_interface.name, interfaceMember);
            }
        });
    });

    return true;
};


&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;How to use this interface&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Samples below show you how  the Interface can ensure the object implement multiple interfaces.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;// Sample 1 with only one interface

var ILog = Interface(&#39;ILog&#39;, {
    logInfo:function(){},
    logWarning:function(){},
    logError:function(){},
}); 


var loggerA = {
    logInfo:function(){},
    logWarning:function(){},
    logError:function(){},
};

// loggerB does not implement all methods
var loggerB = {
    logInfo:function(){},
    logWarning:function(){},
};

console.log(Interface.ensureImplement( loggerA, ILog));
console.log(Interface.ensureImplement( loggerB, ILog));

/*
output:
true
Uncaught Error: errorDetect: Class does not implement interface member ILog.logError()
...
*/

// Sample 2 with 2 interfaces

var Submarine = Interface(&#39;Submarine&#39;, {
    operateUnderwater:function(){}
}); 

var Car = Interface(&#39;Car&#39;, {
    operateOnRoad:function(){}
}); 

var SubmarineCar = {
    operateUnderwater:function(){},
    operateOnRoad:function(){},
};

console.log(Interface.ensureImplement( SubmarineCar, Submarine, Car ));

/**
output:
true
*/
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Use Windows command &amp; hotkey as a hacker - Part 1</title>
      <link>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</link>
      <pubDate>Sun, 09 Mar 2014 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/use-windows-command-hotkey-as-hacker-1/</guid>
      <description>

&lt;p&gt;&lt;em&gt;Do you want to make your friends amazed by your computer skill and praise you as genius? Or the hacker as watched in Sci-Fi movies? You don&amp;rsquo;t need Mac, Linux or other operating systems, just Windows, you can show-off and look like hacker and master of Zeroes and Ones, even you have no any idea of it. Here are some tricks by which you can make your friends&amp;rsquo; jaw drop.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;start-windows-command-prompt-as-hacker&#34;&gt;Start Windows command prompt as hacker&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Use use hotkeys to open &lt;code&gt;Run&lt;/code&gt; feature in two keystrokes: &lt;code&gt;WinKey + R&lt;/code&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;cmd&lt;/code&gt; and press &lt;code&gt;Enter&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/windows-run-feature.png&#34; alt=&#34;Run&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Type &lt;code&gt;color A&lt;/code&gt; to change the color of text to &lt;strong&gt;Green&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change the title to &lt;strong&gt;Hacker Tool&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;List the folders of current directory&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\color A
C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\title Hacker Tool
C:\&amp;gt;User\&amp;lt;yourname&amp;gt;\cd \
C:\&amp;gt;tree 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;use-other-command-prompt&#34;&gt;Use other command prompt&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cmder.net/&#34;&gt;cmder&lt;/a&gt; is an awesome product. I suggest you just choose mini version to download and install if you are not the heavy git user. There are so many built-in features you can play around.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sourceforge.net/projects/console/&#34;&gt;console2&lt;/a&gt; is a very good as well. I used it for many years. I&amp;rsquo;m planning to migrate to &lt;code&gt;cmder&lt;/code&gt;, but it will take me some time to do it, because I have some customized scripts need to run in &lt;code&gt;console2&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;useful-windows-hotkeys&#34;&gt;Useful Windows hotkeys&lt;/h2&gt;

&lt;p&gt;I believe the common hotkeys you should know. e.g. &lt;code&gt;Ctrl + C, Ctrl + V, Ctrl + A&lt;/code&gt;. Here the hotkeys I list below are some rarely-used but very useful hotkys.&lt;/p&gt;

&lt;h3 id=&#34;general-hotkeys&#34;&gt;General hotkeys&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + Esc&lt;/code&gt;  &amp;ndash;  Open task manager&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + R&lt;/code&gt;  &amp;ndash;  run dialog&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + D&lt;/code&gt;  &amp;ndash;  toggle &amp;lsquo;show desktop&amp;rsquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + L&lt;/code&gt;  &amp;ndash;  lock workstation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + E&lt;/code&gt;  &amp;ndash;  windows explorer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + R&lt;/code&gt;  &amp;ndash;  clear page cache and refresh webpage on browser&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + (shift +) tab&lt;/code&gt;  &amp;ndash;  switch windows forwards (or backwards)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Alt + F4&lt;/code&gt;  &amp;ndash;  close the selected application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;F2&lt;/code&gt; , renames selected file. Also used with spreadsheet cells.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl and (+/-)&lt;/code&gt;  &amp;ndash;  zoom in or zoom out text on the editor tool&lt;/li&gt;
&lt;li&gt;Middle click a tab  &amp;ndash;  close tab&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;hotkeys-for-windows-7-or-higher-version&#34;&gt;Hotkeys for Windows 7 or higher version&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;WinKey + W&lt;/code&gt;  &amp;ndash;  search setting iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + Q&lt;/code&gt;  &amp;ndash;  search every iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + F&lt;/code&gt;  &amp;ndash;  search file iterms&lt;/li&gt;
&lt;li&gt;&lt;code&gt;WinKey + T&lt;/code&gt;  &amp;ndash;  use keyboard arrow keys to navigate dock&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Winkey + X&lt;/code&gt; - bring up laptop settings control panel&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl +  N&lt;/code&gt; - new tab&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Shift + N&lt;/code&gt; - new Folder&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;common-short-command-lines-for-run-feature&#34;&gt;Common short command lines for &lt;code&gt;Run&lt;/code&gt; feature&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cmd&lt;/code&gt; &amp;ndash; start a Windows command prompt&lt;/li&gt;
&lt;li&gt;&lt;code&gt;calc&lt;/code&gt; &amp;ndash; start the calculator application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;notepad&lt;/code&gt; &amp;ndash; start the notepad application&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;advanced-short-command-lines-for-run-feature&#34;&gt;Advanced short command lines for &lt;code&gt;Run&lt;/code&gt; feature&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mstsc&lt;/code&gt; &amp;ndash; start the remote desktop application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;regedit&lt;/code&gt; &amp;ndash; start registry editor application&lt;/li&gt;
&lt;li&gt;&lt;code&gt;resmon&lt;/code&gt;  &amp;ndash;  awesome resource monitor - bandwidth etc (win7 or higher)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;perfmon&lt;/code&gt;  &amp;ndash;  a pretty decent performance monitor (vista or higher)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;services.msc&lt;/code&gt;  &amp;ndash;  windows service management&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compmgmt.msc&lt;/code&gt;  &amp;ndash;  computer management including all other management&lt;/li&gt;
&lt;li&gt;&lt;code&gt;eventvwr&lt;/code&gt;&amp;ndash;  windows event log viewer&lt;/li&gt;
&lt;li&gt;&lt;code&gt;appwiz.cpl&lt;/code&gt; &amp;ndash; windows programs and features management on control panel&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;most-common-and-useful-commands&#34;&gt;Most common and useful commands&lt;/h2&gt;

&lt;p&gt;This article won&amp;rsquo;t list all commands and all usages of each command. Here I will just choose the commands and some usages of command which are useful for most people. Some advanced command will be explained in Part-2.&lt;/p&gt;

&lt;p&gt;Before you start typing any cmd, I want to share a common mistake for most beginners, including myself. We always forget to use help command before we Google a solution, when we hit some impediment or roadblock. Actually help command is the most common built-in feature within any software or tool. Learn how to use help command or find the help information is first important when we are going to learn anything new.&lt;/p&gt;

&lt;h3 id=&#34;help&#34;&gt;help&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start command prompt and type &lt;code&gt;help&lt;/code&gt;. You will get a list of command which you can use, and short decription of each command.&lt;/li&gt;
&lt;li&gt;Use help command to see and learn other commands
&lt;code&gt;
C:\&amp;gt;help
C:\&amp;gt;help cd 
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;start&#34;&gt;start&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Start another &lt;code&gt;cmd&lt;/code&gt; window prompt.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;pwd&#34;&gt;pwd&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;pwd&lt;/code&gt; to display current directory. All commands will use current directory as default path input if the path parameter is not specified.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;dir&#34;&gt;dir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Displays a list of files and subdirectories in a directory.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;dir /a:h/a:d&lt;/code&gt; to display hidden subdirectories only&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /p/w&lt;/code&gt; to display many items per screen within wide list format&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:-s&lt;/code&gt; to display items sorted by size (biggest first)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:s&lt;/code&gt; to display items sorted by size (smallest first)&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;dir /o:dn&lt;/code&gt; to display items sorted by date/time  (oldest first) and name ( alphabetic)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cd-chdir&#34;&gt;cd / chdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Displays the name of or changes the current directory

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;cd&lt;/code&gt; to display the name of directory&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cd c:\windows&lt;/code&gt; to change to &lt;code&gt;c:\Windows&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;cd /d D:&lt;/code&gt; to change to d driver if you have d driver&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;tree&#34;&gt;tree&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;tree /f/a &amp;lt;path&amp;gt;&lt;/code&gt; to graphically display the folder structure of a drive or path.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ren-rename&#34;&gt;ren / rename&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;ren abc cba&lt;/code&gt; to ren file name from &amp;ldquo;abc&amp;rdquo; to &amp;ldquo;cba&amp;rdquo; if there is file named abc under current directory.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;*.md *.txt&lt;/code&gt; to ren all files under current directory with &lt;code&gt;md&lt;/code&gt; extension to &lt;code&gt;txt&lt;/code&gt; extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;md-mkdir&#34;&gt;md / mkdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Use &lt;code&gt;md a\b\c\d &amp;amp; tree a&lt;/code&gt; to create all directories once and display result as follow&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;current-directory&amp;gt;\a
|___b
    |___c
        |___d

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;copy&#34;&gt;copy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;touch test.txt &amp;amp; copy test.txt C:\User\&amp;lt;yourname&amp;gt;\&lt;/code&gt; to create a test.txt file and copy the test.txt to C:\User&amp;lt;yourname&amp;gt;\&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;move&#34;&gt;move&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;move a b&lt;/code&gt; to move folder &lt;code&gt;a&lt;/code&gt; into folder &lt;code&gt;b&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;rd-rmdir&#34;&gt;rd / rmdir&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;rd a&lt;/code&gt; to remove a empty directory &lt;code&gt;a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;rd /s a&lt;/code&gt; to remove a directory &lt;code&gt;a&lt;/code&gt; including all files and empty subdirectories within folder &lt;code&gt;a&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;del&#34;&gt;del&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;&lt;/strong&gt; : The item deleted by command &lt;code&gt;del&lt;/code&gt; can not be restored from &lt;strong&gt;Recyle Bin&lt;/strong&gt;. Please be careful before you use this command.&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;del&lt;/code&gt; to delete files or &lt;code&gt;del *.txt&lt;/code&gt; to delete all files with &lt;code&gt;txt&lt;/code&gt; extension&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cls&#34;&gt;cls&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Type &lt;code&gt;cls&lt;/code&gt; to clean the screen&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 6/7 -- desktop Setup</title>
      <link>https://harryho.github.io/os/centos-fedora-desktop/</link>
      <pubDate>Fri, 10 Jan 2014 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-fedora-desktop/</guid>
      <description>

&lt;h2 id=&#34;breif-history&#34;&gt;Breif History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Please find it from &lt;a href=&#34;https://harryho.github.io/blog/linux-history/#centos&#34;&gt;Brief history of Linux&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;bootable-usb-preparation&#34;&gt;Bootable usb preparation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Download dvd iso from url or torrent
Use Win32 Image Writer to create usb. ( Bootice is useful tool to reformat the USB as origin )&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-centos-on-virtual-machine&#34;&gt;Install CentOS on virtual machine&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Before you install, you are better to backup anything on the device which you are going to install, and chcek your internet is working properly.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;CentOS provide a friendly and nice installation process. If you choose VMWare or VirtulBox as machine, you can open &lt;a href=&#34;http://www.tecmint.com/centos-7-installation&#34;&gt;installation steps&lt;/a&gt; on your browser or use ipad /tablet to access this page. You just need to follow the instruction step by step, it will be done within an hour or more(it varies in computing power of PC).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;prepare-vm-for-centos&#34;&gt;Prepare VM for CentOS&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create a new virtual machine.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Type in the name of vm. e.g. CentOS&lt;/li&gt;
&lt;li&gt;Select the type of Linux&lt;/li&gt;
&lt;li&gt;You can choose RedHat(&lt;sup&gt;32&lt;/sup&gt;&amp;frasl;&lt;sub&gt;64&lt;/sub&gt; bit ) or something else. It doesn&amp;rsquo;t matter. We don&amp;rsquo;t use any built-in xxx.iso files from VirtualBox. Then click &lt;code&gt;Next&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Select the memory size for the CentOS. It is up  to you. I prefer 4GB, but 2GB is necessary. And then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Create a virtual hard drive now&amp;rdquo;, and then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select defaut VDI, then click &lt;code&gt;Next&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Dynamically allocated&amp;rdquo;, then click &lt;code&gt;Next&lt;/code&gt;.

&lt;ul&gt;
&lt;li&gt;Choose the location of CentOS. e.g. c:\vbox\centos\centos.vdi. Select the size of VDI file. At least 10G. I&amp;rsquo;d like to select 20 or more. Then a virtual machine of CentOS is created.&lt;/li&gt;
&lt;li&gt;Choose the location of CentOS. e.g. c:\vm\centos\centos.vmdk. Select the size of VMDK file. At least 10G. I&amp;rsquo;d like to select 20 or more. Then a virtual machine of CentOS is created.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Config the CentOS hardware setting on VirtulBox or VMWare.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;VirtualBox&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VirtualBox toolbar, there is a &lt;code&gt;Start&lt;/code&gt; button. Click &lt;code&gt;Start&lt;/code&gt;, then go the Storage item.&lt;/li&gt;
&lt;li&gt;Under the Storage Tree section, there is Empty CD icon. Click the Empty icon.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;Under the Attributes section, click the CD icon at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Start&lt;/code&gt;button on the toolbar.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;VMWare&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;On VMware, you can find CD/DVD button on the tab page of new virtual machine.&lt;/li&gt;
&lt;li&gt;Click the CD button at the end of the dropdown list of CD/DVD Drive. Choose the Unbuntu iso file which you download from Unbuntu.org. Click &lt;code&gt;OK&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Leave all the other setting as default. Click the &lt;code&gt;Power on this virtual machine&lt;/code&gt; option on the tab page.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;config-centos-default-setting&#34;&gt;Config CentOS default setting&lt;/h3&gt;

&lt;p&gt;After the CentOS starts, we can config the default setting of CentOS. Don&amp;rsquo;t be panic, the configuration envrionment is very nice. You don&amp;rsquo;t need to type any command line so far.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Prepare the installation.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose the language of CentOS. Then click Continue.&lt;/li&gt;
&lt;li&gt;On the Installation Summary screen, there is warning icon attached to the hard drive icon, which is under SYSTEM section with a lable &amp;ldquo;INSTALLATION DESTINATION&amp;rdquo;. Click that label.&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;You will see the partition is already done automatically. I&amp;rsquo;d like you to leave it as until you are familar with the CentOS. Then click Done button on the header.&lt;/li&gt;
&lt;li&gt;Leave the SOFTWARE SELECTION as Minimal Install; NETWORK &amp;amp; HOSTNAME as Not connected. Then click Begin Installation button.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Setup account&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Setup password of root account. Please remember the password. If you forget it you need to reset the root&amp;rsquo;s password. To do that you need to do a few things which depends on the CentOS version. As a beginner, please don&amp;rsquo;t make it too complicated.&lt;/li&gt;
&lt;li&gt;Create your account. e.g. harryporter Mark your account as administrator to save some effort. Please remember your password and don&amp;rsquo;t make it too complicated.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;The progress of installation is complete. Click Finish configuration button.
w$w4 d. After a few seconds, you will the Reboot button. Then click it.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;manage-centos-packages-and-software&#34;&gt;Manage CentOS packages and software&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;there are two management tools rpm and yum. To make it easy, we just talk about yum. It is a very handy tool. Comparing with the windows built-in program management tool, it is much powerful than that. It provides necessary functions for admin. If you need to maintain the Linux server, then you will use it in your daily task.&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;man yum&lt;/code&gt; to take a look the description of yum. You do not need to understand all usage of yum. Just have an overview is enough.&lt;/li&gt;
&lt;li&gt;There are a few useful and common yum commands.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum list installed | less
yum search &amp;lt;pacakge_name&amp;gt;
yum grouplist
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;install-centos-on-pc-or-laptop&#34;&gt;Install CentOS on PC or laptop&lt;/h2&gt;

&lt;h3 id=&#34;setup-network-via-cable&#34;&gt;Setup network ( via cable )&lt;/h3&gt;

&lt;p&gt;If you install a minimal version without network configuration, you will find you can not ping public domain. Here I am going to show you how to setup the connection.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;You can use &lt;code&gt;ip a&lt;/code&gt; command to check the status of all network interface.&lt;/li&gt;
&lt;li&gt;You will see all the state of interfaces would be DOWN OR UNKNOWN.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
# lo ****  qdisc pfifo_fast noqueue UNKNOWN
# eth0 **** qdisc pfifo_fast state DOWN

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Use &lt;code&gt;# ifup eth0&lt;/code&gt; to start the ech0 then you can access internet. It is a bit tedious to start the network service every time we reboot the system. Next step we will setup network service to start automatically after the system is up.&lt;/li&gt;
&lt;li&gt;There is a configuration file which can help you setup internet connection after the startup. Ususally the configuration is under this path &lt;code&gt;/etc/sysconfig/network-scripts&lt;/code&gt;, and file name would &lt;code&gt;ifcfg-eth&amp;lt;*&amp;gt;&lt;/code&gt;. So we check the real file name at first.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls /etc/sysconfig/network-scripts/ifcfg-*

# Following are sample of files which will sit in your system. 
/etc/sysconfig/network-scripts/ifcfg-eth0
/etc/sysconfig/network-scripts/ifcfg-lo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we need to update this file via nano or vi. If you have no any experience of vi, I recommended an interactive online tutorial for you. Just 20 mins, you can master basic vi usage.
&lt;a href=&#34;http://www.openvim.com/tutorial.html&#34;&gt;http://www.openvim.com/tutorial.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We use vi to open the config file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# vi /etc/sysconfig/network-scripts/ifcfg-eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will a setting below.
ONBOOT=no&lt;/p&gt;

&lt;p&gt;You just need to update it to ONBOOT=yes, then save it and reboot CentOS to test the result.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you reboot and login CentOS, you can use ping to test if your system can access internet, then configuration is updated successful.&lt;/p&gt;

&lt;h4 id=&#34;setup-wifi&#34;&gt;Setup Wifi&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Setup Wifi during the installation. After the installation, you will find the Wifi is not available on Cent OS&lt;/li&gt;
&lt;li&gt;Mount the DVD or iso file&lt;/li&gt;
&lt;li&gt;use yum to install the NetworkManager-wifi package&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum --disablerepo=\* install /path/to/dvd/Packages/NetworkManager-wifi* 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;multiple-boot-system-fedora-centos-redhat&#34;&gt;Multiple boot system ( Fedora, CentOS, Redhat )&lt;/h2&gt;

&lt;h3 id=&#34;partition-setup-for-multiple-os-installation&#34;&gt;Partition setup for multiple OS installation&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Fedora, CentOS and Redhat share the almost the same installation process.
Click on the &lt;code&gt;Installation Destination&lt;/code&gt; icon to change this to custom partitioning
Under the Other Storage Options, choose I will configure partitioning then click Done
Following is sample of partition setup of multiple boot system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;sda
  +----sda1        nfts               500M         Windows recovery
  +----sda2        efi       /boot    100M         grub2 , Windows boot manager
  +----sda3                  /        10M            
  +----sda4        ntfs      /      40000M         Window 7/8/10
  +----sda5                  swap   &amp;lt;Double size of your RAM size&amp;gt;   
  +----sda6        ext4      /      20000M         Ubuntu 14 desktop
  +----sda7        ext4      /      20000M         Fedora 20 desktop           
  +----sda8        ext4      /      20000M         CentOS 6 desktop
  +----sda9        ext4      /      20000M         OpenSuse desktop
  + ...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;troubleshooting&#34;&gt;Troubleshooting&lt;/h3&gt;

&lt;h3 id=&#34;fedora-boot-error&#34;&gt;Fedora boot error&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Please check the grub.cfg if you get booting error&lt;/li&gt;
&lt;li&gt;You can try following command to boot Fedora from Grub menu&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;linux /boot/vmluz-x.x.x-x.x.x
initrd /boot/intrd-plymouth.img
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Brief history of Linux</title>
      <link>https://harryho.github.io/blog/linux-history/</link>
      <pubDate>Thu, 10 Jan 2013 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/blog/linux-history/</guid>
      <description>

&lt;h1 id=&#34;linux&#34;&gt;Linux&lt;/h1&gt;

&lt;h3 id=&#34;breif-history&#34;&gt;Breif History&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;When we are talking about Linux, we cannot miss its ancesor&amp;ndash;Unix. Unix is one of the most popular operating systems worldwide because of its large support base and distribution. It was originally developed at AT&amp;amp;T as a multitasking system for minicomputers and mainframes in the 1970&amp;rsquo;s, but has since grown to become one of the most widely-used operating systems anywhere, despite its sometimes confusing interface and lack of central standardization.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Many hackers feel that Unix is the Right Thing&amp;ndash;the One True Operating System. Hence, the development of Linux by an expanding group of Unix hackers who want to get their hands dirty with their own system.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Linux was originally developed as a hobby project by Linus Torvalds. It was inspired by Minix, a small Unix system developed by Andy Tanenbaum. The first discussions about Linux were on the Usenet newsgroup, comp.os.minix. These discussions were concerned mostly with the development of a small, academic Unix system for Minix users who wanted more.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Linux is a complete multitasking, multiuser operating system, as are all other versions of Unix. This means that many users can log into and run programs on the same machine simultaneously.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;linux-distro&#34;&gt;Linux distro&lt;/h3&gt;

&lt;p&gt;A Linux distribution (often abbreviated as distro) is an operating system made from a software collection, which is based upon the Linux kernel and, often, a package management system. Linux users usually obtain their operating system by downloading one of the Linux distributions, which are available for a wide variety of systems ranging from embedded devices (for example, OpenWrt) and personal computers (for example, Debian, Fedora) to powerful supercomputers (for example, Rocks Cluster Distribution).&lt;/p&gt;

&lt;p&gt;You can check out the more of each Linux distro from &lt;a href=&#34;https://distrowatch.com/&#34;&gt;DistroWatch&lt;/a&gt;. The top 20 ranking Linux distro changes dramatically in last few years. Almost every year, some amazing Linux distro emerged into top 10, even top 5 list, but there are some distroes which are quite stable, and stay into top 10 to 20 over last decade.&lt;/p&gt;

&lt;p&gt;Here we just give the brief history of some stable and most popular distroes. It means the article will only cover the big players in the linux world. Some special and awesome distroes are assumed as minority, such as, Pentoo, Arch Linux, etc. so we won&amp;rsquo;t cover those distroes.&lt;/p&gt;

&lt;h1 id=&#34;debian-ubuntu&#34;&gt;Debian/Ubuntu&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Ubuntu is one of a number of Linux distributions. The source code that makes up the Ubuntu distribution originates from another, much older Linux distribution known as Debian (so called because it was started by two people named Debra and Ian). Debian is still a widely respected operating system but came under criticism for infrequent updates and less than user friendly installation and maintenance (though these areas have shown improvement recently).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A South African internet mogul (who made his fortune selling his company to VeriSign for around $500 million) decided it was time for a more user friendly Linux. He took the Debian distribution and worked to make it a more human friendly distribution which he called Ubuntu. He subsequently formed a company called Canonical Ltd to promote and provide support for Ubuntu.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The word &amp;ldquo;Ubuntu&amp;rdquo; is an ancient Zulu and Xhosa word that means &amp;ldquo;humanity to others&amp;rdquo;. Ubuntu also means &amp;ldquo;I am what I am because of who we all are&amp;rdquo;.The Ubuntu operating system brings the spirit of Ubuntu to the world of computers.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;fedora-centos-redhat&#34;&gt;Fedora/CentOS/Redhat&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;Fedora&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Fedora has received many updates and individual releases over the years. It is a playground for new functionality. Often new technology is found here. It can be compared with other distributions like Arch Linux, except that it is slightly less aggressive in deploying the latest software components for everything. The difference between Fedora and other distributions is the corporate support by Red Hat. That means that professional developers can work on projects that are first tested in Fedora. A lot of these components may then also be picked up by other distributions.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Red Hat Enterprise Linux (RHEL)&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;The Enterprise product of Red Hat is named RHEL for short. The main difference with Fedora is that is focused on companies which prefer stability. The most business-critical services are deployed on this platform. Battle-tested components might finally end up in this distribution.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;CentOS&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;CentOS as known as the free enterprise version of RedHat Linux, is one of most popular VPS or dedicated linux. Maybe you are using ubuntu or mint for your development, but many companies or institutes still choose CentOS as their production server, even full stack. Grasp the basic setup CentOS for website or web app or web service is still quite important.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Now CentOS is much more easy to setup for different purpose. Comparing with 10 years ago or more, even you use graphic UI to setup, you still will come across some weird glitch. CentOS has different group for you to install. Every group includes bunch of packages, and it focus on some specific purpose. I believe they meet most IT infra&amp;rsquo;s requirement. So you don&amp;rsquo;t need do much research, and work around to figure out how to build those packages together. Just use following command you can get all group list.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&#34;suse-opensuse&#34;&gt;Suse / OpenSuse&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SUSE Linux is a computer operating system. It is built on top of the open source Linux kernel and is distributed with system and application software from other open source projects. SUSE Linux is of German origin, basically an acronym of &amp;ldquo;Software und System-Entwicklung&amp;rdquo; (software and systems development), and was mainly developed in Europe. The first version appeared in early 1994, making SUSE one of the oldest existing commercial distributions. It is known for its YaST configuration tool.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Novell bought the SUSE brands and trademarks in 2003. Novell, one of the founding members of the Open Invention Network, decided to make the community an important part of their development process by opening widely the distribution development to outside contributors in 2005, creating the openSUSE distribution and the openSUSE Project. Novell employed more than 500 developers working on SUSE in 2004. On 27 April 2011, Novell (and SUSE) were acquired by The Attachmate Group, which made SUSE an independent business unit. Later, in October 2014, the entire Attachmate Group, including SUSE, was acquired by the British firm Micro Focus International. SUSE continues to operate as an independent business unit.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Better practice in Java, Part-1</title>
      <link>https://harryho.github.io/code/better-practice-in-java-1/</link>
      <pubDate>Sat, 10 Dec 2011 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/code/better-practice-in-java-1/</guid>
      <description>

&lt;h3 id=&#34;prelude&#34;&gt;Prelude&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Java is one of my favorite OOP language. I want to keep the Java good practice and pitfall as a series. Pitfall will cover most misunderstanding of Java and how to avoid them. As we know, there is no medicine as mighty purpose. So some good practice will be obsolete or replaced by some advanced solution, because new problem push the IT world keep looking for better solution to solve such problems. In my opinion, it is most challenged but excited part of IT.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;refactor-constant-variables-with-enum&#34;&gt;Refactor constant variables with Enum&lt;/h3&gt;

&lt;p&gt;Enum was a great improvement in Java 1.5. From that more and more developer abandom the interface or abstract class as constant variable container.&lt;/p&gt;

&lt;p&gt;Before Java 1.5 you will following coding in many Java program.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;    // Use interface or abstract class as constant variable container
    public interface Country {
         public static final String AU = &amp;quot;Australian&amp;quot;;
         public static final String UK = &amp;quot;United Kingdom&amp;quot;; 
         public static final String US = &amp;quot;United State&amp;quot;; 
    }
    
    public class Util {
         
        public static String getLanguageCode(String country) {
    
            String languageCode = &amp;quot;en&amp;quot;;
            switch (country) {
                case Country.AU:
                    languageCode = &amp;quot;en-au&amp;quot;;
                    break;
                case Country.UK:
                    languageCode = &amp;quot;en-uk&amp;quot;;
                    break;
                case Country.US:
                    languageCode = &amp;quot;en-us&amp;quot;;
                    break;
            }
            return languageCode;
        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Above program looks very good. Please take a close look and check it carefully. You will find the program will never return &lt;strong&gt;&lt;em&gt;en-au&lt;/em&gt;&lt;/strong&gt;, since there is a typo in the constant AU. It should be &lt;strong&gt;&lt;em&gt;Australia&lt;/em&gt;&lt;/strong&gt; instead of &lt;strong&gt;&lt;em&gt;Australian&lt;/em&gt;&lt;/strong&gt;. I believe many developers have short sight problem like me, and it happened again and again. Using string as constant flag is not a good option, but there is no other better solution before Java 1.5.&lt;/p&gt;

&lt;p&gt;After Java 1.5, you will see the change below. Enum is the best container for constants. It can help you check the program time. Meanwhile, it can simplfy your coding.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// Use Enum as constant variable container
public enum  Country {
    Australia, UnitedKingdom, UnitedState
}

public class Util {
        
    public static String getLanguageCode(Country country) {

        String languageCode = &amp;quot;en&amp;quot;;
        switch (country) {
            case Australia:
                languageCode = &amp;quot;en-au&amp;quot;;
                break;
            case UnitedKingdom:
                languageCode = &amp;quot;en-uk&amp;quot;;
                break;
            case UnitedState:
                languageCode = &amp;quot;en-us&amp;quot;;
                break;
        }
        return languageCode;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you program will not be by any unintentional typo, since it will throw you compile error before you run the application. If you haven&amp;rsquo;t refactor your static constants container, it is time to improve it now.&lt;/p&gt;

&lt;p&gt;(Above were written in 2006. After Java 1.7, I found it can be improved with new feature of Java 1.7 )&lt;/p&gt;

&lt;p&gt;After Java Java 1.7, there are some new features. One of these new features is Switch statement. Now it supports String. It is a great for Java developer.&lt;/p&gt;

&lt;p&gt;With this new feature, the old Enum can be enhanced and the Util class can provide more handy methods (Overload method getLanguageCode) for development.&lt;/p&gt;

&lt;p&gt;New Enum class, which can support flexible requirement. In the early version of Enum, the toString method only will return exactly the specified constanct name. Now the Enum can be override with toString to return different constant name.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// It can return customized name and simplify coding 
public enum Country {
    AU(&amp;quot;Australia&amp;quot;, &amp;quot;au&amp;quot;,&amp;quot;en-au&amp;quot;), 
    UK(&amp;quot;United Kingdom&amp;quot;, &amp;quot;en-uk&amp;quot;),
    US(&amp;quot;United State&amp;quot;, &amp;quot;us&amp;quot;,&amp;quot;en-us&amp;quot;);

    String countryName;
    String countryCode;
    String languageCode;
    
    private Country(String name, String code) {
        countryName = name;
        countryCode = code;
    }

    public String getCode() {
        return countryCode;
    }
    
    public String getLanguageCode() {
        return languageCode;
    }
    
    @Override
    public String toString() {
        return countryName;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The Uitl class can convert any country name or country code to Enum Country, vice versa. Now developer can seamless convert the String from UI to the Enum, since on the UI, usually the country name will Australia or United Kingdom instead of just AU or UK. For coding, use AU or UK can simplify coding and is friendly to developer.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Util {
        
    public static Country convertCountryNameOrCode(String nameOrCode ) {
        
        Country country = null;
        switch (nameOrCode) {
            case &amp;quot;au&amp;quot;:
            case &amp;quot;AU&amp;quot;:
            case &amp;quot;Australia&amp;quot;:
                country = Country.AU;
                break;
            case &amp;quot;uk&amp;quot;:
            case &amp;quot;UK&amp;quot;:  
            case &amp;quot;United Kingdom&amp;quot;:
                country = Country.UK;
                break;
            case &amp;quot;us&amp;quot;:
            case &amp;quot;US&amp;quot;:  
            case &amp;quot;United State&amp;quot;:
                country = Country.UK;
                break;
        }
        return country;
    }
    
    public static String getCountryName(  Country country ){
        String countryName = null;
        switch (country){
            case AU:
                countryName = Country.AU.toString();
                break;
            case US:
                countryName = Country.UK.toString();
                break;
            case UK:
                countryName = Country.US.toString();
                break;
            default:
                System.err.println(&amp;quot;Unknow Country&amp;quot;);
                assert false;
                break;
        }
        return countryName;
    }

    
    public static String getCountryCode(  Country country ){
        String countryCode = null;
        switch (country){
            case AU:
                countryCode = Country.AU.getCode();
                break;
            case US:
                countryCode = Country.UK.getCode();
                break;
            case UK:
                countryCode = Country.US.getCode();
                break;
            default:
                System.err.println(&amp;quot;Unknow Country&amp;quot;);
                assert false;
                break;
        }
        return countryCode;
    }
        
    public static String getLanguageCode(Country country) {
    
            String languageCode = &amp;quot;en&amp;quot;;
            switch (country) {
                case AU:
                    languageCode = Country.AU.getLanguageCode() ;
                    break;
                case UK:
                    languageCode =  Country.UK.getLanguageCode();
                    break;
                case US:
                    languageCode =  Country.US.getLanguageCode();
                    break;
            }
            return languageCode;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you are planning to refactor your code, please give a second thought. It is time to dump to try these new features.&lt;/p&gt;

&lt;h3 id=&#34;good-stuff-from-not-shiny-java-7&#34;&gt;Good stuff from not shiny Java 7&lt;/h3&gt;

&lt;p&gt;When the Java 7 was released, I was kind of disappointed without lamda, jigsaw as most developers, but when I tried new Path, Files API, I found that is great improvement. The enhancement of this new IO is really useful. It save so much effort for Java developer.&lt;/p&gt;

&lt;p&gt;To be hoenst, before Java 1.7, Coding file manipulation in Java is very headache task. I say &amp;ldquo;headache&amp;rdquo; it doesn&amp;rsquo;t mean it is difficult. Just comparing with other program lanugage, you had to take much more effort to take care of the boilerplate, and all are tedious job. That is why sometimes I prefer cmd in Window or bash in Linux to complete the task instead of using Java to handle file manipulation. Now I think I can refactor old file manipulation coding and make it much more elegant.&lt;/p&gt;

&lt;h4 id=&#34;better-file-visitor-implementation&#34;&gt;Better file visitor implementation&lt;/h4&gt;

&lt;p&gt;Following is simple customizaed file visitor which has been the part of my old util.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.io.IOException;
import java.nio.file.FileVisitResult;
import java.nio.file.Path;
import java.nio.file.SimpleFileVisitor;
import java.nio.file.attribute.BasicFileAttributes;

public class CustomFileVisitor extends SimpleFileVisitor&amp;lt;Path&amp;gt; {
    @Override
    public FileVisitResult postVisitDirectory(Path dir , IOException arg1) throws IOException {
        System.out.println( &amp;quot;post visit dir :  &amp;quot;+  dir );
        return FileVisitResult.CONTINUE;
        }

        @Override
    public FileVisitResult preVisitDirectory(Path dir , IOException arg1) throws IOException {
        System.out.println( &amp;quot;post visit dir :  &amp;quot;+  dir );
        return FileVisitResult.CONTINUE;
        }

    @Override
    public FileVisitResult visitFile(Path file, BasicFileAttributes attr)
            throws IOException {
         if ( attr.isSymbolicLink() )
          { System.out.println( &amp;quot; symbolic link  :  &amp;quot;+  file  );
          
          }else if (  attr.isSymbolicLink() ){            
              System.out.println( &amp;quot; regular file : &amp;quot;+ file );
          }
        return FileVisitResult.CONTINUE;
    }
     
    @Override
    public FileVisitResult visitFileFailed(Path file, IOException exc)
            throws IOException {        
         System.err.println( exc.getMessage());
        return FileVisitResult.CONTINUE;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use this customized  is so easy. Just 3 lines coding you can test it by yourself.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        CustomFileVisitor fileVisitor = new CustomFileVisitor();
        Path path = Paths.get(&amp;quot;TestDir&amp;quot;);
        Files.walkFileTree(path, fileVisitor);
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;arm&#34;&gt;ARM&lt;/h4&gt;

&lt;p&gt;Automatic resource management is another attractive features of Java 7 and project coin. As name itself implies that now JVM is going to be handling all the external resource and make programmer free to bother about resource management, especially for people like me miss the &lt;code&gt;using&lt;/code&gt; statement in C#. Sometimes I wonder why Java is such stubborn not to learn some good features from C#. As we know, C# comes after Java and copies most concept at the early stage, but it really pushed Object Oriented Concept (OOC) to a new level and inspired Java world a lot with its many good feature. I really hope someday I can code in Java as simple as C#. Wise men learn by other men&amp;rsquo;s mistakes; fools by their own.&lt;/p&gt;

&lt;p&gt;In the past, java programmers use any external resources like file, printer or any devices to close after my program execution complete. Normally we close the resources which we have open in beginning of our program or we decide that if program finish normally how to manage the resource or if our program finish abnormally how to close the resource. Following are comparison of old and new style.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Snippet of old style&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;FileInputStream exchangeCurrencyReader= null;
FileOutputStream exchangeCurrencyWriter = null;
try {
    exchangeCurrencyReader = new FileInputStream(&amp;quot;AUDvsUSD.txt&amp;quot;);
    exchangeCurrencyWriter = new FileOutputStream(&amp;quot;AUDvsUSD.txt&amp;quot;);
    int var;
    while (var = exchangeCurrencyReader.read()) != -1)
        exchangeCurrencyWriter.write(var);
} 
finally {
    if (exchangeCurrencyReader!= null)
        exchangeCurrencyReader.close();
    if (exchangeCurrencyWriter!= null)
        exchangeCurrencyWriter.close();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Code in Java 7&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;try ( FileInputStream exchangeCurrencyReader = new FileInputStream(&amp;quot;AUDvsUSD.txt&amp;quot;);
    FileOutputStream exchangeCurrencyWriter = new FileOutputStream(&amp;quot;AUDvsUSD.txt&amp;quot;)){
      int var;
      while((var= exchangeCurrencyReader.read()) != -1 )
            exchangeCurrencyWriter.write();
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the code above we have declare two file stream one is input file we are reading from one file and writing to another file. After the whole process both streams will be closed automatically either the code has been executed properly or not. Both exchangeCurrencyReader.close() and exchangeCurrencyWriter.close() methods will be called automatically which is the best part of ARM. We should not miss good part from Java 7.&lt;/p&gt;

&lt;h4 id=&#34;new-file-change-monitor-service&#34;&gt;New file change monitor service&lt;/h4&gt;

&lt;p&gt;After some homework for new features of Java 7, I am tring to use file watch serviice from Java 7 to replace old file monitor program. It is great and quite simple to use. I have updated to production.&lt;/p&gt;

&lt;p&gt;Usually most Java based system somehow needs such monitor function, there will be separate process or thread to run this service, and there should be a call back handler triggered by this service. Everytime there is any file amended, the service will trigger the call back handler to complete some tasks.&lt;/p&gt;

&lt;p&gt;Following is sample of file watching service. I removed call back part which is relevant to the business.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.nio.file.FileSystems;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardWatchEventKinds;
import java.nio.file.WatchEvent;
import java.nio.file.WatchKey;
import java.nio.file.WatchService;
import java.util.HashMap;
import java.util.Map;

public class FileWatchService {

    public static void watchFileUpdate() {
        try (WatchService service = FileSystems.getDefault().newWatchService()) {
            Map&amp;lt;WatchKey, Path&amp;gt; eventMap = new HashMap&amp;lt;&amp;gt;();
            Path dir = Paths.get(&amp;quot;TestDir&amp;quot;);

            eventMap.put(dir.register(service, StandardWatchEventKinds.ENTRY_MODIFY),dir);

            WatchKey key;
            do {
                key = service.take();
                Path eventPath = eventMap.get(key);
                for (WatchEvent&amp;lt;?&amp;gt; event : key.pollEvents()) {
                    WatchEvent.Kind&amp;lt;?&amp;gt; kind = event.kind();
                    Path path = (Path) event.context();
                    System.out.println(eventPath + &amp;quot; : &amp;quot; + kind + &amp;quot;  : &amp;quot; + path);
                }
            } while (key.reset());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public static void main (String [] args ){
       watchFileUpdate();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The sample above shows one kind of events. Actually if you check the API doc, there are another two kinds of event. One is  StandardWatchEventKinds.ENTRY_CREATE , the other is  StandardWatchEventKinds.ENTRY_DELETE. These events cover almostly all business requirements.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>