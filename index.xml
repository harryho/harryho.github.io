<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_index on Hello World</title>
    <link>https://harryho.github.io/index.xml</link>
    <description>Recent content in _index on Hello World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2015, harryho; All rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Jun 2017 16:56:21 +1100</lastBuildDate>
    <atom:link href="https://harryho.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Angular vs React vs Vue</title>
      <link>https://harryho.github.io/article/vue-ng-react/</link>
      <pubDate>Wed, 07 Jun 2017 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/vue-ng-react/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;Angular, React, Vue as most popular JavaScript frameworks at present, we just discuss Angular 1.x, Angular 2 / 4, React 15+ (Redux), and Vue 2+ here. There is no Angular 3, if you have not noticed before.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;client-side-is-a-battle-field&#34;&gt;Client side is a battle field&lt;/h2&gt;

&lt;p&gt;In past 6–8 years, the Restful API has been accepted as one of standard web interfaces for most web applications, solution architect can simply add REST API on the top of existing web layer or business layer to provide REST API and support multiple client devices. So the developers can continue to develop or maintain system with their favorite programming language, framework or technical stacks.&lt;/p&gt;

&lt;p&gt;On the contrary, it is a completely different story on the client-side, there are tons of variant JavaScript frameworks emerged in the last 10 years. It is good to have more options, but it is a nightmare for web developers who are working in such battle field, because they need to try a lot of different stuff to make a decision, especially when the project schedule is tight, it makes tech lead or architect quite stressed. Something becomes much worse is when the development team try to adopt new framework for the new project, it is not easy to work out which framework we should choose.&lt;/p&gt;

&lt;p&gt;Don’t forget there is another big risk to adopt new programming language(ES 6 or Typescript) with the new framework, as well as new development, build and test tool, if the team has no enough skills or experience. As solution architect, they need to think it through for development team, and also consider if the team can really pick it up quickly. That is why we have to compare those frameworks here before we make a decision.&lt;/p&gt;

&lt;h2 id=&#34;performance-is-not-a-priority-or-crucial-criterion-for-choosing-a-framework&#34;&gt;Performance is not a priority or crucial criterion for choosing a framework&lt;/h2&gt;

&lt;p&gt;We can find lots of comparison between those frameworks, and so many of them are related to performance, programming language, design pattern, etc. Actually many web applications in the world are just small to median size web application, we don’t need to build the web application as Google, Facebook or Twitter. In my opinion, the performance of framework is the not critical benchmark, at lease it is not first priority which we need to consider if it is right for the team. Except performance, we have more concern on tech stacks, community and ecosystem involved with the framework, which have more impact on team’s productivity and system’s maintainability.&lt;/p&gt;

&lt;h2 id=&#34;the-difference-of-those-framework&#34;&gt;The difference of those framework&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s look into the frameworks and list the difference of these frameworks.&lt;/p&gt;

&lt;h3 id=&#34;basic-tech-stacks&#34;&gt;Basic tech stacks&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tech Stacks&lt;/th&gt;
&lt;th&gt;Angular 1.x&lt;/th&gt;
&lt;th&gt;Angular 2 / 4&lt;/th&gt;
&lt;th&gt;React 1.5 (Redux)&lt;/th&gt;
&lt;th&gt;Vue 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Vanilla JS&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ES 6&lt;/td&gt;
&lt;td&gt;1.5+&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;TypeScript&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Supported&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;MVC&lt;/td&gt;
&lt;td&gt;1.2-1.4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Component-Based&lt;/td&gt;
&lt;td&gt;1.5+&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Shadow DOM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Virtual DOM&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Immutable state&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;Yes:  Programming language which the framework uses.&lt;/li&gt;
&lt;li&gt;Supported: Programming language which the framework supports.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;cool-stuff-is-not-always-the-best&#34;&gt;Cool stuff is not always the best&lt;/h3&gt;

&lt;p&gt;We have seen so many cool stuff which are finally abandoned in the past, the Silverlight is one of such examples. We shouldn’t choose new framework because it looks cool or it is the latest one. We choose the new one because it really can solve our problem, improve our productivity and quality in the long run. Don’t forget there is always some cost to adopt new things. We need to balance the cost and outcome of the technical investment, and we need to work it out if it is right time to do it.&lt;/p&gt;

&lt;h3 id=&#34;programming-language-is-still-the-barrier&#34;&gt;Programming language is still the barrier&lt;/h3&gt;

&lt;p&gt;If we need to use new programming language, we have to evaluate with the existing development team. Even ES6 or TypeScript (TS) claims it is compatible to Vanilla JS, but when you start to look into new framework or sample project, which are coded with ES6 or TS, it still makes you so confused if you are not familiar with such syntax. It will significantly impact the efficiency of learning new framework. So there is always a learning curve, which we cannot ignore, to code something in a new programming language.&lt;/p&gt;

&lt;p&gt;Someone complaints all those JS frameworks makes the build process much more complicated than the old web frameworks, because of the new programming language. Does it really matter? The short answer is Yes, but we are not going discuss the advantage in details here. If your team comes from .Net Web Form or Java MVC background, it would be a steep curve for the team to pick up ES6 or TypeScript and Component-based framework, not to mentioned new build and test tools.&lt;/p&gt;

&lt;p&gt;No wonder a few .Net teams were struggling with Node stack integration on Visual Studio, especially when the team members have no Node.js experience. So we need the whole team to discuss the difficulties before we adopt new technology and framework. It is helpful to make sure the team has the same view, and it is also important to plan our training and decide how to transform development team step by step.&lt;/p&gt;

&lt;h3 id=&#34;where-to-start&#34;&gt;Where to start&lt;/h3&gt;

&lt;p&gt;For the team which comes with Web Form, with Vanilla JS background, we can start with Angular 1.x (Up to 1.4) on some small projects, or we can build something training project, because the MVC pattern is very similar to their previous coding experience.&lt;/p&gt;

&lt;p&gt;One more thing, I have to mention is the Angular 1.x application can be built without any Node.js tools, such as Gulp, Grunt, Webpack, etc. It makes the team feel comfortable to adopt it without prior experiences. Also, it gives the team some buffer to organize the training to pick up Node.js tools for the future.&lt;/p&gt;

&lt;p&gt;For the team which has experience of Angular 1.2 ~ 1.4, they can choose to stay on later version of Angular 1.x, e.g. Angular 1.5+, and they can start to convert coding pattern from MVC to Component-based. After that, if the team is planning to move to Angular 2 / 4, it is better to do some TypeScript training. In my view, so far the ecosystem for Angular 2 / 4 is still under development. It is a bit risky to use Angular 2 / 4 to build the real-world production. There are quite many gotchas which you have to figure out on your own.&lt;/p&gt;

&lt;p&gt;For the team which has TypeScript or ES6 experience, they can choose what they prefer. They can spend more time on UI integration. There are a few customized UI package for bespoke framework. That is what we are going to discuss in the next.&lt;/p&gt;

&lt;h3 id=&#34;responsive-ui-library-support&#34;&gt;Responsive UI library support&lt;/h3&gt;

&lt;p&gt;To build a real-world application, we need to integrate some popular responsive UI libraries instead of building all styles on our own. Let’s take a look the support of Bootstrap or Material-Design for different frameworks.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;UI library&lt;/th&gt;
&lt;th&gt;Angular 1.x&lt;/th&gt;
&lt;th&gt;Angular 2 / 4&lt;/th&gt;
&lt;th&gt;React 1.5 (Redux)&lt;/th&gt;
&lt;th&gt;Vue 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bootstrap 3&lt;/td&gt;
&lt;td&gt;ui-bootstrap (Very Good)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;react-bootstrap(Very Good)&lt;/td&gt;
&lt;td&gt;VueStrap* (Very Good)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Bootstrap 4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;ui-bootstrap (Alpha)&lt;/td&gt;
&lt;td&gt;In progress&lt;/td&gt;
&lt;td&gt;BootstrapVue (Good)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Material Design&lt;/td&gt;
&lt;td&gt;Materialize (Good)&lt;/td&gt;
&lt;td&gt;Angular Material(Basic)&lt;/td&gt;
&lt;td&gt;Material-UI (Good)&lt;/td&gt;
&lt;td&gt;Vuetify (Very Good)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;VueStrap: Please use the &lt;a href=&#34;https://github.com/wffranco/vue-strap&#34;&gt;Willen&amp;rsquo;s fork&lt;/a&gt; for Vue 2.&lt;/li&gt;
&lt;li&gt;Libraries in the table above has been tested or used in some projects.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From what we can see now, the Bootstrap 4 is similar to Material-Desgin. So it is good news for developer. They just need to pick their favor, and they will always get analogical effect.&lt;/p&gt;

&lt;p&gt;Actually there are tons of UI libraries / CSS framework available on Github, so many are platform neutral framework, i.e. It can be integreated with Angular, React or Vue. Be honest, integration is always not easy, it will take you or your team some extra effort. Keep it in mind, to integrate platform neutral framework you need to take care of dependencies and build, test tools on your own, such as webpack or yarn.&lt;/p&gt;

&lt;h3 id=&#34;stable-api&#34;&gt;Stable API&lt;/h3&gt;

&lt;p&gt;Against to Angular 1.x, the Angular 2 is completely a new animal. Angular 4 comes with some breaking changes, which breaks a few Angular 2 dependencies (third parties). Since the API of Angular 4 is still under active development, we cannot use it for production. According to Angular team’s announcement, they want to fix all Angular-2’s bugs and issues in Angular 4 and keep all built-in libraries sync to Angular 4. It will take a long while to get things ready. If your project uses Angular 1.2–1.4, I’d like to suggest you to keep it, until Angular 4 is finalized.&lt;/p&gt;

&lt;p&gt;React-Redux is much more popular than React-Flux recently, but it doesn’t means it is better than React-Flux pattern. In my opinion, React-Flux is much more straight and close to original React design. If you ready use React-Flux, you have better to stick with it.&lt;/p&gt;

&lt;p&gt;Vue 2 comes with some breaking changes. There is migration guide for Vue 1.x to Vue 2. It doesn’t seem very different. Vue 2 is ready for production.&lt;/p&gt;

&lt;h3 id=&#34;how-to-compare&#34;&gt;How to compare&lt;/h3&gt;

&lt;p&gt;In order to compare those frameworks properly, I use those frameworks to create a small real-world web application, which has built-in authentication support for the back-end API service, and integrated with some responsive UI framework, e.g. Bootstrap or Material-Design.&lt;/p&gt;

&lt;p&gt;You will find there is no project built on the Angular 1.x, because my team and me have done a lot real-world application upon Angular 1.x. We know Angular 1.x, inlcuding its ecosystem is quite reliable, which you replicate any web application with this framework.&lt;/p&gt;

&lt;p&gt;On the other hand, Angular 1.x is built with Vanilla JS, i.e. you don’t need transpiler to build Angular 1.x app, so it is a bit unfair to compare with the framework which is coded with ES 6 or TypeScript, because the build tool and setup for Angular 1.x is easier than others. I mention the Angular 1.x here to remind them, actually there is other option for the team comes from traditional MVC stacks. It would be proper way to transform the team smoothly.&lt;/p&gt;

&lt;h3 id=&#34;following-are-the-projects-and-related-screenshots&#34;&gt;Following are the projects and related screenshots&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-angular4-crm/&#34;&gt;Angular 4 CRM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-2.jpg&#34; alt=&#34;Screenshot-Angular4Crm&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-react-crm/&#34;&gt;React CRM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-2.jpg&#34; alt=&#34;Screenshot-React-Crm&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-vue2-crm/&#34;&gt;Vue 2 CRM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-2.jpg&#34; alt=&#34;Screenshot-Vue2crm&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;comparison-of-projects-for-different-framework&#34;&gt;Comparison of projects for different framework&lt;/h3&gt;

&lt;p&gt;Let’s go back to projects above and take a look. Basically they are implemented almost the same features as real-world simple CRM application.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Authentication &amp;amp; Token support for Restful API&lt;/li&gt;
&lt;li&gt;Customer CRUD functions&lt;/li&gt;
&lt;li&gt;Order CRUD functions&lt;/li&gt;
&lt;li&gt;Dashboard including two charts (Bar/Line/Doughnut)&lt;/li&gt;
&lt;li&gt;Integrate with Material Design (Angular project includes bootstrap)&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Angular 4 CRM&lt;/th&gt;
&lt;th&gt;React Redux CRM&lt;/th&gt;
&lt;th&gt;Vue 2 CRM&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Dependencies&lt;/td&gt;
&lt;td&gt;22&lt;/td&gt;
&lt;td&gt;13&lt;/td&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Code Size&lt;/td&gt;
&lt;td&gt;135KB&lt;/td&gt;
&lt;td&gt;113KB&lt;/td&gt;
&lt;td&gt;49KB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Effort&lt;/td&gt;
&lt;td&gt;72 hrs&lt;/td&gt;
&lt;td&gt;80 hrs&lt;/td&gt;
&lt;td&gt;48hrs&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;ul&gt;
&lt;li&gt;Dependencies: Any dependencies for test, distribute are excluded&lt;/li&gt;
&lt;li&gt;Code Size: It includes some customized CSS file, but image files are excluded&lt;/li&gt;
&lt;li&gt;Effort: The effort for learning curve has been eliminated, but R&amp;amp;D effort cannot be excluded.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Firstly, I have to explain why React project took more effort than the other two projects. Comparing with React, the Angular 4 and Vue 2 are a bit new, i.e. there are more available packages or libraries for React on-line. As I mentioned before, it is not a good news. We need to try more different to figure out the pros and cons of different solutions. Unfortunately, we cannot exclude such R&amp;amp;D effort when we build these projects.&lt;/p&gt;

&lt;p&gt;According to above the dependencies, code size, we can see the project based on Vue.js is much simpler than other two projects.In my view, Vue 2 is my favor for next new project. It combines advantages of Angular and React. It also addresses some problems which we found in Angular and React.&lt;/p&gt;

&lt;p&gt;Vue.js uses Virtual DOM, which avoids many dirty checking in Angular 1.x, and the complicated coding pattern (Observable &amp;amp; ReactiveJs, IMO) in Angular 2 / 4.&lt;/p&gt;

&lt;p&gt;Vue.js makes the handling of immutable and mutable variables much easier than React. Its template is very handy and straight. It is the same as regular HTML, it is very easy to convert the mock-up HTML into Vue template, especially when you need to customize you styles. Vue’s template and directive is similar to Angular.&lt;/p&gt;

&lt;p&gt;Vue.js is not just cool, it is elegant and simple. I am pretty sure if you have Angular or React background, you will pick it up in a couple hours or days. Once you start to use it, you won’t want to go back. Its official routing system is quite stable and easy to use. Compare with Angular-Router or React-Router, it is much more reliable.&lt;/p&gt;

&lt;p&gt;Generally, Material-Design libraries for React is not handy as other customized version for Angular or Vue. The special coding style of JSX needs to convert all CSS and HTML into JSX format. To be honest, I am not so convinced by React’s JSX, because it is not straight as final HTML or CSS. Compare to other framework, it is a bit verbose and inconvenient. We cannot simply copy the style code from the browser’s dev tool when we debug it on the browser. i.e. You need to put more effort to make your page pretty.&lt;/p&gt;

&lt;p&gt;Angular’s Material-Design library has very limit components. To build a real-world application you need to add another UI library to supplement the former missing components. Last but not least, the Vuetify is the best Material-Design so far we have found and tested.&lt;/p&gt;

&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;

&lt;p&gt;Before we make any conclusion, we have to be aware the world keeps changing. Perhaps when I was writing this article, some problem of framework have been solved, or some small problem became worse and worse. We have to review the decision we made from time to time and correct them ASAP if we find the cost is overweight the outcome.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Team with Web Form and Vanilla Js background should starts with Angular 1.4 and take some time to be familiar with Node.js tools&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Team with Vanilla Js background should start to learn ES 6 or TypeScript, since sooner or later all the browsers, including mobile devices, will support ES 6 or TypeScript.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Teamwith ES6 /TypeScript background can choose any framework you prefer, the integration with other UI library will take you some time to make a judgement.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Teamwith React-Flux can continue or switch to React-Redux. It maybe reduces some boiler code, but I don’t think it is a big deal.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;For the newcomer of React, I will recommand React-Redux, because it has better community support.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In my opinion, if you continue to invest anything on Angular 2, it is a bit waste, because Angular team hopes you to move to Angular 4 as soon as possible once Angular 4 is ready for production, and they are planning to fix Angular 2’s issues in Angular 4.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Angular 4 and its ecosystem are under active development, but please be careful if you want to use them in your production.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Vue.js framework is a very nice one. Give a go on your next project.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu 16 server note</title>
      <link>https://harryho.github.io/os/ubuntu-server-16/</link>
      <pubDate>Thu, 04 May 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/ubuntu-server-16/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup Ubuntu 16 LTS Server. If you are looking for the information for Ubuntu 14, please go to the page &lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14/&#34;&gt;Ubuntu 14 server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with Ubuntu, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with basic bash/shell command&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-ubuntu-server&#34;&gt;Things to do after installing Ubuntu server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;ufw-setup&#34;&gt;UFW setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ufw enable
sudo ufw allow 80/tcp
sudo ufw allow ssh
sudo ufw allow 443/tcp
sudo ufw allow 8000/tcp
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!!! For production environment, SSH should be secured by the CA&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install openssh-server 

# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.factory-defaults
sudo chmod a-w /etc/ssh/sshd_config.factory-defaults

# use any editor to update sshd_config 
sudo nano /etc/ssh/sshd_config 

# uncomment  PasswordAuthentication yes to allow remote password login
# Password authentication is only for test environment

# setup ssh auto-start onboot
sudo update-rc.d ssh defaults
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-the-software-properties-common-package&#34;&gt;!!! Install the software-properties-common Package&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install software-properties-common python-software-properties
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;time-zone-setup&#34;&gt;Time Zone setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo dpkg-reconfigure tzdata
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tmux&#34;&gt;Install tmux&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install tmux

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Most useful tmux commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Ctrl+b &amp;ldquo; — split pane horizontally.&lt;/p&gt;

&lt;p&gt;Ctrl+b % — split pane vertically.&lt;/p&gt;

&lt;p&gt;Ctrl+b arrow key — switch pane.&lt;/p&gt;

&lt;p&gt;Hold Ctrl+b, don’t release it and hold one of the arrow keys — resize pane.&lt;/p&gt;

&lt;p&gt;Ctrl+b c — &amp;copy;reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b , — rename reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b n — move to the (n)ext window.&lt;/p&gt;

&lt;p&gt;Ctrl+b p — move to the (p)revious window.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-git&#34;&gt;Install git&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:git-core/ppa
sudo apt-get update
sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ce-ubuntu-16-lts&#34;&gt;install docker CE (Ubuntu 16 LTS)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
# Update the apt package index
sudo apt-get update

# Install packages to allow apt to use a repository over HTTPS
sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common

# Add Docker’s official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -



# Verify the last 8 characters of the fingerprint.
sudo apt-key fingerprint xxxxxxxx


#   set up the stable repository
sudo add-apt-repository \
   &amp;quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable&amp;quot;

# apt update 
sudo apt-get update

# install docker CE
sudo apt-get install docker-ce

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;Install JDK 8&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Downlaod the JDK from Oracle website.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer

java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup environment&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install oracle-java8-set-default

sudo su
cat &amp;gt;&amp;gt; /etc/environment &amp;lt;&amp;lt;EOL
JAVA_HOME=/usr/lib/jvm/java-8-oracle
JRE_HOME=/usr/lib/jvm/java-8-oracle/jre
EOL
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test JDK with a simple HelloWorld program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Calendar;

class HelloWorld {
    public static void main(String[] args) {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1;
        int day = cal.get(Calendar.DATE);
        int hour = cal.get(Calendar.HOUR_OF_DAY);
        int minute = cal.get(Calendar.MINUTE);
        String username = System.getProperty(&amp;quot;user.name&amp;quot;);
        System.out.println(username+ &amp;quot;: Hello World! &amp;quot;);
        System.out.println(year + &amp;quot;/&amp;quot; + month + &amp;quot;/&amp;quot; + day + &amp;quot; &amp;quot; + hour + &amp;quot;:&amp;quot; + minute);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile and run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;javac HelloWorld.java
java HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;Install nodejs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Nodejs 8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -
sudo apt-get install -y nodejs

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install latest npm, yarn and ts&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install -g npm
sudo npm install -g typescript
sudo mpm install -g yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php&#34;&gt;Install PHP&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Add new repo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y python-software-properties
sudo add-apt-repository -y ppa:ondrej/php
sudo apt-get update -y

apt-cache pkgnames | grep php7.2
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 1: Install LAMP stack&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y apache2
sudo apt-get install -y php7.2 libapache2-mod-php7.2 php7.2-cli php7.2-common \
    php7.2-mbstring php7.2-gd php7.2-intl php7.2-xml php7.2-mysql php7.1-mcrypt php7.2-zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 2: Install LEMP stack&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install -y nginx
sudo apt-get install -y php7.2 php7.2-fpm php7.2-cli php7.2-common php7.2-mbstring \
    php7.2-gd php7.2-intl php7.2-xml php7.2-mysql php7.1-mcrypt php7.2-zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Disable Apache and Nginx if you install both&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl disable apache2.service
sudo systemctl disable nginx.service 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-python2-python3&#34;&gt;Install Python2, Python3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ubuntu has python2 installed by default&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get python-pip 
sudo apt-get install python3-pip
sudo apt-get install python3-dev python-dev

### Install virtualenv 
sudo pip install virtualenv
sudo pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Go&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://storage.googleapis.com/golang/go1.4.linux-amd64.tar.gz


# check hash
shasum -a 256 go*linux-amd64.tar.gz

# install tar ball
sudo tar -C /usr/local -xvzf go1.9.2.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOROOT by overwriting the file &lt;code&gt;/etc/environment&lt;/code&gt; with following content&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;PATH=&amp;quot;/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&amp;quot;
JAVA_HOME=&amp;quot;/usr/lib/jvm/java-8-oracle&amp;quot;
JRE_HOME=&amp;quot;/usr/lib/jvm/java-8-oracle/jre&amp;quot;
GOROOT=&amp;quot;/usr/local/go&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOPATH by adding following lines to the end of &lt;code&gt;.profile&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOPATH=&amp;quot;$HOME/ws/go&amp;quot;
export GOBIN=&amp;quot;$GOPATH/bin&amp;quot;
export PATH=&amp;quot;$GOPATH/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple &lt;code&gt;hello.go&lt;/code&gt; file to test&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main                                                        
                                                                    
import (                                                            
    &amp;quot;fmt&amp;quot;                                                           
    &amp;quot;log&amp;quot;                                                           
    &amp;quot;os/user&amp;quot;                                                       
)

func main(){                                                        
    user, err := user.Current()                                 
    if err != nil {                                             
        log.Fatal(err)                                      
    }                                                                 
    fmt.Printf(user.Name + &amp;quot; said : Hello World! \n&amp;quot; )      
}                                                                   
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run $GOPATH/src/hello.go
go install $GOPATH/src/hello.go
$GOBIN/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-clang-cmake&#34;&gt;Install clang &amp;amp; cmake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install clang
sudo apt-get install cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;Install Rust&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl -f -L https://static.rust-lang.org/rustup.sh -O
$ sh rustup.sh
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>_dummy</title>
      <link>https://harryho.github.io/index/_dummy/</link>
      <pubDate>Thu, 16 Feb 2017 11:47:59 +1100</pubDate>
      
      <guid>https://harryho.github.io/index/_dummy/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create a blog site on GitHub Pages</title>
      <link>https://harryho.github.io/article/create-a-blog-on-github-pages/</link>
      <pubDate>Wed, 15 Feb 2017 14:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/create-a-blog-on-github-pages/</guid>
      <description>

&lt;p&gt;&lt;em&gt;After I setup a blog site with Hugo on my ubuntu machine, I decided to use it to create a blog to GitHub pages on my windows machine, since I use Windows machine as workstation. If you use Unix-style system, I pretty sure you can follow the &lt;a href=&#34;https://gohugo.io/overview/quickstart/&#34;&gt;Hugo Quick Start&lt;/a&gt; and &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog&#34;&gt;Hosting on GitHub Pages&lt;/a&gt; to create a blog to GitHub pages within 5 mins, but when I try to do the same on Windows machine, it took me over 30 mins. I hope this blog can help someone want to do sth similar within Windows environment.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You already have &lt;em&gt;Hugo&lt;/em&gt; on your computer. If not, please follow the instruction to &lt;a href=&#34;https://gohugo.io/tutorials/installing-on-windows&#34;&gt;install hugo on Windows&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You will have two repositories &lt;code&gt;blog-hugo&lt;/code&gt; and &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; repositories to hold your hugo content and blog site respectively.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;blog-hugo&lt;/code&gt; repository will host actual Hugo’s blog content.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;username&amp;gt;.github.io repository&lt;/code&gt; repository will host the static website.&lt;/li&gt;
&lt;li&gt;Your &lt;em&gt;Hugo&lt;/em&gt; blog folder will be &amp;ldquo;C:\git\blog-hugo&amp;rdquo; in this example.&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Your blog site will finally sit in C driver and map to repositories as follow&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\&amp;gt;
|--git 
    |--blog-hugo (https://github.com/&amp;lt;yourname&amp;gt;/blog-hugo.git
        |--archetypes
        |--content
        |--data
        |--layouts
        |--public (https://github.com/&amp;lt;yourname&amp;gt;/&amp;lt;yourname&amp;gt;.github.io.git)
        |--themes
        |--

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;create-a-blog-site-on-github-pages&#34;&gt;Create a blog site on GitHub pages&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create on GitHub blog-hugo and &lt;username&gt;.github.io repositories  repository via GitHub website&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clone blog-hugo via Windows command prompt&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;c:\&amp;gt;
c:\&amp;gt;cd git
c:\git&amp;gt;git clone &amp;lt;&amp;lt;your-project&amp;gt;-hugo-url&amp;gt; &amp;amp;&amp;amp; cd &amp;lt;your-project&amp;gt;-hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create hugo site and setup the theme you like&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\git&amp;gt;hugo new site blog-hugo
C:\git&amp;gt;hugo server -t &amp;lt;yourtheme&amp;gt; -D
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Clean up the &lt;code&gt;public&lt;/code&gt; folder&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Set submodule inside the blog-hugo and map to folder &lt;code&gt;public&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\&amp;gt;cd git
C:\git&amp;gt;rm -rf public
C:\git&amp;gt;git submodule add -b master https://github.com/&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git public
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Deploy the blog site to GitHub page with the script &lt;code&gt;deploy.bat&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;deploy.bat &amp;quot;Your optional commit message&amp;quot;&lt;/code&gt; will commit the changes to &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;. You can use and tailor the script below as your &lt;code&gt;deploy.bat&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@echo OFF

echo  Deploying updates to GitHub...

REM Build the project. 
hugo -t &amp;lt;yourtheme&amp;gt; -D

REM Go To Public folder
cd public

REM Add changes to git.
git add -A

REM Commit changes.
set msg=&amp;quot;rebuilding site %date%&amp;quot;
if  NOT &amp;quot;%1&amp;quot;==&amp;quot;&amp;quot;    set msg=%1
git commit -m &#39;%msg%&#39;

REM Push source and build repos.
git push origin master

REM Come Back
cd ..
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You might want to commit the changes to &lt;code&gt;blog-hugo&lt;/code&gt; repository. Please don&amp;rsquo;t forget to add &lt;code&gt;public&lt;/code&gt; into the &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CentOS 7 Server note</title>
      <link>https://harryho.github.io/os/centos-server-7/</link>
      <pubDate>Fri, 03 Feb 2017 10:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/os/centos-server-7/</guid>
      <description>

&lt;p&gt;Prelude&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;This article is mainly to help experienced user install and setup CentOS 7 Server. If you are looking for the information for CentOS 14, please install CentOS desktop version at first, and you can follow &lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14/&#34;&gt;Ubuntu 14 server setup&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;assumption&#34;&gt;Assumption&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You are familiar with CentOS, at least you have some experience working on Linux system.&lt;/li&gt;
&lt;li&gt;You are familiar with basic bash/shell command&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;things-to-do-after-installing-centos-server&#34;&gt;Things to do after installing CentOS server&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;How to setup your server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;firewall-setup&#34;&gt;Firewall setup&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo firewall-cmd --permanent --add-port=22/tcp
sudo firewall-cmd --permanent --add-port=21/tcp
sudo firewall-cmd --permanent --add-port=80/tcp
sudo firewall-cmd --permanent --add-port=443/tcp
sudo firewall-cmd --permanent --add-port=8080/tcp

sudo firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ssh-server-setup&#34;&gt;SSH server setup&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;!!! For production environment, SSH should be secured by the CA&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install SSH if it is not done yet&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# yum install openssh openssh-server openssh-clients openssl-libs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Configure SSH&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# backup default config 
sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.ori
sudo chmod a-w /etc/ssh/sshd_config.ori

# use any editor to update sshd_config 
sudo vi /etc/ssh/sshd_config 

# uncomment PasswordAuthentication yes to allow remote password login
# Password authentication is only for test environment

# setup ssh auto-start onboot
sudo systemctl restart sshd 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;update-time-zone-if-it-is-incorrect&#34;&gt;Update Time Zone if it is incorrect&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ls -l /etc/localtime # check the time zone

sudo timedatectl list | grep New_York # find the time zone by the city
sudo timedatectl set-timezone America/New_York
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-git&#34;&gt;Install Git&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Option 1: You can use &lt;code&gt;yum&lt;/code&gt; to install git, but it is quite out-of-date. The version of git is 1.8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install git
git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Option 2: Download the latest stable release of Git and compile the software from source. (&lt;strong&gt;Recommended&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;install-build-tools&#34;&gt;Install build tools&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &amp;quot;Development Tools&amp;quot;

sudo yum install gettext-devel openssl-devel perl-CPAN perl-devel \
    zlib-devel libcurl-devel expat-devel

sudo yum install yum-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-the-latest-release&#34;&gt;Download the latest release&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;wget https://github.com/git/git/archive/v2.x.x.tar.gz -O git.tar.gz
tar -zxf git.tar.gz
cd git-*
make configure
./configure --prefix=/usr/local
sudo make install
git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-a-better-vim&#34;&gt;Setup a better Vim&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum isntall vim-enhanced

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tmux&#34;&gt;Install Tmux&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install tmux
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Most useful tmux commands&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;Ctrl+b &amp;ldquo; — split pane horizontally.&lt;/p&gt;

&lt;p&gt;Ctrl+b % — split pane vertically.&lt;/p&gt;

&lt;p&gt;Ctrl+b arrow key — switch pane.&lt;/p&gt;

&lt;p&gt;Hold Ctrl+b, don’t release it and hold one of the arrow keys — resize pane.&lt;/p&gt;

&lt;p&gt;Ctrl+b c — &amp;copy;reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b , — rename reate a new window.&lt;/p&gt;

&lt;p&gt;Ctrl+b n — move to the (n)ext window.&lt;/p&gt;

&lt;p&gt;Ctrl+b p — move to the (p)revious window.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;install-python-3&#34;&gt;Install python 3&lt;/h3&gt;

&lt;p&gt;You will only find Python 2 on CentOS by default. In order to install the latest python3, we need to install &lt;code&gt;IUS&lt;/code&gt; to which stands for Inline with Upstream Stable.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum -y install https://centos7.iuscommunity.org/ius-release.rpm
sudo yum -y install python36u

## Install development package
sudo yum -y insall python-devel python36u-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-nodejs&#34;&gt;Install nodejs&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Nodejs 6.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum -y install nodejs
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Nodejs 8.x&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl --silent --location https://rpm.nodesource.com/setup_8.x | sudo bash -
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Upgrade NPM&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo npm install -g npm
sudo npm install -g typescript
sudo mpm install -g yarn
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-docker-ce-centos-7&#34;&gt;install docker CE (CentOS 7)&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# add repo
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

# check docker.list
yum list docker-ce --showduplicates | sort -r

# install docker engine
sudo yum install docker-ce

docker -v 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-jdk-8&#34;&gt;Install JDK 8&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Downlaod the JDK from Oracle website.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt; wget --no-cookies --no-check-certificate --header &amp;quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-secureb ackup-cookie&amp;quot; \ &amp;quot;http://download.oracle.com/otn-pub/java/jdk/8u151-b12/e758a0de34e24606bca991d704f6dcbf/jdk-8u151-linux-x64.rpm&amp;quot;

rpm -Uvh  jdk-8u151-linux-x64.rpm

java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Test JDK with a simple HelloWorld program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Calendar;

class HelloWorld {
    public static void main(String[] args) {
        Calendar cal = Calendar.getInstance();
        int year = cal.get(Calendar.YEAR);
        int month = cal.get(Calendar.MONTH) + 1;
        int day = cal.get(Calendar.DATE);
        int hour = cal.get(Calendar.HOUR_OF_DAY);
        int minute = cal.get(Calendar.MINUTE);
        String username = System.getProperty(&amp;quot;user.name&amp;quot;);
        System.out.println(username+ &amp;quot;: Hello World! &amp;quot;);
        System.out.println(year + &amp;quot;/&amp;quot; + month + &amp;quot;/&amp;quot; + day + &amp;quot; &amp;quot; + hour + &amp;quot;:&amp;quot; + minute);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Compile and run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;javac HelloWorld.java
java HelloWorld.java
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-go&#34;&gt;Install Go&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Install Go&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /tmp
curl -LO https://redirector.gvt1.com/edgedl/go/go1.9.2.linux-amd64.tar.gz

# check hash
shasum -a 256 go*linux-amd64.tar.gz

# install tar ball
sudo tar -C /usr/local -xvzf go1.9.2.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup GOROOT&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /etc/profile.d
# Create a path.sh script
sudo vi path.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Copy following code into &lt;code&gt;path.sh&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;export PATH=$PATH:/usr/local/go/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Setup local GOBIN, GOPATH&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;export GOBIN=&amp;quot;$HOME/projects/go/bin&amp;quot;
export GOPATH=&amp;quot;$HOME/projects/go/src&amp;quot;
export PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Create a simple &lt;code&gt;hello.go&lt;/code&gt; file to test&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package main                                                        
                                                                    
import (                                                            
    &amp;quot;fmt&amp;quot;                                                           
    &amp;quot;log&amp;quot;                                                           
    &amp;quot;os/user&amp;quot;                                                       
)                                                                   
                                                                    
func main(){                                                        
    user, err := user.Current()                                 
    if err != nil {                                             
            log.Fatal(err)                                      
    }                                                            
    fmt.Printf(user.Name + &amp;quot; said : Hello World! \n&amp;quot; )            
}                                                                   
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Run the program&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;go run $GOPATH/hello.go
go install $GOPATH/hello.go
$GOBIN/hello
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-cmake&#34;&gt;Install Cmake&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install epel-release
sudo yum install cmake3
sudo ln -s /usr/bin/cmake3 /usr/bin/cmake
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-rust&#34;&gt;Install Rust&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -f -L https://static.rust-lang.org/rustup.sh -O
sh rustup.sh
rustc --version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-php-7&#34;&gt;Install PHP 7&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;install and enable EPEL and Remi repository&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
sudo yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;install &lt;code&gt;yum-utils&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install yum-utils
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Enable PHP 7 repo&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum-config-manager --enable remi-php72  
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Install PHP&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install php php-mcrypt php-cli php-gd php-curl php-mysql \
    php-ldap php-zip php-fileinfo 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-clang&#34;&gt;Install clang&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum install llvm
sudo yum install clang

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>JIRA Notes</title>
      <link>https://harryho.github.io/article/jira-notes/</link>
      <pubDate>Wed, 11 Jan 2017 11:59:31 +1100</pubDate>
      
      <guid>https://harryho.github.io/article/jira-notes/</guid>
      <description>

&lt;h2 id=&#34;what-is-jira&#34;&gt;What is JIRA&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;Jira is a proprietary issue tracking product, developed by Atlassian. It provides bug tracking, issue tracking, and project management functions. Although normally styled JIRA, the product name is not an acronym, but a truncation of Gojira, the Japanese name for Godzilla,[6] itself a reference to Jira&amp;rsquo;s main competitor, Bugzilla. It has been developed since 2002.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;how-to-work-with-client-within-jira&#34;&gt;How to work with client within JIRA&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;The instruction below is only for the client who has independent JIRA instance. Here I am not going to discuss how to cooperate with multiple clients and projects on the same JIRA instance. IMO, the strategy for that would be case by case.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Your client&amp;rsquo;s business name is ABC. You help them to manage their JIRA. You are the administrator of JIRA instance.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You have created a project for client, named &lt;strong&gt;ABC IT Project&lt;/strong&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;You want to allow the client to access this project on JIRA, but you want to avoid client&amp;rsquo;s unintented update to mess up the project management.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;requirement-of-permission-control&#34;&gt;Requirement of permission control&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;In Agile practice, product owner should attend the&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;change-default-permission-scheme&#34;&gt;Change default permission scheme&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Default permission scheme is the built-in scheme, which you cannot delete it, but you can change it.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Choose &lt;code&gt;Isssues&lt;/code&gt; &amp;gt; &lt;code&gt;Permission schemes&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Change all permissions from &lt;code&gt;Project Access - Any logged in user&lt;/code&gt; to &lt;code&gt;Project role - Administrator&lt;/code&gt; except the following items.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;View Development Tools&lt;/li&gt;
&lt;li&gt;View Read-Only Workflow&lt;/li&gt;
&lt;li&gt;Assignable User&lt;/li&gt;
&lt;li&gt;Delete Own Comments&lt;/li&gt;
&lt;li&gt;Edit Own Comments&lt;/li&gt;
&lt;li&gt;Delete Own Attachments&lt;/li&gt;
&lt;li&gt;Delete Own Worklogs&lt;/li&gt;
&lt;li&gt;Edit Own Worklogs&lt;/li&gt;
&lt;li&gt;Work On Issues&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Copy the default permission scheme and rename it to &lt;code&gt;&amp;lt;client_business_name&amp;gt; Permission Scheme&lt;/code&gt;. In this case it would be &lt;code&gt;ABC Permission Scheme&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Create a new group named &lt;strong&gt;ABC Group&lt;/strong&gt;,&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Update &lt;code&gt;ABC Permission Scheme&lt;/code&gt; by granting &lt;code&gt;ABC Group&lt;/code&gt; to some items.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Browse Projects&lt;/li&gt;
&lt;li&gt;Create Issues&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Update the permission scheme of the project &lt;code&gt;ABC IT Project&lt;/code&gt; from to &lt;code&gt;ABC Permission Scheme&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;change-user-s-group&#34;&gt;Change user&amp;rsquo;s group&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;User management&lt;/code&gt; &amp;gt; &lt;code&gt;User&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Add the ABC&amp;rsquo;s user to group &lt;code&gt;ABC Group&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Remove the user from default &lt;code&gt;jira-software-user&lt;/code&gt; and make sure the checkbox &lt;code&gt;Access JIRA Software&lt;/code&gt; is selected.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;time-tracking-and-estimation&#34;&gt;Time Tracking and Estimation&lt;/h2&gt;

&lt;h3 id=&#34;enable-time-tracking&#34;&gt;Enable Time Tracking&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Choose &lt;code&gt;Issues&lt;/code&gt; &amp;gt; &lt;code&gt;Time Tracking&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Enable the &lt;code&gt;Time Tracking&lt;/code&gt; if it is inactive.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Choose &lt;code&gt;Boards&lt;/code&gt; &amp;gt; &lt;code&gt;View All Boards&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Choose &lt;code&gt;Board Settings&lt;/code&gt; of the board&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Estimation&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Choose &lt;code&gt;Remaining Estimate and Time Spent&lt;/code&gt; as Time Tracking&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Angular 4 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-angular4-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-angular4-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Ng4Crm&lt;/strong&gt; is reusable CRM project for real-world business based on Angular 4, Angular-Material &amp;amp; Bootstrap 3.&lt;/p&gt;

&lt;p&gt;This project starts from a popular starter project &lt;a href=&#34;https://github.com/AngularClass/angular-starter&#34;&gt;AngularClass/AngularStarter&lt;/a&gt;. The goal of this project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This project is built on the top of AngularClass/Angular-Starter.&lt;/li&gt;
&lt;li&gt;The UI part of this project combine Angular-Material and Bootstrap 3. Because the controls from Angular-Material is very limited, there are a few extra components require Bootstrap 3 for help.&lt;/li&gt;
&lt;li&gt;This project includes ng-charts, pagination, progress-bar, confirmation dialog, etc. features.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-ng4crm&#34;&gt;Structure of Ng4Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\ng4crm
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---app
|   |   +---_gurad             &amp;lt;-// auth guard for authentication
|   |   +---_models             &amp;lt;-// common models for whole app
|   |   +---_services            &amp;lt;-// common services for whole app
|   |   +---about                &amp;lt;-// about component   
|   |   +---customer              &amp;lt;-// customer component
|   |   +---dashboard            &amp;lt;-// dashboard component  
|   |   +---notfoundpage         &amp;lt;-// notfoundpage component  
|   |   +---login                &amp;lt;-// login component  
|   |   +---order                &amp;lt;-// customer component 
|   |   +---root                &amp;lt;-// root component 
|   |   +---shared                &amp;lt;-// common component for whole app
|   |   +---app.component.ts
|   |   +---app.module.ts
|   |   +---app.routes.ts
|   |   +---app.services.ts
|   |   +---environment.ts
|   |   \---...
|   +---assets         &amp;lt;-//   images  and css from third parties
|   +---styles         &amp;lt;-//   customized css files
|   +---main.browser.aot.ts     
|   +---main.browser.ts  
|   +---polyfills.browser.ts  
|   \---...
\...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/ng4crm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-ng4crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/ng4crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Vue.js and React. If you have interests in those technical stacks. You can find and clone those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-vue2-crm&#34;&gt;Vue2 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-react-crm&#34;&gt;React Redux Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>CNTK Notes, Part 1</title>
      <link>https://harryho.github.io/dev/cntk-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/cntk-notes-1/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Windows 7 or higher version&lt;/li&gt;
&lt;li&gt;You are using Anaconda to setup the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-cntk-virtual-environment&#34;&gt;Create CNTK virtual environment&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# use follow command to remove existing virtual environment
# conda remove -n cntk --all
conda create -n cntk 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;activate-virtual-environment-and-install-cntk&#34;&gt;Activate virtual environment and install CNTK&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;activate cntk
pip install https://cntk.ai/PythonWheel/CPU-Only/cntk-2.0rc3-cp36-cp36m-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;test-cntk&#34;&gt;Test CNTK&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;python
&amp;gt;&amp;gt;&amp;gt; import cntk
&amp;gt;&amp;gt;&amp;gt; cntk.__version__
&#39;2.0rc3&#39;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Laravel MVC Starter</title>
      <link>https://harryho.github.io/project/laravel-mvc-starter/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/laravel-mvc-starter/</guid>
      <description>

&lt;p&gt;This starter is the starting point of laravel 5 MVC project. This application is meant to be used as a starting place for those looking to get their feet wet with laravel.&lt;/p&gt;

&lt;h2 id=&#34;overview-of-project&#34;&gt;Overview of project&lt;/h2&gt;

&lt;h2 id=&#34;bdd-business-domain-design&#34;&gt;BDD ( Business domain design)&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;+-------+ 0...*     0...* +--------+ 1     0...* +---------+ 
| tag   | --------------- |  post  | ----- ----- | comment |
+-------+                 +--------+             +---------+           
                               | 1...*
                               |
                               | 0...*
                          +--------+ 
                          |  like  |
                          +--------+

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;\path\to\lara-mvc-starter
+---app                 &amp;lt;-// Customized PHP application code
|   +---Console
|   +---Exceptions
|   +---Http
|   |   +---Controllers
|   |   |   \---Auth
|   |   \---Middleware
|   \---Providers
+---bootstrap          &amp;lt;-// bootstrap the framework and configure autoloading
|   \---cache
+---config              &amp;lt;-// application configuration
+---database            &amp;lt;-// database migration files
|   +---factories
|   +---migrations
|   \---seeds
+---public               &amp;lt;-// Distributed website folder including Style sheet
+---resources            &amp;lt;-// View files, Javascripts, localization setting
|   +---assets
|   +---lang
|   \---views
|       +---admin
|       +---blog
|       +---errors
|       +---layouts
|       +---other
|       +---partials
|       \---vendor
|           \---pagination
+---routes              &amp;lt;-// Route definitions and setting
+---storage             &amp;lt;-//Blade templates, file based sessions, file caches
|   +---app
|   |   \---public
|   +---framework
|   |   +---cache
|   |   +---sessions
|   |   \---views
|   \---logs
+---tests
\---vendor            &amp;lt;-// Laravel framework

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/lara-mvc-starter.png&#34; alt=&#34;laravel-mvc-starter&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-lara-mvc-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/lara-mvc-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>React Redux Crm Project</title>
      <link>https://harryho.github.io/project/reetek-react-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-react-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;React-Crm&lt;/strong&gt; is reusable CRM starter project for real-world business based on React 15.4, React-Redux &amp;amp; Material-UI.&lt;/p&gt;

&lt;p&gt;The goal of this starter project is to create reusable project for real-world business. To achieve this target, we need a solution which should include authentication process, restful API feature with token support and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This project is built on the top of React/Redux.&lt;/li&gt;
&lt;li&gt;The UI part of this project uses Material-UI.&lt;/li&gt;
&lt;li&gt;This project uses Redux-Thunk to support backend API.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-react-crm&#34;&gt;Structure of React-Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\ng4crm
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---app
|   |   +---_gurad             &amp;lt;-// auth guard for authentication
|   |   +---_models             &amp;lt;-// common models for whole app
|   |   +---_services            &amp;lt;-// common services for whole app
|   |   +---about                &amp;lt;-// about component   
|   |   +---customer              &amp;lt;-// customer component
|   |   +---dashboard            &amp;lt;-// dashboard component  
|   |   +---notfoundpage         &amp;lt;-// notfoundpage component  
|   |   +---login                &amp;lt;-// login component  
|   |   +---order                &amp;lt;-// customer component 
|   |   +---root                &amp;lt;-// root component 
|   |   +---shared                &amp;lt;-// common component for whole app
|   |   +---app.component.ts
|   |   +---app.module.ts
|   |   +---app.routes.ts
|   |   +---app.services.ts
|   |   +---environment.ts
|   |   \---...
|   +---assets         &amp;lt;-//   images  and css from third parties
|   +---styles         &amp;lt;-//   customized css files
|   +---main.browser.aot.ts     
|   +---main.browser.ts  
|   +---polyfills.browser.ts  
|   \---...
\...

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/rrcrm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-react-crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/react-crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Vue.js and Angular. If you have interests in those technical stacks. You can find and clone those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-vue2-crm/&#34;&gt;Vue2 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-angular4-crm&#34;&gt;Angular4 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 1</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-1/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-1/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Ubuntu 16&lt;/li&gt;
&lt;li&gt;Your machine has Nvidia GPU card installed&lt;/li&gt;
&lt;li&gt;If you are using Ubuntu 14, the installation of CUDA and cuDNN will be a bit different. Please check Google&amp;rsquo;s instructions.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-python3-and-pip3&#34;&gt;Install python3 and pip3&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/os/ubuntu-server-14&#34;&gt;Please find instructions here&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-virtualenv-via-pip3&#34;&gt;Install virtualenv via pip3&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;pip3 install virtualenv
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-two-tensorflow-virtualenvs&#34;&gt;Create two tensorflow virtualenvs.&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir ~/.envs
virtualenv --system-site-packages ~/.envs/tf  # CPU only
virtualenv --system-site-packages ~/.envs/tfgpu   # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-tensorflow-for-different-virtualenvs&#34;&gt;Install tensorflow for different virtualenvs&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tf/bin/activate
source ~/.envs/tfgpu/bin/activate

pip3 install tensorflow # CPU only
pip3 install tensorflow-gpu # GPU enabled
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install-cuda-and-cudnn-for-tensorflow-gpu&#34;&gt;Install CUDA and cuDNN for tensorflow-gpu&lt;/h3&gt;

&lt;h4 id=&#34;use-following-command-to-check-you-gpu-information&#34;&gt;Use following command to check you GPU information&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;lspic -nn | grep &#39;\[03&#39; ]
lshw -numeric -C display

# GPU info sample
# NVIDIA Corporation GM107M [GeForce GTX 850M]
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-nvidia-driver-based-on-above-gpu-info-http-www-geforce-com-drivers&#34;&gt;Download and install Nvidia driver based on above GPU info &lt;a href=&#34;http://www.geforce.com/drivers&#34;&gt;http://www.geforce.com/drivers&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;chmod +x NVIDIA-Linux-xxxx.run
sudo ./NVIDIA-Linux-xxxx.run   
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cuda-from-nvidia-https-developer-nvidia-com-cuda-downloads&#34;&gt;Download and install  CUDA from NVIDIA &lt;a href=&#34;https://developer.nvidia.com/cuda-downloads&#34;&gt;https://developer.nvidia.com/cuda-downloads&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg -i cuda-repo-xxxxx.deb
sudo apt-get udpate
sudo apt-get install cuda
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;setup-cuda-home&#34;&gt;Setup CUDA_HOME&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# CUDA
export CUDA_HOME=/usr/local/cuda-8.0 
export LD_LIBRARY_PATH=${CUDA_HOME}/lib64 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;download-and-install-cudnn-for-cuda-https-developer-nvidia-com-cudnn&#34;&gt;Download and install cuDNN for CUDA &lt;a href=&#34;https://developer.nvidia.com/cudnn&#34;&gt;https://developer.nvidia.com/cudnn&lt;/a&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# extra the cuDNN tar ball
tar -xvf cudnn-8.0
cd cuda 
sudo cp lib64/* /usr/local/cuda-8.0/lib64
sudo cp include/* /usr/local/cuda-8.0/include
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-sample-code-to-test-tensorflow&#34;&gt;Use sample code to test Tensorflow&lt;/h3&gt;

&lt;h4 id=&#34;save-code-below-to-file-test-py&#34;&gt;Save code below to file test.py&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import tensorflow as tf

# Model parameters
W = tf.Variable([.3], tf.float32)
b = tf.Variable([-.3], tf.float32)
# Model input and output
x = tf.placeholder(tf.float32)
linear_model = W * x + b
y = tf.placeholder(tf.float32)
# loss
loss = tf.reduce_sum(tf.square(linear_model - y)) # sum of the squares
# optimizer
optimizer = tf.train.GradientDescentOptimizer(0.01)
train = optimizer.minimize(loss)
# training data
x_train = [1,2,3,4]
y_train = [0,-1,-2,-3]
# training loop
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init) # reset values to wrong
for i in range(1000):
sess.run(train, {x:x_train, y:y_train})

# evaluate training accuracy
curr_W, curr_b, curr_loss  = sess.run([W, b, loss], {x:x_train, y:y_train})
print(&amp;quot;W: %s b: %s loss: %s&amp;quot;%(curr_W, curr_b, curr_loss))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-with-tensorflow-gpu-gpu-enabled&#34;&gt;Test with tensorflow-gpu (GPU enabled)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;source ~/.envs/tfgpu/bin/activate
python3 test.py

# You will probably see the result as follow 
# ....
# name: GeForce GTX 850M
# major: 5 minor: 0 memoryClockRate (GHz) 0.9015
# pciBusID 0000:0a:00.0
# Total memory: 3.95GiB
# Free memory: 3.58GiB
# 2017-04-25 10:25:59.640621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 
# 2017-04-25 10:25:59.640626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y 
# 2017-04-25 10:25:59.640640: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&amp;gt; (device: 0, name: GeForce GTX 850M, pci # bus id: 0000:0a:00.0)
# W: [-0.9999969] b: [ 0.99999082] loss: 5.69997e-11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Tensorflow Notes, Part 2</title>
      <link>https://harryho.github.io/dev/tensorflow-notes-2/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/dev/tensorflow-notes-2/</guid>
      <description>

&lt;h3 id=&#34;assumption&#34;&gt;Assumption&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;You are using Windows 7 or higher version&lt;/li&gt;
&lt;li&gt;You are using Anaconda to setup the environment&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-anaconda&#34;&gt;Install Anaconda&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.continuum.io/downloads&#34;&gt;Please download Anaconda from the official site&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-tensorflow-virtualenv-with-python-3-5&#34;&gt;Create tensorflow virtualenv with python 3.5&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Anaconda uses python 3.6 by default. Tensorflow only supports python 3.5.&lt;/p&gt;

&lt;p&gt;cd /path/to/envs
conda create -n tensorflow&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;install-tensorflow&#34;&gt;Install tensorflow&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;activate tensorflow
# For CPU
pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/cpu/tensorflow-1.1.0-cp35-cp35m-win_amd64.whl

# Or for GPU
pip install --ignore-installed --upgrade https://storage.googleapis.com/tensorflow/windows/gpu/tensorflow_gpu-1.1.0-cp35-cp35m-win_amd64.whl
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;use-sample-code-to-test-tensorflow&#34;&gt;Use sample code to test Tensorflow&lt;/h3&gt;

&lt;h4 id=&#34;save-code-below-to-file-test-py&#34;&gt;Save code below to file test.py&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
import tensorflow as tf

# Model parameters
W = tf.Variable([.3], tf.float32)
b = tf.Variable([-.3], tf.float32)
# Model input and output
x = tf.placeholder(tf.float32)
linear_model = W * x + b
y = tf.placeholder(tf.float32)
# loss
loss = tf.reduce_sum(tf.square(linear_model - y)) # sum of the squares
# optimizer
optimizer = tf.train.GradientDescentOptimizer(0.01)
train = optimizer.minimize(loss)
# training data
x_train = [1,2,3,4]
y_train = [0,-1,-2,-3]
# training loop
init = tf.global_variables_initializer()
sess = tf.Session()
sess.run(init) # reset values to wrong
for i in range(1000):
sess.run(train, {x:x_train, y:y_train})

# evaluate training accuracy
curr_W, curr_b, curr_loss  = sess.run([W, b, loss], {x:x_train, y:y_train})
print(&amp;quot;W: %s b: %s loss: %s&amp;quot;%(curr_W, curr_b, curr_loss))
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;test-with-tensorflow-gpu-gpu-enabled&#34;&gt;Test with tensorflow-gpu (GPU enabled)&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;activate tensorflow
cd /ws/python/tf
python3 test.py

# You will probably see the result as follow 
# ....
# name: GeForce GTX 850M
# major: 5 minor: 0 memoryClockRate (GHz) 0.9015
# pciBusID 0000:0a:00.0
# Total memory: 3.95GiB
# Free memory: 3.58GiB
# 2017-04-25 10:25:59.640621: I tensorflow/core/common_runtime/gpu/gpu_device.cc:908] DMA: 0 
# 2017-04-25 10:25:59.640626: I tensorflow/core/common_runtime/gpu/gpu_device.cc:918] 0:   Y 
# 2017-04-25 10:25:59.640640: I tensorflow/core/common_runtime/gpu/gpu_device.cc:977] Creating TensorFlow device (/gpu:0) -&amp;gt; (device: 0, name: GeForce GTX 850M, pci # bus id: 0000:0a:00.0)
# W: [-0.9999969] b: [ 0.99999082] loss: 5.69997e-11
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Vue 2 Admin Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-admin/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-admin/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Vue2Admin&lt;/strong&gt; is a fully responsive admin template that is inspired by &lt;a href=&#34;https://almsaeedstudio.com&#34;&gt;AdminLTE&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This template is built-in with Vue 2 at the start.&lt;/li&gt;
&lt;li&gt;It include Vue Resource, Vuex as well.&lt;/li&gt;
&lt;li&gt;The plugins for this project are loaded with script loader.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-reetek-vue2admin&#34;&gt;Structure of Reetek Vue2Admin&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\vue2admin
+---build              &amp;lt;-// webpack files
+---config             &amp;lt;-// configuration of dev or prod environment
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---components
|   |   +---charts
|   |   +---dashboard
|   |   +---forms
|   |   +---mailbox
|   |   +---misc
|   |   +---pages
|   |   +---tables
|   |   +---ui
|   |   \---widget
|   \---filters
+---static              &amp;lt;-// css, dump data, fonts, image files and plugins
|   +---css
|   +---data
|   +---fonts
|   +---img
|   |   +---credit
|   |   \---stock
|   \---js
|       \---plugins         &amp;lt;-// plugins for admin dashboard 
|           +---AdminLTE
|           +---bootstrap
|           +---bootstrap-slider
|           +---bootstrap-wysihtml5
|           +---chartjs
|           +---ckeditor
|           + ...
\---test
    +---e2e
    \---unit
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/vue2admin_screenshot1_sm.png&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/vue2admin_screenshot2_sm.png&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;browse-repository-https-github-com-harryho-vue2admin-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/vue2admin.git&#34;&gt;Repository&lt;/a&gt;&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Vue 2 Crm Project</title>
      <link>https://harryho.github.io/project/reetek-vue2-crm/</link>
      <pubDate>Wed, 07 Dec 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/reetek-vue2-crm/</guid>
      <description>

&lt;p&gt;&lt;strong&gt;Vue2Crm&lt;/strong&gt; is a reusable Vue.js CRM starter project for real-world business based on Vue 2 PWA template with Vuetify.&lt;/p&gt;

&lt;p&gt;The goal of this project is to create a reusable project for real-world business. To achieve this target, we need a solution which includes authentication process, restful API feature and simple but elegant UI design.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter project is built-in with Vue 2 PWA from scratch.&lt;/li&gt;
&lt;li&gt;The whole UI is built on the Vuetify&lt;/li&gt;
&lt;li&gt;It includes Vuex, Axios as well.&lt;/li&gt;
&lt;li&gt;It uses Json-Server as fake Restful API. (You can simple replace it with your own API)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-vue2crm&#34;&gt;Structure of Vue2Crm&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;path\to\vue2crm
+---build              &amp;lt;-// webpack files
+---config             &amp;lt;-// configuration of dev or prod environment
+---db                 &amp;lt;-// json files for json-server
|   +---db.json        &amp;lt;-// dummy db
|   \---routes.json    &amp;lt;-// configure fake restful api
+---screenshots
+---src                &amp;lt;-// vue components 
|   +---components
|   |   +---404.vue
|   |   +---About.vue
|   |   +---Customers.vue
|   |   +---Customer.vue
|   |   +---Orders.vue
|   |   +---Order.vue
|   |   +---Login.vue
|   |   \---...
|   +---router         &amp;lt;-// vue-router
|   +---utils
|   |   +---auth.js    &amp;lt;-// auth service
|   |   +---backend-api.js  &amp;lt;-// Axios instance 
|   |   +---store.js   &amp;lt;-//  Vuex
|   \---stylus         &amp;lt;-// Customize stylus
+---static              &amp;lt;-// css, fonts, image files
|   +---img
|   \---manifest.json   &amp;lt;-// PWA manifest file
\---test
    +---e2e
    \---unit

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-1.jpg&#34; alt=&#34;Screenshot1&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-2.jpg&#34; alt=&#34;Screenshot2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-3.jpg&#34; alt=&#34;Screenshot3&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://harryho.github.io/img/v2crm-screenshot-4.jpg&#34; alt=&#34;Screenshot4&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;browse-repository-https-github-com-harryho-vue2crm-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/vue2crm.git&#34;&gt;Repository&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There are two similar projects respectively built on the Angular and React. If you have interests in those technical stacks. You can find those projects below.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-angular4-crm&#34;&gt;Angular4 Crm&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://harryho.github.io/project/reetek-react-crm&#34;&gt;React Redux Crm&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Angularjs Webpack ES6 Starter</title>
      <link>https://harryho.github.io/project/angularjs-webpack-es6-starter/</link>
      <pubDate>Tue, 15 Nov 2016 16:56:21 +1100</pubDate>
      
      <guid>https://harryho.github.io/project/angularjs-webpack-es6-starter/</guid>
      <description>

&lt;p&gt;This starter was inspired by another similar angular webpack starter repository. It simply includes font-awesome, bootstrap for the people who don&amp;rsquo;t want to use boostrap-webpack, font-awesome-webpack. I find it saves us so much effort to create prototype, since we don&amp;rsquo;t need spectacular UI.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This starter uses angular 1.5 for someone want to build component.&lt;/li&gt;
&lt;li&gt;This repo followes mvc patterns instead of component pattern.&lt;/li&gt;
&lt;li&gt;ES6, and ES7 support with babel.&lt;/li&gt;
&lt;li&gt;Development server with live reload.&lt;/li&gt;
&lt;li&gt;Production builds with cache busting.&lt;/li&gt;
&lt;li&gt;Testing environment using karma to run tests and jasmine as the framework.&lt;/li&gt;
&lt;li&gt;Code coverage when tests are run.&lt;/li&gt;
&lt;li&gt;Include font-awesome without font-awesome-loader.&lt;/li&gt;
&lt;li&gt;Include Bootstrap 3 without bootstrap-loader.&lt;/li&gt;
&lt;li&gt;No gulp and no grunt, just npm scripts.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;structure-of-starter&#34;&gt;Structure of starter&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;
\path\to\angularjs-webpack-es6-starter
|   .babelrc                                    &amp;lt;-// default setting es2015.
|   karma.conf.js                               &amp;lt;-// tests and report setup 
|   webpack.config.js                           &amp;lt;-// webpack config
\---src
    |   tests.webpack.js
    |   
    +---app
    |   |   app.html                            &amp;lt;-// app view
    |   |   app.js                              &amp;lt;-// app module
    |   |   app.routes.js                       &amp;lt;-// app route to manage all routes 
    |   |   app.runner.js                       &amp;lt;-// app runner for state change enhancement  
    |   |   app.spec.js                         &amp;lt;-// app spec file for testing 
    |   |   
    |   +---common                              &amp;lt;-// common module for whole app
    |   |   |   common.js
    |   |   |   common.spec.js
    |   |   +---directives                      &amp;lt;-// common directives for whole app
    |   |   |       appUiDirectives.js
    |   |   |       appUiDirectives.spec.js
    |   |   |       commonDirectives.js
    |   |   |       commonDirectives.spec.js
    |   |   +---services                        &amp;lt;-// common views for whole app
    |   |   |       ApiService.js
    |   |   |       ApiService.spec.js
    |   |   |       UtilService.js
    |   |   |       UtilService.spec.js
    |   |   \---views                           &amp;lt;-// contains common views
    |   |           footer-view.html
    |   |           header-view.html
    |   |           sidebar-view.html
    |   |           topbar-view.html
    |   \---main                                &amp;lt;-// built-in fonts, css, images 
    |       \---dashboard
    |           +---controllers
    |           |       dashboardController.js
    |           |       dashboardController.spec.js
    |           \---views
    |                   dashboard-view.html
    |                   
    +---public                                  &amp;lt;-// built-in fonts, css, images 
    |   |   index.html
    |   +---fonts
    |   |   +--- ...
    |   \---img
    |       +--- favicon.ico
    \---style                                  &amp;lt;-// css files including customized css
           
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;browse-repository-https-github-com-harryho-angularjs-webpack-es6-starter-git&#34;&gt;Browse &lt;a href=&#34;https://github.com/harryho/angularjs-webpack-es6-starter.git&#34;&gt;Repository&lt;/a&gt;&lt;/h3&gt;
</description>
    </item>
    
  </channel>
</rss>